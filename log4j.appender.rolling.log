02-03-25 17:11:59,798 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
02-03-25 17:11:59,799 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
02-03-25 17:11:59,807 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
02-03-25 17:12:00,023 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
02-03-25 17:12:00,023 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
02-03-25 17:12:00,023 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@429f7919] under count; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@529c2a9a] under every; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3c87fdf2] under any; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
02-03-25 17:12:00,038 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71c17a57] under sinh; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@640ab13c] under cosh; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e0a864d] under tanh; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@440e3ce6] under pi; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e67f5f2] under log; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
02-03-25 17:12:00,054 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@329bad59] under position; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7654f833] under overlay; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@f4a3a8d] under trim; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2c88a3e8] under cast; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68ac9ec5] under collate; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@65f651eb] under extract; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@24f870ee] under ifnull; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
02-03-25 17:12:00,070 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1886991b] under pad; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3bbf6abe] under str; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@44065156] under format; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@32177fa5] under timestampadd; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1d12e953] under timestampdiff; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a8a4e0c] under current_date; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26c89563] under current_time; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3bd6ba24] under current_timestamp; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f437b0] under local_date; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20f6f88c] under local_time; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4277127c] under local_datetime; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4c7e978c] under offset_datetime; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@354e7004] under instant; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2687725a] under sql; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e67f5f2
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2e1ddc90] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5b7c8930] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
02-03-25 17:12:00,085 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58867cd5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@329bad59
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
02-03-25 17:12:00,101 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5434e40c] under trunc; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b48e183] under bitand; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@514de325] under bitor; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30c1da48] under bitxor; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43a65cd8] under bitnot; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3f1ef9d6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@44065156
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@20f6f88c
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@4277127c
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17461db] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@440e3ce6
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fd9e827] under chr; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e682398] under sysdate; prior registration was null
02-03-25 17:12:00,116 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5b3bb1f7] under listagg; prior registration was null
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | avg(arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Date curdate()
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Date current date
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Time current time
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Date current_date
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Time current_time
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Time curtime()
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Instant instant
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
02-03-25 17:12:00,132 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double pi
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Object sql
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String str(arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | sum(arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String time(arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Date utc_date
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Time utc_time
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
02-03-25 17:12:00,148 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
02-03-25 17:12:00,163 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
02-03-25 17:12:00,179 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
02-03-25 17:12:00,308 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
02-03-25 17:12:00,324 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
02-03-25 17:12:00,324 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
02-03-25 17:12:00,324 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
02-03-25 17:12:00,324 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
02-03-25 17:12:00,362 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
02-03-25 17:12:00,370 | TRACE | batch                | Using standard BatchBuilder (1)
02-03-25 17:12:00,377 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
02-03-25 17:12:00,380 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
02-03-25 17:12:00,386 | DEBUG | creation             | Starting post-init callbacks
02-03-25 17:12:00,408 | TRACE | MetadataContext      | Wrapping up metadata context...
02-03-25 17:12:00,424 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
02-03-25 17:12:00,424 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
02-03-25 17:12:00,424 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
02-03-25 17:12:00,426 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
02-03-25 17:12:00,440 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02-03-25 17:12:00,440 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-03-25 17:12:00,448 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@377008df] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@75e09567]
02-03-25 17:12:00,448 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
02-03-25 17:12:00,448 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
02-03-25 17:12:00,495 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
02-03-25 17:12:00,495 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
02-03-25 17:12:00,511 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@62b790a5
02-03-25 17:12:00,511 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: a01e887c-c585-4e47-aa48-d6f05e267f56 (<unnamed>)
02-03-25 17:12:00,511 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
02-03-25 17:12:00,511 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@75e09567] for TypeConfiguration
02-03-25 17:12:00,512 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
02-03-25 17:12:00,513 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
02-03-25 17:12:00,614 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
02-03-25 17:12:00,632 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
02-03-25 17:12:00,656 | TRACE | SessionImpl          | Opened Session [c3e25ae9-6ab8-4345-b7a3-c0e287b4bfba] at timestamp: 1740946320655
02-03-25 17:12:00,658 | TRACE | SessionImpl          | Closing session [c3e25ae9-6ab8-4345-b7a3-c0e287b4bfba]
02-03-25 17:12:00,658 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@19a20bb2]
02-03-25 17:12:00,659 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
02-03-25 17:12:00,660 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
02-03-25 17:12:00,660 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
02-03-25 17:12:00,660 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
02-03-25 17:12:00,661 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 17:12:00,661 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@75e09567] for TypeConfiguration
02-03-25 17:12:00,662 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@69cd1085] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@75e09567]
02-03-25 17:12:00,662 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
02-03-25 17:12:00,662 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
02-03-25 17:12:00,669 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
02-03-25 18:36:33,417 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
02-03-25 18:36:33,431 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
02-03-25 18:36:33,432 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
02-03-25 18:36:33,487 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml
02-03-25 18:36:33,714 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
02-03-25 18:36:33,719 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
02-03-25 18:36:33,721 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
02-03-25 18:36:33,721 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
02-03-25 18:36:33,722 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
02-03-25 18:36:33,722 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
02-03-25 18:36:33,737 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		model.Aluguel
		model.Bicicleta
		model.Cliente
		model.Usuario]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
02-03-25 18:36:33,745 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
02-03-25 18:36:33,754 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
02-03-25 18:36:33,779 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
02-03-25 18:36:33,780 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 18:36:33,780 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
02-03-25 18:36:33,780 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 18:36:33,780 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 18:36:33,781 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
02-03-25 18:36:33,783 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
02-03-25 18:36:33,784 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
02-03-25 18:36:33,785 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
02-03-25 18:36:33,786 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
02-03-25 18:36:33,787 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
02-03-25 18:36:33,788 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
02-03-25 18:36:33,788 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
02-03-25 18:36:33,790 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
02-03-25 18:36:33,790 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
02-03-25 18:36:33,790 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
02-03-25 18:36:33,791 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
02-03-25 18:36:33,792 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
02-03-25 18:36:33,793 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
02-03-25 18:36:33,794 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
02-03-25 18:36:33,794 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
02-03-25 18:36:33,796 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
02-03-25 18:36:33,796 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
02-03-25 18:36:33,797 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
02-03-25 18:36:33,798 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
02-03-25 18:36:33,799 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
02-03-25 18:36:33,800 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
02-03-25 18:36:33,801 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
02-03-25 18:36:33,802 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
02-03-25 18:36:33,859 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
02-03-25 18:36:33,862 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
02-03-25 18:36:33,891 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
02-03-25 18:36:33,898 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
02-03-25 18:36:33,903 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
02-03-25 18:36:33,911 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
02-03-25 18:36:33,912 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
02-03-25 18:36:33,913 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
02-03-25 18:36:33,913 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
02-03-25 18:36:33,914 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
02-03-25 18:36:33,916 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
02-03-25 18:36:33,916 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
02-03-25 18:36:33,918 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
02-03-25 18:36:33,919 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
02-03-25 18:36:33,920 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
02-03-25 18:36:33,920 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
02-03-25 18:36:33,921 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
02-03-25 18:36:33,945 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 18:36:33,947 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
02-03-25 18:36:33,949 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
02-03-25 18:36:33,951 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
02-03-25 18:36:34,238 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 18:36:34,240 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 18:36:34,241 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 18:36:34,241 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@61a88b8c
02-03-25 18:36:34,241 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@61a88b8c
02-03-25 18:36:34,241 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@22295ec4
02-03-25 18:36:34,241 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@22295ec4
02-03-25 18:36:34,241 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5adb0db3
02-03-25 18:36:34,242 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5adb0db3
02-03-25 18:36:34,242 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 18:36:34,242 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 18:36:34,242 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 18:36:34,243 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 18:36:34,243 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 18:36:34,243 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 18:36:34,244 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7241a47d
02-03-25 18:36:34,244 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7241a47d
02-03-25 18:36:34,244 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@70f59913
02-03-25 18:36:34,244 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@77258e59
02-03-25 18:36:34,244 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@77258e59
02-03-25 18:36:34,245 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5dcd8c7a
02-03-25 18:36:34,245 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2250b9f2
02-03-25 18:36:34,245 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 18:36:34,245 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 18:36:34,245 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 18:36:34,245 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 18:36:34,245 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 18:36:34,246 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 18:36:34,246 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 18:36:34,246 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 18:36:34,246 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 18:36:34,246 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 18:36:34,246 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 18:36:34,247 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 18:36:34,247 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 18:36:34,247 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 18:36:34,247 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 18:36:34,247 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@8dbfffb
02-03-25 18:36:34,248 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@8dbfffb
02-03-25 18:36:34,248 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f316aeb
02-03-25 18:36:34,249 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f316aeb
02-03-25 18:36:34,249 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 18:36:34,249 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 18:36:34,249 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 18:36:34,249 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@a22cb6a
02-03-25 18:36:34,249 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@5dd1c9f2
02-03-25 18:36:34,250 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5dd1c9f2
02-03-25 18:36:34,250 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@59b38691
02-03-25 18:36:34,250 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 18:36:34,250 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 18:36:34,251 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 18:36:34,251 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@324a0017
02-03-25 18:36:34,252 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@6187d1f5
02-03-25 18:36:34,252 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2445445a
02-03-25 18:36:34,252 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@7502291e
02-03-25 18:36:34,252 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7502291e
02-03-25 18:36:34,252 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@17aad511
02-03-25 18:36:34,252 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@17aad511
02-03-25 18:36:34,252 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@487db668
02-03-25 18:36:34,252 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@46944ca9
02-03-25 18:36:34,253 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22bac7bc
02-03-25 18:36:34,254 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63798ca7
02-03-25 18:36:34,254 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4612b856
02-03-25 18:36:34,256 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@22875539
02-03-25 18:36:34,258 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5674e1f2
02-03-25 18:36:34,261 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5674e1f2
02-03-25 18:36:34,261 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@79c7532f
02-03-25 18:36:34,261 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@79c7532f
02-03-25 18:36:34,261 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2a448449
02-03-25 18:36:34,261 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2a448449
02-03-25 18:36:34,261 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@32f232a5
02-03-25 18:36:34,262 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@32f232a5
02-03-25 18:36:34,262 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@43f82e78
02-03-25 18:36:34,262 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@43f82e78
02-03-25 18:36:34,262 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e54303
02-03-25 18:36:34,262 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e8df99a
02-03-25 18:36:34,262 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2dc995f4
02-03-25 18:36:34,262 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2dc995f4
02-03-25 18:36:34,262 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2f40e5db
02-03-25 18:36:34,263 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@517566b
02-03-25 18:36:34,263 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@64b73e7a
02-03-25 18:36:34,263 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@530712d
02-03-25 18:36:34,263 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@530712d
02-03-25 18:36:34,263 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2df6226d
02-03-25 18:36:34,263 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12ed9db6
02-03-25 18:36:34,263 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@4ff4357f
02-03-25 18:36:34,264 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ff4357f
02-03-25 18:36:34,264 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@49cb9cb5
02-03-25 18:36:34,264 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49cb9cb5
02-03-25 18:36:34,264 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 18:36:34,264 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 18:36:34,264 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 18:36:34,264 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 18:36:34,264 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 18:36:34,265 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 18:36:34,266 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45fd9a4d
02-03-25 18:36:34,266 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@50468873
02-03-25 18:36:34,267 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@146587a2
02-03-25 18:36:34,267 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@146587a2
02-03-25 18:36:34,267 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 18:36:34,267 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 18:36:34,267 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 18:36:34,267 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@76884e4b
02-03-25 18:36:34,267 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@126945f9
02-03-25 18:36:34,268 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@2a898881
02-03-25 18:36:34,268 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2a898881
02-03-25 18:36:34,268 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 18:36:34,268 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 18:36:34,268 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 18:36:34,268 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@35229f85
02-03-25 18:36:34,268 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@35229f85
02-03-25 18:36:34,269 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d3c5255
02-03-25 18:36:34,269 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d3c5255
02-03-25 18:36:34,269 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@b1712f3
02-03-25 18:36:34,269 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@b1712f3
02-03-25 18:36:34,269 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6986bbaf
02-03-25 18:36:34,269 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6986bbaf
02-03-25 18:36:34,269 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@4879dfad
02-03-25 18:36:34,269 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4879dfad
02-03-25 18:36:34,270 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@4758820d
02-03-25 18:36:34,270 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@74eb909f
02-03-25 18:36:34,279 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@1e0f9063
02-03-25 18:36:34,279 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e0f9063
02-03-25 18:36:34,281 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@2d96543c
02-03-25 18:36:34,282 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@73a2e526
02-03-25 18:36:34,282 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7d64e326
02-03-25 18:36:34,282 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@13f95696
02-03-25 18:36:34,282 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@cd1d761
02-03-25 18:36:34,283 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68be8808
02-03-25 18:36:34,283 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@32193bea
02-03-25 18:36:34,283 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6b8d96d9
02-03-25 18:36:34,283 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@69653e16
02-03-25 18:36:34,286 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
02-03-25 18:36:34,289 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
02-03-25 18:36:34,295 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@30b19518] into BootstrapContext; was [null]
02-03-25 18:36:34,295 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@363042d7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@366ac49b]
02-03-25 18:36:34,503 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
02-03-25 18:36:34,503 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
02-03-25 18:36:34,525 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
02-03-25 18:36:34,526 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
02-03-25 18:36:34,528 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
02-03-25 18:36:34,536 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 18:36:34,537 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
02-03-25 18:36:34,537 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 18:36:34,547 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
02-03-25 18:36:34,559 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
02-03-25 18:36:34,559 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
02-03-25 18:36:34,559 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
02-03-25 18:36:34,559 | INFO  | pooling              | HHH10001003: Autocommit mode: false
02-03-25 18:36:34,564 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
02-03-25 18:36:34,564 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
02-03-25 18:36:35,567 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
02-03-25 18:36:35,599 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
02-03-25 18:36:35,599 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
02-03-25 18:36:35,599 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
02-03-25 18:36:35,733 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-03-25 18:36:35,736 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
02-03-25 18:36:35,736 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
02-03-25 18:36:35,750 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
02-03-25 18:36:35,751 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
02-03-25 18:36:35,759 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
02-03-25 18:36:35,760 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
02-03-25 18:36:35,768 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
02-03-25 18:36:35,769 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
02-03-25 18:36:35,770 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
02-03-25 18:36:35,787 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@545607f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39109136)
02-03-25 18:36:35,787 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27c04377) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34dc85a)
02-03-25 18:36:35,787 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@67403656) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a6482a9)
02-03-25 18:36:35,788 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f9ab969) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12f8b1d8)
02-03-25 18:36:35,788 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@746cd757) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ae372b9)
02-03-25 18:36:35,788 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2098d37d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77b9d0c7)
02-03-25 18:36:35,788 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65fd6708) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@749ab7b4)
02-03-25 18:36:35,788 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@127f9161) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bf94401)
02-03-25 18:36:35,789 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2532b351) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4349754)
02-03-25 18:36:35,791 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
02-03-25 18:36:35,792 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
02-03-25 18:36:35,793 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
02-03-25 18:36:35,796 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
02-03-25 18:36:35,796 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
02-03-25 18:36:35,802 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@5e8604bf
02-03-25 18:36:35,803 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2d96543c`
02-03-25 18:36:35,810 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
02-03-25 18:36:35,810 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
02-03-25 18:36:35,810 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
02-03-25 18:36:35,816 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 18:36:35,816 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 18:36:35,816 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 18:36:35,817 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 18:36:35,817 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 18:36:35,817 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 18:36:35,818 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
02-03-25 18:36:35,818 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
02-03-25 18:36:35,819 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
02-03-25 18:36:35,821 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@153d4abb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d4c273c]
02-03-25 18:36:35,888 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
02-03-25 18:36:35,929 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
02-03-25 18:36:35,966 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
02-03-25 18:36:35,983 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 18:36:35,984 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
02-03-25 18:36:35,989 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
02-03-25 18:36:36,471 | DEBUG | SessionFactoryImpl   | Building session factory
02-03-25 18:36:36,472 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
02-03-25 18:36:36,739 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
02-03-25 18:36:36,742 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\target\classes;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.15.Final\hibernate-entitymanager-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Player14109423498\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Player14109423498\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\eclipselink\4.0.5\eclipselink-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-core\4.0.5\jaxb-core-4.0.5.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@252a8aae, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
02-03-25 18:36:36,744 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
02-03-25 18:36:36,745 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
02-03-25 18:36:36,752 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
02-03-25 18:36:36,885 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
02-03-25 18:36:36,887 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
02-03-25 18:36:36,888 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
02-03-25 18:36:36,890 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
02-03-25 18:36:36,892 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4012d5bc] under count; prior registration was null
02-03-25 18:36:36,894 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3c98781a] under every; prior registration was null
02-03-25 18:36:36,894 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3f736a16] under any; prior registration was null
02-03-25 18:36:36,895 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
02-03-25 18:36:36,895 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
02-03-25 18:36:36,895 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
02-03-25 18:36:36,895 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
02-03-25 18:36:36,895 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
02-03-25 18:36:36,895 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
02-03-25 18:36:36,895 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
02-03-25 18:36:36,896 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
02-03-25 18:36:36,896 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
02-03-25 18:36:36,897 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
02-03-25 18:36:36,897 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
02-03-25 18:36:36,897 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
02-03-25 18:36:36,897 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
02-03-25 18:36:36,898 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
02-03-25 18:36:36,898 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
02-03-25 18:36:36,898 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
02-03-25 18:36:36,898 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
02-03-25 18:36:36,901 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e67f5f2] under sinh; prior registration was null
02-03-25 18:36:36,901 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fd53053] under cosh; prior registration was null
02-03-25 18:36:36,902 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4527f70a] under tanh; prior registration was null
02-03-25 18:36:36,902 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@707b1a44] under pi; prior registration was null
02-03-25 18:36:36,902 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7132a9dc] under log; prior registration was null
02-03-25 18:36:36,903 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
02-03-25 18:36:36,903 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
02-03-25 18:36:36,903 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
02-03-25 18:36:36,903 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
02-03-25 18:36:36,903 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
02-03-25 18:36:36,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
02-03-25 18:36:36,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
02-03-25 18:36:36,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
02-03-25 18:36:36,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
02-03-25 18:36:36,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
02-03-25 18:36:36,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
02-03-25 18:36:36,905 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
02-03-25 18:36:36,906 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5c723f2d] under position; prior registration was null
02-03-25 18:36:36,909 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f4a3a8d] under overlay; prior registration was null
02-03-25 18:36:36,910 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7b27e8f4] under trim; prior registration was null
02-03-25 18:36:36,912 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6920b0bc] under cast; prior registration was null
02-03-25 18:36:36,912 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65f651eb] under collate; prior registration was null
02-03-25 18:36:36,914 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@24f870ee] under extract; prior registration was null
02-03-25 18:36:36,915 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
02-03-25 18:36:36,915 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
02-03-25 18:36:36,916 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1886991b] under ifnull; prior registration was null
02-03-25 18:36:36,916 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
02-03-25 18:36:36,916 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
02-03-25 18:36:36,917 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3bbf6abe] under pad; prior registration was null
02-03-25 18:36:36,917 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@358ab600] under str; prior registration was null
02-03-25 18:36:36,920 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@32177fa5] under format; prior registration was null
02-03-25 18:36:36,920 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@235d29d6] under timestampadd; prior registration was null
02-03-25 18:36:36,922 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2a8a4e0c] under timestampdiff; prior registration was null
02-03-25 18:36:36,922 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
02-03-25 18:36:36,922 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
02-03-25 18:36:36,922 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20f6f88c] under current_date; prior registration was null
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4277127c] under current_time; prior registration was null
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4c7e978c] under current_timestamp; prior registration was null
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@354e7004] under local_date; prior registration was null
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@22ebccb9] under local_time; prior registration was null
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5875de6a] under local_datetime; prior registration was null
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@608fe01f] under offset_datetime; prior registration was null
02-03-25 18:36:36,923 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
02-03-25 18:36:36,924 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
02-03-25 18:36:36,924 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
02-03-25 18:36:36,924 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
02-03-25 18:36:36,924 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2687725a] under instant; prior registration was null
02-03-25 18:36:36,924 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
02-03-25 18:36:36,925 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2e1ddc90] under sql; prior registration was null
02-03-25 18:36:36,925 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
02-03-25 18:36:36,925 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
02-03-25 18:36:36,925 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
02-03-25 18:36:36,925 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
02-03-25 18:36:36,925 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7132a9dc
02-03-25 18:36:36,926 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
02-03-25 18:36:36,926 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
02-03-25 18:36:36,926 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
02-03-25 18:36:36,926 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
02-03-25 18:36:36,926 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
02-03-25 18:36:36,926 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
02-03-25 18:36:36,926 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
02-03-25 18:36:36,926 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
02-03-25 18:36:36,927 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a8ab2] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
02-03-25 18:36:36,927 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3f50b680] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
02-03-25 18:36:36,928 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
02-03-25 18:36:36,928 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
02-03-25 18:36:36,928 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
02-03-25 18:36:36,928 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
02-03-25 18:36:36,928 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
02-03-25 18:36:36,932 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
02-03-25 18:36:36,932 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
02-03-25 18:36:36,932 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
02-03-25 18:36:36,933 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
02-03-25 18:36:36,933 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
02-03-25 18:36:36,933 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
02-03-25 18:36:36,933 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
02-03-25 18:36:36,933 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
02-03-25 18:36:36,933 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
02-03-25 18:36:36,933 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
02-03-25 18:36:36,933 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
02-03-25 18:36:36,935 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
02-03-25 18:36:36,935 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
02-03-25 18:36:36,935 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
02-03-25 18:36:36,935 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
02-03-25 18:36:36,935 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
02-03-25 18:36:36,935 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
02-03-25 18:36:36,935 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
02-03-25 18:36:36,936 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
02-03-25 18:36:36,936 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
02-03-25 18:36:36,936 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
02-03-25 18:36:36,936 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
02-03-25 18:36:36,936 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
02-03-25 18:36:36,936 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
02-03-25 18:36:36,936 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
02-03-25 18:36:36,936 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
02-03-25 18:36:36,936 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
02-03-25 18:36:36,937 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
02-03-25 18:36:36,937 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54db056b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5c723f2d
02-03-25 18:36:36,937 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
02-03-25 18:36:36,937 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
02-03-25 18:36:36,937 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
02-03-25 18:36:36,948 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@43a65cd8] under trunc; prior registration was null
02-03-25 18:36:36,948 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
02-03-25 18:36:36,948 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
02-03-25 18:36:36,948 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f1ef9d6] under bitand; prior registration was null
02-03-25 18:36:36,948 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17461db] under bitor; prior registration was null
02-03-25 18:36:36,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fd9e827] under bitxor; prior registration was null
02-03-25 18:36:36,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e682398] under bitnot; prior registration was null
02-03-25 18:36:36,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
02-03-25 18:36:36,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
02-03-25 18:36:36,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
02-03-25 18:36:36,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
02-03-25 18:36:36,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
02-03-25 18:36:36,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
02-03-25 18:36:36,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@670b3ca] under format; prior registration was org.hibernate.dialect.function.FormatFunction@32177fa5
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
02-03-25 18:36:36,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
02-03-25 18:36:36,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
02-03-25 18:36:36,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@22ebccb9
02-03-25 18:36:36,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5875de6a
02-03-25 18:36:36,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
02-03-25 18:36:36,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24a86066] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@707b1a44
02-03-25 18:36:36,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54402c04] under chr; prior registration was null
02-03-25 18:36:36,951 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
02-03-25 18:36:36,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b3bb1f7] under sysdate; prior registration was null
02-03-25 18:36:36,952 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6c5ddccd] under listagg; prior registration was null
02-03-25 18:36:36,955 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
02-03-25 18:36:36,955 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
02-03-25 18:36:36,956 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
02-03-25 18:36:36,956 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
02-03-25 18:36:36,957 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
02-03-25 18:36:36,957 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
02-03-25 18:36:36,957 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
02-03-25 18:36:36,957 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
02-03-25 18:36:36,958 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
02-03-25 18:36:36,958 | DEBUG | HQL_FUNCTIONS        | avg(arg)
02-03-25 18:36:36,958 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
02-03-25 18:36:36,959 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
02-03-25 18:36:36,959 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
02-03-25 18:36:36,959 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
02-03-25 18:36:36,959 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
02-03-25 18:36:36,959 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
02-03-25 18:36:36,959 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
02-03-25 18:36:36,959 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
02-03-25 18:36:36,959 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
02-03-25 18:36:36,960 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Date curdate()
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Date current date
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Time current time
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Date current_date
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Time current_time
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Time curtime()
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
02-03-25 18:36:36,961 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
02-03-25 18:36:36,962 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | Instant instant
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
02-03-25 18:36:36,963 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
02-03-25 18:36:36,964 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
02-03-25 18:36:36,965 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
02-03-25 18:36:36,965 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
02-03-25 18:36:36,965 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
02-03-25 18:36:36,965 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
02-03-25 18:36:36,965 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
02-03-25 18:36:36,965 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
02-03-25 18:36:36,965 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
02-03-25 18:36:36,965 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
02-03-25 18:36:36,965 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
02-03-25 18:36:36,966 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
02-03-25 18:36:36,966 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
02-03-25 18:36:36,966 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
02-03-25 18:36:36,966 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Double pi
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
02-03-25 18:36:36,970 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | Object sql
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | String str(arg)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
02-03-25 18:36:36,978 | DEBUG | HQL_FUNCTIONS        | sum(arg)
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | String time(arg)
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
02-03-25 18:36:36,979 | DEBUG | HQL_FUNCTIONS        | Date utc_date
02-03-25 18:36:36,980 | DEBUG | HQL_FUNCTIONS        | Time utc_time
02-03-25 18:36:36,980 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
02-03-25 18:36:36,980 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
02-03-25 18:36:36,980 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
02-03-25 18:36:36,980 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
02-03-25 18:36:36,980 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
02-03-25 18:36:36,980 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
02-03-25 18:36:36,988 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
02-03-25 18:36:36,995 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
02-03-25 18:36:37,116 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
02-03-25 18:36:37,117 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
02-03-25 18:36:37,119 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
02-03-25 18:36:37,119 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
02-03-25 18:36:37,121 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
02-03-25 18:36:37,155 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
02-03-25 18:36:37,161 | TRACE | batch                | Using standard BatchBuilder (1)
02-03-25 18:36:37,167 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
02-03-25 18:36:37,169 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
02-03-25 18:36:37,173 | DEBUG | creation             | Starting post-init callbacks
02-03-25 18:36:37,189 | TRACE | MetadataContext      | Wrapping up metadata context...
02-03-25 18:36:37,231 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
02-03-25 18:36:37,231 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
02-03-25 18:36:37,231 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
02-03-25 18:36:37,232 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
02-03-25 18:36:37,244 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02-03-25 18:36:37,244 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-03-25 18:36:37,245 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@153d4abb] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@ea52184]
02-03-25 18:36:37,249 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
02-03-25 18:36:37,249 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
02-03-25 18:36:37,254 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
02-03-25 18:36:37,254 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
02-03-25 18:36:37,259 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@766a49c7
02-03-25 18:36:37,259 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: fda0e6a3-ed7a-4c2b-840b-a29c84e7a4c8 (<unnamed>)
02-03-25 18:36:37,259 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
02-03-25 18:36:37,259 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@ea52184] for TypeConfiguration
02-03-25 18:36:37,259 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
02-03-25 18:36:37,260 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
02-03-25 18:36:37,316 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
02-03-25 18:36:37,331 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
02-03-25 18:36:37,347 | TRACE | SessionImpl          | Opened Session [ba2b1244-738c-4ad2-b61a-fe51d0cc3628] at timestamp: 1740951397347
02-03-25 18:36:37,347 | TRACE | SessionImpl          | Closing session [ba2b1244-738c-4ad2-b61a-fe51d0cc3628]
02-03-25 18:36:37,347 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@60bb7995]
02-03-25 18:36:37,347 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
02-03-25 18:36:37,347 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
02-03-25 18:36:37,347 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
02-03-25 18:36:37,347 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
02-03-25 18:36:37,347 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 18:36:37,347 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@ea52184] for TypeConfiguration
02-03-25 18:36:37,347 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@663f237a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ea52184]
02-03-25 18:36:37,347 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
02-03-25 18:36:37,347 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
02-03-25 18:36:37,347 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
02-03-25 20:25:10,178 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
02-03-25 20:25:10,199 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
02-03-25 20:25:10,199 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
02-03-25 20:25:10,270 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml
02-03-25 20:25:10,555 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
02-03-25 20:25:10,560 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
02-03-25 20:25:10,564 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
02-03-25 20:25:10,564 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
02-03-25 20:25:10,566 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
02-03-25 20:25:10,566 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
02-03-25 20:25:10,603 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		model.Aluguel
		model.Bicicleta
		model.Cliente
		model.Usuario]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
02-03-25 20:25:10,614 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
02-03-25 20:25:10,624 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
02-03-25 20:25:10,650 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
02-03-25 20:25:10,652 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 20:25:10,652 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
02-03-25 20:25:10,652 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 20:25:10,653 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 20:25:10,654 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
02-03-25 20:25:10,656 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
02-03-25 20:25:10,659 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
02-03-25 20:25:10,660 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
02-03-25 20:25:10,662 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
02-03-25 20:25:10,662 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
02-03-25 20:25:10,663 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
02-03-25 20:25:10,664 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
02-03-25 20:25:10,666 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
02-03-25 20:25:10,666 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
02-03-25 20:25:10,667 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
02-03-25 20:25:10,668 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
02-03-25 20:25:10,669 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
02-03-25 20:25:10,670 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
02-03-25 20:25:10,671 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
02-03-25 20:25:10,672 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
02-03-25 20:25:10,673 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
02-03-25 20:25:10,674 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
02-03-25 20:25:10,675 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
02-03-25 20:25:10,676 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
02-03-25 20:25:10,678 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
02-03-25 20:25:10,679 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
02-03-25 20:25:10,680 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
02-03-25 20:25:10,684 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
02-03-25 20:25:10,772 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
02-03-25 20:25:10,776 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
02-03-25 20:25:10,817 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
02-03-25 20:25:10,825 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
02-03-25 20:25:10,832 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
02-03-25 20:25:10,842 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
02-03-25 20:25:10,843 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
02-03-25 20:25:10,844 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
02-03-25 20:25:10,844 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
02-03-25 20:25:10,845 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
02-03-25 20:25:10,847 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
02-03-25 20:25:10,847 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
02-03-25 20:25:10,850 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
02-03-25 20:25:10,851 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
02-03-25 20:25:10,852 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
02-03-25 20:25:10,852 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
02-03-25 20:25:10,854 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
02-03-25 20:25:10,886 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 20:25:10,888 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
02-03-25 20:25:10,891 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
02-03-25 20:25:10,893 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
02-03-25 20:25:11,249 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 20:25:11,252 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 20:25:11,252 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 20:25:11,252 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@61a88b8c
02-03-25 20:25:11,252 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@61a88b8c
02-03-25 20:25:11,253 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@22295ec4
02-03-25 20:25:11,253 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@22295ec4
02-03-25 20:25:11,253 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5adb0db3
02-03-25 20:25:11,253 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5adb0db3
02-03-25 20:25:11,253 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 20:25:11,254 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 20:25:11,254 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 20:25:11,254 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 20:25:11,255 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 20:25:11,255 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 20:25:11,256 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7241a47d
02-03-25 20:25:11,256 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7241a47d
02-03-25 20:25:11,256 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@70f59913
02-03-25 20:25:11,256 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@77258e59
02-03-25 20:25:11,257 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@77258e59
02-03-25 20:25:11,257 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5dcd8c7a
02-03-25 20:25:11,257 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2250b9f2
02-03-25 20:25:11,257 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 20:25:11,257 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 20:25:11,258 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 20:25:11,258 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 20:25:11,258 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 20:25:11,258 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 20:25:11,258 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 20:25:11,258 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 20:25:11,258 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 20:25:11,259 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 20:25:11,259 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 20:25:11,259 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 20:25:11,260 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 20:25:11,260 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 20:25:11,260 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 20:25:11,260 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@8dbfffb
02-03-25 20:25:11,261 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@8dbfffb
02-03-25 20:25:11,261 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f316aeb
02-03-25 20:25:11,262 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f316aeb
02-03-25 20:25:11,262 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 20:25:11,262 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 20:25:11,263 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 20:25:11,263 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@a22cb6a
02-03-25 20:25:11,263 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@5dd1c9f2
02-03-25 20:25:11,263 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5dd1c9f2
02-03-25 20:25:11,263 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@59b38691
02-03-25 20:25:11,264 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 20:25:11,264 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 20:25:11,264 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 20:25:11,265 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@324a0017
02-03-25 20:25:11,265 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@6187d1f5
02-03-25 20:25:11,265 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2445445a
02-03-25 20:25:11,265 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@7502291e
02-03-25 20:25:11,265 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7502291e
02-03-25 20:25:11,265 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@17aad511
02-03-25 20:25:11,266 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@17aad511
02-03-25 20:25:11,266 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@487db668
02-03-25 20:25:11,266 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@46944ca9
02-03-25 20:25:11,266 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22bac7bc
02-03-25 20:25:11,267 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63798ca7
02-03-25 20:25:11,267 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4612b856
02-03-25 20:25:11,267 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@22875539
02-03-25 20:25:11,267 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5674e1f2
02-03-25 20:25:11,268 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5674e1f2
02-03-25 20:25:11,268 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@79c7532f
02-03-25 20:25:11,268 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@79c7532f
02-03-25 20:25:11,268 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2a448449
02-03-25 20:25:11,268 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2a448449
02-03-25 20:25:11,269 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@32f232a5
02-03-25 20:25:11,269 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@32f232a5
02-03-25 20:25:11,269 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@43f82e78
02-03-25 20:25:11,269 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@43f82e78
02-03-25 20:25:11,269 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e54303
02-03-25 20:25:11,269 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e8df99a
02-03-25 20:25:11,270 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2dc995f4
02-03-25 20:25:11,270 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2dc995f4
02-03-25 20:25:11,270 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2f40e5db
02-03-25 20:25:11,270 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@517566b
02-03-25 20:25:11,270 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@64b73e7a
02-03-25 20:25:11,270 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@530712d
02-03-25 20:25:11,271 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@530712d
02-03-25 20:25:11,271 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2df6226d
02-03-25 20:25:11,271 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12ed9db6
02-03-25 20:25:11,271 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@4ff4357f
02-03-25 20:25:11,271 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ff4357f
02-03-25 20:25:11,272 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@49cb9cb5
02-03-25 20:25:11,272 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49cb9cb5
02-03-25 20:25:11,272 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 20:25:11,272 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 20:25:11,272 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 20:25:11,272 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 20:25:11,273 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 20:25:11,273 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 20:25:11,273 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45fd9a4d
02-03-25 20:25:11,273 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@50468873
02-03-25 20:25:11,273 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@146587a2
02-03-25 20:25:11,273 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@146587a2
02-03-25 20:25:11,274 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 20:25:11,274 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 20:25:11,274 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 20:25:11,274 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@76884e4b
02-03-25 20:25:11,274 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@126945f9
02-03-25 20:25:11,274 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@2a898881
02-03-25 20:25:11,274 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2a898881
02-03-25 20:25:11,275 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 20:25:11,275 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 20:25:11,275 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 20:25:11,275 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@35229f85
02-03-25 20:25:11,275 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@35229f85
02-03-25 20:25:11,275 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d3c5255
02-03-25 20:25:11,276 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d3c5255
02-03-25 20:25:11,276 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@b1712f3
02-03-25 20:25:11,276 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@b1712f3
02-03-25 20:25:11,276 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6986bbaf
02-03-25 20:25:11,276 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6986bbaf
02-03-25 20:25:11,276 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@4879dfad
02-03-25 20:25:11,276 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4879dfad
02-03-25 20:25:11,277 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@4758820d
02-03-25 20:25:11,277 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@74eb909f
02-03-25 20:25:11,289 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@1e0f9063
02-03-25 20:25:11,289 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e0f9063
02-03-25 20:25:11,292 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@2d96543c
02-03-25 20:25:11,293 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@73a2e526
02-03-25 20:25:11,293 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7d64e326
02-03-25 20:25:11,293 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@13f95696
02-03-25 20:25:11,296 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@cd1d761
02-03-25 20:25:11,296 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68be8808
02-03-25 20:25:11,298 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@32193bea
02-03-25 20:25:11,298 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6b8d96d9
02-03-25 20:25:11,298 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@69653e16
02-03-25 20:25:11,303 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
02-03-25 20:25:11,306 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
02-03-25 20:25:11,313 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@30b19518] into BootstrapContext; was [null]
02-03-25 20:25:11,314 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@363042d7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@366ac49b]
02-03-25 20:25:11,586 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
02-03-25 20:25:11,587 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
02-03-25 20:25:11,607 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
02-03-25 20:25:11,608 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
02-03-25 20:25:11,611 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
02-03-25 20:25:11,648 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 20:25:11,649 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
02-03-25 20:25:11,649 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 20:25:11,662 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
02-03-25 20:25:11,677 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
02-03-25 20:25:11,678 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
02-03-25 20:25:11,678 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
02-03-25 20:25:11,678 | INFO  | pooling              | HHH10001003: Autocommit mode: false
02-03-25 20:25:11,685 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
02-03-25 20:25:11,686 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
02-03-25 20:25:12,780 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
02-03-25 20:25:12,823 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
02-03-25 20:25:12,824 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
02-03-25 20:25:12,824 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
02-03-25 20:25:12,975 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-03-25 20:25:12,979 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
02-03-25 20:25:12,980 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
02-03-25 20:25:13,001 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
02-03-25 20:25:13,002 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
02-03-25 20:25:13,014 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
02-03-25 20:25:13,014 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
02-03-25 20:25:13,026 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
02-03-25 20:25:13,026 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
02-03-25 20:25:13,028 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
02-03-25 20:25:13,048 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@545607f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39109136)
02-03-25 20:25:13,049 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27c04377) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34dc85a)
02-03-25 20:25:13,049 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@67403656) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a6482a9)
02-03-25 20:25:13,049 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f9ab969) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12f8b1d8)
02-03-25 20:25:13,050 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@746cd757) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ae372b9)
02-03-25 20:25:13,050 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2098d37d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77b9d0c7)
02-03-25 20:25:13,050 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65fd6708) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@749ab7b4)
02-03-25 20:25:13,051 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@127f9161) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bf94401)
02-03-25 20:25:13,051 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2532b351) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4349754)
02-03-25 20:25:13,057 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
02-03-25 20:25:13,057 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
02-03-25 20:25:13,058 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
02-03-25 20:25:13,065 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
02-03-25 20:25:13,065 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
02-03-25 20:25:13,075 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@5e8604bf
02-03-25 20:25:13,075 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2d96543c`
02-03-25 20:25:13,087 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
02-03-25 20:25:13,087 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
02-03-25 20:25:13,087 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
02-03-25 20:25:13,095 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 20:25:13,095 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 20:25:13,097 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 20:25:13,102 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 20:25:13,105 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 20:25:13,105 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 20:25:13,109 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
02-03-25 20:25:13,109 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
02-03-25 20:25:13,111 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
02-03-25 20:25:13,126 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@153d4abb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d4c273c]
02-03-25 20:25:13,222 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
02-03-25 20:25:13,273 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
02-03-25 20:25:13,318 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
02-03-25 20:25:13,337 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 20:25:13,338 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
02-03-25 20:25:13,344 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
02-03-25 20:25:13,876 | DEBUG | SessionFactoryImpl   | Building session factory
02-03-25 20:25:13,876 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
02-03-25 20:25:14,003 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
02-03-25 20:25:14,005 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\target\classes;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.15.Final\hibernate-entitymanager-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Player14109423498\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Player14109423498\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\eclipselink\4.0.5\eclipselink-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-core\4.0.5\jaxb-core-4.0.5.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@252a8aae, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
02-03-25 20:25:14,007 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
02-03-25 20:25:14,007 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
02-03-25 20:25:14,016 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
02-03-25 20:25:14,160 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
02-03-25 20:25:14,160 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
02-03-25 20:25:14,161 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
02-03-25 20:25:14,195 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
02-03-25 20:25:14,199 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4012d5bc] under count; prior registration was null
02-03-25 20:25:14,201 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3c98781a] under every; prior registration was null
02-03-25 20:25:14,202 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3f736a16] under any; prior registration was null
02-03-25 20:25:14,203 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
02-03-25 20:25:14,203 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
02-03-25 20:25:14,203 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
02-03-25 20:25:14,203 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
02-03-25 20:25:14,204 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
02-03-25 20:25:14,204 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
02-03-25 20:25:14,204 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
02-03-25 20:25:14,204 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
02-03-25 20:25:14,204 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
02-03-25 20:25:14,205 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
02-03-25 20:25:14,206 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
02-03-25 20:25:14,206 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
02-03-25 20:25:14,206 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
02-03-25 20:25:14,206 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
02-03-25 20:25:14,206 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
02-03-25 20:25:14,206 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
02-03-25 20:25:14,206 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
02-03-25 20:25:14,210 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e67f5f2] under sinh; prior registration was null
02-03-25 20:25:14,210 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fd53053] under cosh; prior registration was null
02-03-25 20:25:14,210 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4527f70a] under tanh; prior registration was null
02-03-25 20:25:14,211 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@707b1a44] under pi; prior registration was null
02-03-25 20:25:14,211 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7132a9dc] under log; prior registration was null
02-03-25 20:25:14,212 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
02-03-25 20:25:14,212 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
02-03-25 20:25:14,212 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
02-03-25 20:25:14,212 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
02-03-25 20:25:14,212 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
02-03-25 20:25:14,213 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
02-03-25 20:25:14,213 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
02-03-25 20:25:14,214 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
02-03-25 20:25:14,214 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
02-03-25 20:25:14,214 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
02-03-25 20:25:14,214 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
02-03-25 20:25:14,214 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
02-03-25 20:25:14,216 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5c723f2d] under position; prior registration was null
02-03-25 20:25:14,222 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f4a3a8d] under overlay; prior registration was null
02-03-25 20:25:14,223 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7b27e8f4] under trim; prior registration was null
02-03-25 20:25:14,226 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6920b0bc] under cast; prior registration was null
02-03-25 20:25:14,226 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65f651eb] under collate; prior registration was null
02-03-25 20:25:14,228 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@24f870ee] under extract; prior registration was null
02-03-25 20:25:14,228 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
02-03-25 20:25:14,228 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
02-03-25 20:25:14,229 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1886991b] under ifnull; prior registration was null
02-03-25 20:25:14,229 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
02-03-25 20:25:14,229 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
02-03-25 20:25:14,230 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3bbf6abe] under pad; prior registration was null
02-03-25 20:25:14,233 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@358ab600] under str; prior registration was null
02-03-25 20:25:14,236 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@32177fa5] under format; prior registration was null
02-03-25 20:25:14,238 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@235d29d6] under timestampadd; prior registration was null
02-03-25 20:25:14,240 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2a8a4e0c] under timestampdiff; prior registration was null
02-03-25 20:25:14,240 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
02-03-25 20:25:14,240 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
02-03-25 20:25:14,241 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20f6f88c] under current_date; prior registration was null
02-03-25 20:25:14,242 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4277127c] under current_time; prior registration was null
02-03-25 20:25:14,242 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4c7e978c] under current_timestamp; prior registration was null
02-03-25 20:25:14,242 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
02-03-25 20:25:14,242 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
02-03-25 20:25:14,242 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
02-03-25 20:25:14,242 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@354e7004] under local_date; prior registration was null
02-03-25 20:25:14,242 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@22ebccb9] under local_time; prior registration was null
02-03-25 20:25:14,242 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5875de6a] under local_datetime; prior registration was null
02-03-25 20:25:14,242 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@608fe01f] under offset_datetime; prior registration was null
02-03-25 20:25:14,243 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
02-03-25 20:25:14,243 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
02-03-25 20:25:14,243 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
02-03-25 20:25:14,243 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
02-03-25 20:25:14,244 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2687725a] under instant; prior registration was null
02-03-25 20:25:14,244 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
02-03-25 20:25:14,245 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2e1ddc90] under sql; prior registration was null
02-03-25 20:25:14,246 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
02-03-25 20:25:14,246 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
02-03-25 20:25:14,246 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
02-03-25 20:25:14,246 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
02-03-25 20:25:14,247 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7132a9dc
02-03-25 20:25:14,247 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
02-03-25 20:25:14,247 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
02-03-25 20:25:14,247 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
02-03-25 20:25:14,247 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
02-03-25 20:25:14,247 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
02-03-25 20:25:14,248 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
02-03-25 20:25:14,248 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
02-03-25 20:25:14,248 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
02-03-25 20:25:14,250 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a8ab2] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
02-03-25 20:25:14,251 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3f50b680] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
02-03-25 20:25:14,251 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
02-03-25 20:25:14,251 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
02-03-25 20:25:14,251 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
02-03-25 20:25:14,253 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
02-03-25 20:25:14,253 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
02-03-25 20:25:14,253 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
02-03-25 20:25:14,253 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
02-03-25 20:25:14,253 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
02-03-25 20:25:14,253 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
02-03-25 20:25:14,253 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
02-03-25 20:25:14,253 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
02-03-25 20:25:14,254 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
02-03-25 20:25:14,254 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
02-03-25 20:25:14,254 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
02-03-25 20:25:14,255 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
02-03-25 20:25:14,255 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
02-03-25 20:25:14,257 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
02-03-25 20:25:14,260 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
02-03-25 20:25:14,260 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
02-03-25 20:25:14,261 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
02-03-25 20:25:14,261 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
02-03-25 20:25:14,261 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
02-03-25 20:25:14,263 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
02-03-25 20:25:14,263 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
02-03-25 20:25:14,263 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
02-03-25 20:25:14,263 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
02-03-25 20:25:14,263 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
02-03-25 20:25:14,263 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
02-03-25 20:25:14,263 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
02-03-25 20:25:14,263 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
02-03-25 20:25:14,264 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
02-03-25 20:25:14,264 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
02-03-25 20:25:14,264 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
02-03-25 20:25:14,264 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54db056b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5c723f2d
02-03-25 20:25:14,264 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
02-03-25 20:25:14,264 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
02-03-25 20:25:14,264 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@43a65cd8] under trunc; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f1ef9d6] under bitand; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17461db] under bitor; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fd9e827] under bitxor; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e682398] under bitnot; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@670b3ca] under format; prior registration was org.hibernate.dialect.function.FormatFunction@32177fa5
02-03-25 20:25:14,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@22ebccb9
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5875de6a
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24a86066] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@707b1a44
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54402c04] under chr; prior registration was null
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b3bb1f7] under sysdate; prior registration was null
02-03-25 20:25:14,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6c5ddccd] under listagg; prior registration was null
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | avg(arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Date curdate()
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Date current date
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Time current time
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Date current_date
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Time current_time
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Time curtime()
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Instant instant
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
02-03-25 20:25:14,302 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double pi
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Object sql
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String str(arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | sum(arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String time(arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Date utc_date
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Time utc_time
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
02-03-25 20:25:14,317 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
02-03-25 20:25:14,333 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
02-03-25 20:25:14,333 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
02-03-25 20:25:14,459 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
02-03-25 20:25:14,459 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
02-03-25 20:25:14,459 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
02-03-25 20:25:14,459 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
02-03-25 20:25:14,475 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
02-03-25 20:25:14,475 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
02-03-25 20:25:14,506 | TRACE | batch                | Using standard BatchBuilder (1)
02-03-25 20:25:14,506 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
02-03-25 20:25:14,506 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
02-03-25 20:25:14,506 | DEBUG | creation             | Starting post-init callbacks
02-03-25 20:25:14,522 | TRACE | MetadataContext      | Wrapping up metadata context...
02-03-25 20:25:14,537 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
02-03-25 20:25:14,537 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
02-03-25 20:25:14,537 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
02-03-25 20:25:14,537 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
02-03-25 20:25:14,584 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02-03-25 20:25:14,584 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-03-25 20:25:14,584 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@153d4abb] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@ea52184]
02-03-25 20:25:14,584 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
02-03-25 20:25:14,584 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
02-03-25 20:25:14,600 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
02-03-25 20:25:14,600 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
02-03-25 20:25:14,600 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@766a49c7
02-03-25 20:25:14,600 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: 6868bd27-4d28-4a42-93a3-f6e00ca63513 (<unnamed>)
02-03-25 20:25:14,600 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
02-03-25 20:25:14,600 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@ea52184] for TypeConfiguration
02-03-25 20:25:14,600 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
02-03-25 20:25:14,600 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
02-03-25 20:25:14,662 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
02-03-25 20:25:14,678 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
02-03-25 20:25:14,693 | TRACE | SessionImpl          | Opened Session [af7e89f0-42b2-43a9-b918-576e4a8f8dc6] at timestamp: 1740957914693
02-03-25 20:25:14,693 | TRACE | SessionImpl          | Closing session [af7e89f0-42b2-43a9-b918-576e4a8f8dc6]
02-03-25 20:25:14,693 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@60bb7995]
02-03-25 20:25:14,693 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
02-03-25 20:25:14,693 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
02-03-25 20:25:14,693 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
02-03-25 20:25:14,693 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
02-03-25 20:25:14,693 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 20:25:14,693 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@ea52184] for TypeConfiguration
02-03-25 20:25:14,693 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@663f237a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ea52184]
02-03-25 20:25:14,693 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
02-03-25 20:25:14,693 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
02-03-25 20:25:14,709 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
02-03-25 23:10:23,580 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
02-03-25 23:10:23,604 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
02-03-25 23:10:23,604 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
02-03-25 23:10:23,667 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml
02-03-25 23:10:23,905 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
02-03-25 23:10:23,911 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
02-03-25 23:10:23,915 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
02-03-25 23:10:23,916 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
02-03-25 23:10:23,917 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
02-03-25 23:10:23,917 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
02-03-25 23:10:23,936 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		model.Aluguel
		model.Bicicleta
		model.Cliente
		model.Usuario]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
02-03-25 23:10:23,950 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
02-03-25 23:10:23,959 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
02-03-25 23:10:24,001 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
02-03-25 23:10:24,002 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 23:10:24,002 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
02-03-25 23:10:24,002 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 23:10:24,003 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 23:10:24,004 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
02-03-25 23:10:24,005 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
02-03-25 23:10:24,007 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
02-03-25 23:10:24,008 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
02-03-25 23:10:24,009 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
02-03-25 23:10:24,010 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
02-03-25 23:10:24,011 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
02-03-25 23:10:24,011 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
02-03-25 23:10:24,013 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
02-03-25 23:10:24,013 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
02-03-25 23:10:24,014 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
02-03-25 23:10:24,015 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
02-03-25 23:10:24,015 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
02-03-25 23:10:24,016 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
02-03-25 23:10:24,017 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
02-03-25 23:10:24,018 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
02-03-25 23:10:24,019 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
02-03-25 23:10:24,020 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
02-03-25 23:10:24,021 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
02-03-25 23:10:24,022 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
02-03-25 23:10:24,024 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
02-03-25 23:10:24,030 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
02-03-25 23:10:24,031 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
02-03-25 23:10:24,033 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
02-03-25 23:10:24,096 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
02-03-25 23:10:24,099 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
02-03-25 23:10:24,134 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
02-03-25 23:10:24,142 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
02-03-25 23:10:24,149 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
02-03-25 23:10:24,158 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
02-03-25 23:10:24,159 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
02-03-25 23:10:24,160 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
02-03-25 23:10:24,160 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
02-03-25 23:10:24,161 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
02-03-25 23:10:24,163 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
02-03-25 23:10:24,164 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
02-03-25 23:10:24,166 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
02-03-25 23:10:24,166 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
02-03-25 23:10:24,167 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
02-03-25 23:10:24,167 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
02-03-25 23:10:24,170 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
02-03-25 23:10:24,199 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 23:10:24,201 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
02-03-25 23:10:24,203 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
02-03-25 23:10:24,205 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
02-03-25 23:10:24,524 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 23:10:24,525 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 23:10:24,525 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 23:10:24,525 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@61a88b8c
02-03-25 23:10:24,525 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@61a88b8c
02-03-25 23:10:24,525 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@22295ec4
02-03-25 23:10:24,526 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@22295ec4
02-03-25 23:10:24,526 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5adb0db3
02-03-25 23:10:24,527 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5adb0db3
02-03-25 23:10:24,527 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 23:10:24,527 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 23:10:24,527 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 23:10:24,536 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 23:10:24,536 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 23:10:24,537 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 23:10:24,537 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7241a47d
02-03-25 23:10:24,538 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7241a47d
02-03-25 23:10:24,538 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@70f59913
02-03-25 23:10:24,538 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@77258e59
02-03-25 23:10:24,538 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@77258e59
02-03-25 23:10:24,538 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5dcd8c7a
02-03-25 23:10:24,538 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2250b9f2
02-03-25 23:10:24,539 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 23:10:24,539 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 23:10:24,539 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 23:10:24,539 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 23:10:24,539 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 23:10:24,540 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 23:10:24,540 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 23:10:24,540 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 23:10:24,540 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 23:10:24,540 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 23:10:24,541 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 23:10:24,541 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 23:10:24,541 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 23:10:24,541 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 23:10:24,541 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 23:10:24,541 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@8dbfffb
02-03-25 23:10:24,542 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@8dbfffb
02-03-25 23:10:24,542 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f316aeb
02-03-25 23:10:24,542 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f316aeb
02-03-25 23:10:24,543 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 23:10:24,543 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 23:10:24,543 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 23:10:24,543 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@a22cb6a
02-03-25 23:10:24,543 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@5dd1c9f2
02-03-25 23:10:24,544 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5dd1c9f2
02-03-25 23:10:24,544 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@59b38691
02-03-25 23:10:24,544 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 23:10:24,545 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 23:10:24,545 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 23:10:24,545 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@324a0017
02-03-25 23:10:24,545 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@6187d1f5
02-03-25 23:10:24,545 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2445445a
02-03-25 23:10:24,546 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@7502291e
02-03-25 23:10:24,546 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7502291e
02-03-25 23:10:24,546 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@17aad511
02-03-25 23:10:24,546 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@17aad511
02-03-25 23:10:24,546 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@487db668
02-03-25 23:10:24,546 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@46944ca9
02-03-25 23:10:24,546 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22bac7bc
02-03-25 23:10:24,547 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63798ca7
02-03-25 23:10:24,548 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4612b856
02-03-25 23:10:24,550 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@22875539
02-03-25 23:10:24,550 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5674e1f2
02-03-25 23:10:24,550 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5674e1f2
02-03-25 23:10:24,551 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@79c7532f
02-03-25 23:10:24,551 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@79c7532f
02-03-25 23:10:24,551 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2a448449
02-03-25 23:10:24,551 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2a448449
02-03-25 23:10:24,551 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@32f232a5
02-03-25 23:10:24,551 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@32f232a5
02-03-25 23:10:24,551 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@43f82e78
02-03-25 23:10:24,552 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@43f82e78
02-03-25 23:10:24,552 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e54303
02-03-25 23:10:24,552 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e8df99a
02-03-25 23:10:24,552 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2dc995f4
02-03-25 23:10:24,552 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2dc995f4
02-03-25 23:10:24,552 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2f40e5db
02-03-25 23:10:24,552 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@517566b
02-03-25 23:10:24,553 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@64b73e7a
02-03-25 23:10:24,553 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@530712d
02-03-25 23:10:24,553 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@530712d
02-03-25 23:10:24,553 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2df6226d
02-03-25 23:10:24,553 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12ed9db6
02-03-25 23:10:24,553 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@4ff4357f
02-03-25 23:10:24,553 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ff4357f
02-03-25 23:10:24,554 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@49cb9cb5
02-03-25 23:10:24,554 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49cb9cb5
02-03-25 23:10:24,554 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 23:10:24,554 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 23:10:24,554 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 23:10:24,554 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 23:10:24,554 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 23:10:24,554 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 23:10:24,555 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45fd9a4d
02-03-25 23:10:24,555 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@50468873
02-03-25 23:10:24,555 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@146587a2
02-03-25 23:10:24,555 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@146587a2
02-03-25 23:10:24,555 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 23:10:24,555 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 23:10:24,555 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 23:10:24,556 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@76884e4b
02-03-25 23:10:24,556 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@126945f9
02-03-25 23:10:24,556 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@2a898881
02-03-25 23:10:24,556 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2a898881
02-03-25 23:10:24,556 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 23:10:24,556 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 23:10:24,556 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 23:10:24,557 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@35229f85
02-03-25 23:10:24,557 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@35229f85
02-03-25 23:10:24,557 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d3c5255
02-03-25 23:10:24,557 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d3c5255
02-03-25 23:10:24,557 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@b1712f3
02-03-25 23:10:24,557 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@b1712f3
02-03-25 23:10:24,557 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6986bbaf
02-03-25 23:10:24,557 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6986bbaf
02-03-25 23:10:24,558 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@4879dfad
02-03-25 23:10:24,558 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4879dfad
02-03-25 23:10:24,558 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@4758820d
02-03-25 23:10:24,558 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@74eb909f
02-03-25 23:10:24,567 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@1e0f9063
02-03-25 23:10:24,567 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e0f9063
02-03-25 23:10:24,569 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@2d96543c
02-03-25 23:10:24,570 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@73a2e526
02-03-25 23:10:24,570 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7d64e326
02-03-25 23:10:24,570 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@13f95696
02-03-25 23:10:24,571 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@cd1d761
02-03-25 23:10:24,571 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68be8808
02-03-25 23:10:24,571 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@32193bea
02-03-25 23:10:24,571 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6b8d96d9
02-03-25 23:10:24,571 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@69653e16
02-03-25 23:10:24,575 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
02-03-25 23:10:24,577 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
02-03-25 23:10:24,583 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@30b19518] into BootstrapContext; was [null]
02-03-25 23:10:24,583 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@363042d7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@366ac49b]
02-03-25 23:10:24,780 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
02-03-25 23:10:24,780 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
02-03-25 23:10:24,799 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
02-03-25 23:10:24,799 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
02-03-25 23:10:24,802 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
02-03-25 23:10:24,812 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 23:10:24,812 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
02-03-25 23:10:24,813 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 23:10:24,825 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
02-03-25 23:10:24,839 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
02-03-25 23:10:24,839 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
02-03-25 23:10:24,839 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
02-03-25 23:10:24,840 | INFO  | pooling              | HHH10001003: Autocommit mode: false
02-03-25 23:10:24,844 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
02-03-25 23:10:24,845 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
02-03-25 23:10:25,979 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
02-03-25 23:10:26,019 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
02-03-25 23:10:26,019 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
02-03-25 23:10:26,019 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
02-03-25 23:10:26,148 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-03-25 23:10:26,151 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
02-03-25 23:10:26,152 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
02-03-25 23:10:26,169 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
02-03-25 23:10:26,169 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
02-03-25 23:10:26,180 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
02-03-25 23:10:26,184 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
02-03-25 23:10:26,197 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
02-03-25 23:10:26,198 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
02-03-25 23:10:26,199 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
02-03-25 23:10:26,219 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@545607f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39109136)
02-03-25 23:10:26,219 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27c04377) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34dc85a)
02-03-25 23:10:26,220 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@67403656) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a6482a9)
02-03-25 23:10:26,220 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f9ab969) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12f8b1d8)
02-03-25 23:10:26,220 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@746cd757) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ae372b9)
02-03-25 23:10:26,220 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2098d37d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77b9d0c7)
02-03-25 23:10:26,221 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65fd6708) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@749ab7b4)
02-03-25 23:10:26,221 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@127f9161) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bf94401)
02-03-25 23:10:26,221 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2532b351) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4349754)
02-03-25 23:10:26,225 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
02-03-25 23:10:26,225 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
02-03-25 23:10:26,226 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
02-03-25 23:10:26,232 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
02-03-25 23:10:26,233 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
02-03-25 23:10:26,240 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@5e8604bf
02-03-25 23:10:26,240 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2d96543c`
02-03-25 23:10:26,249 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
02-03-25 23:10:26,249 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
02-03-25 23:10:26,249 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
02-03-25 23:10:26,256 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 23:10:26,256 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 23:10:26,256 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 23:10:26,256 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 23:10:26,257 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 23:10:26,257 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 23:10:26,258 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
02-03-25 23:10:26,259 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
02-03-25 23:10:26,259 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
02-03-25 23:10:26,262 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@153d4abb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d4c273c]
02-03-25 23:10:26,335 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
02-03-25 23:10:26,384 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
02-03-25 23:10:26,429 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
02-03-25 23:10:26,457 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 23:10:26,458 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
02-03-25 23:10:26,464 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
02-03-25 23:10:26,963 | DEBUG | SessionFactoryImpl   | Building session factory
02-03-25 23:10:26,964 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
02-03-25 23:10:27,081 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
02-03-25 23:10:27,083 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\target\classes;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.15.Final\hibernate-entitymanager-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Player14109423498\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Player14109423498\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\eclipselink\4.0.5\eclipselink-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-core\4.0.5\jaxb-core-4.0.5.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@252a8aae, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
02-03-25 23:10:27,086 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
02-03-25 23:10:27,087 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
02-03-25 23:10:27,096 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
02-03-25 23:10:27,322 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
02-03-25 23:10:27,322 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
02-03-25 23:10:27,324 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
02-03-25 23:10:27,326 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
02-03-25 23:10:27,329 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4012d5bc] under count; prior registration was null
02-03-25 23:10:27,332 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3c98781a] under every; prior registration was null
02-03-25 23:10:27,332 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3f736a16] under any; prior registration was null
02-03-25 23:10:27,333 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
02-03-25 23:10:27,333 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
02-03-25 23:10:27,333 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
02-03-25 23:10:27,333 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
02-03-25 23:10:27,335 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
02-03-25 23:10:27,337 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
02-03-25 23:10:27,337 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
02-03-25 23:10:27,337 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
02-03-25 23:10:27,338 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
02-03-25 23:10:27,340 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
02-03-25 23:10:27,340 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
02-03-25 23:10:27,340 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
02-03-25 23:10:27,343 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
02-03-25 23:10:27,343 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
02-03-25 23:10:27,344 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
02-03-25 23:10:27,344 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
02-03-25 23:10:27,345 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
02-03-25 23:10:27,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e67f5f2] under sinh; prior registration was null
02-03-25 23:10:27,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fd53053] under cosh; prior registration was null
02-03-25 23:10:27,351 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4527f70a] under tanh; prior registration was null
02-03-25 23:10:27,354 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@707b1a44] under pi; prior registration was null
02-03-25 23:10:27,354 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7132a9dc] under log; prior registration was null
02-03-25 23:10:27,355 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
02-03-25 23:10:27,355 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
02-03-25 23:10:27,356 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
02-03-25 23:10:27,356 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
02-03-25 23:10:27,356 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
02-03-25 23:10:27,357 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
02-03-25 23:10:27,357 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
02-03-25 23:10:27,357 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
02-03-25 23:10:27,357 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
02-03-25 23:10:27,357 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
02-03-25 23:10:27,357 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
02-03-25 23:10:27,358 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
02-03-25 23:10:27,362 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5c723f2d] under position; prior registration was null
02-03-25 23:10:27,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f4a3a8d] under overlay; prior registration was null
02-03-25 23:10:27,367 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7b27e8f4] under trim; prior registration was null
02-03-25 23:10:27,369 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6920b0bc] under cast; prior registration was null
02-03-25 23:10:27,370 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65f651eb] under collate; prior registration was null
02-03-25 23:10:27,372 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@24f870ee] under extract; prior registration was null
02-03-25 23:10:27,372 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
02-03-25 23:10:27,372 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
02-03-25 23:10:27,373 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1886991b] under ifnull; prior registration was null
02-03-25 23:10:27,374 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
02-03-25 23:10:27,374 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
02-03-25 23:10:27,375 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3bbf6abe] under pad; prior registration was null
02-03-25 23:10:27,377 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@358ab600] under str; prior registration was null
02-03-25 23:10:27,380 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@32177fa5] under format; prior registration was null
02-03-25 23:10:27,382 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@235d29d6] under timestampadd; prior registration was null
02-03-25 23:10:27,384 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2a8a4e0c] under timestampdiff; prior registration was null
02-03-25 23:10:27,384 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
02-03-25 23:10:27,384 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
02-03-25 23:10:27,385 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20f6f88c] under current_date; prior registration was null
02-03-25 23:10:27,385 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4277127c] under current_time; prior registration was null
02-03-25 23:10:27,385 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4c7e978c] under current_timestamp; prior registration was null
02-03-25 23:10:27,385 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
02-03-25 23:10:27,385 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
02-03-25 23:10:27,385 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
02-03-25 23:10:27,385 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@354e7004] under local_date; prior registration was null
02-03-25 23:10:27,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@22ebccb9] under local_time; prior registration was null
02-03-25 23:10:27,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5875de6a] under local_datetime; prior registration was null
02-03-25 23:10:27,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@608fe01f] under offset_datetime; prior registration was null
02-03-25 23:10:27,386 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
02-03-25 23:10:27,386 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
02-03-25 23:10:27,386 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
02-03-25 23:10:27,395 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
02-03-25 23:10:27,396 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2687725a] under instant; prior registration was null
02-03-25 23:10:27,396 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
02-03-25 23:10:27,397 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2e1ddc90] under sql; prior registration was null
02-03-25 23:10:27,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
02-03-25 23:10:27,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
02-03-25 23:10:27,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
02-03-25 23:10:27,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
02-03-25 23:10:27,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7132a9dc
02-03-25 23:10:27,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
02-03-25 23:10:27,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
02-03-25 23:10:27,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
02-03-25 23:10:27,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
02-03-25 23:10:27,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
02-03-25 23:10:27,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
02-03-25 23:10:27,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
02-03-25 23:10:27,400 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
02-03-25 23:10:27,401 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a8ab2] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
02-03-25 23:10:27,401 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3f50b680] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
02-03-25 23:10:27,401 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
02-03-25 23:10:27,401 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
02-03-25 23:10:27,402 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
02-03-25 23:10:27,402 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
02-03-25 23:10:27,402 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
02-03-25 23:10:27,402 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
02-03-25 23:10:27,402 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
02-03-25 23:10:27,402 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
02-03-25 23:10:27,402 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
02-03-25 23:10:27,402 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
02-03-25 23:10:27,402 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
02-03-25 23:10:27,403 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
02-03-25 23:10:27,403 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
02-03-25 23:10:27,403 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
02-03-25 23:10:27,403 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
02-03-25 23:10:27,403 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
02-03-25 23:10:27,406 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
02-03-25 23:10:27,408 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
02-03-25 23:10:27,410 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
02-03-25 23:10:27,410 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
02-03-25 23:10:27,412 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
02-03-25 23:10:27,412 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
02-03-25 23:10:27,412 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
02-03-25 23:10:27,412 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
02-03-25 23:10:27,412 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
02-03-25 23:10:27,413 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
02-03-25 23:10:27,413 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
02-03-25 23:10:27,413 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
02-03-25 23:10:27,413 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
02-03-25 23:10:27,413 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
02-03-25 23:10:27,413 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
02-03-25 23:10:27,413 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
02-03-25 23:10:27,413 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
02-03-25 23:10:27,414 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54db056b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5c723f2d
02-03-25 23:10:27,414 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
02-03-25 23:10:27,414 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
02-03-25 23:10:27,414 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
02-03-25 23:10:27,425 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@43a65cd8] under trunc; prior registration was null
02-03-25 23:10:27,425 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
02-03-25 23:10:27,426 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
02-03-25 23:10:27,426 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f1ef9d6] under bitand; prior registration was null
02-03-25 23:10:27,426 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17461db] under bitor; prior registration was null
02-03-25 23:10:27,426 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fd9e827] under bitxor; prior registration was null
02-03-25 23:10:27,426 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e682398] under bitnot; prior registration was null
02-03-25 23:10:27,426 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
02-03-25 23:10:27,426 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
02-03-25 23:10:27,427 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
02-03-25 23:10:27,427 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
02-03-25 23:10:27,427 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
02-03-25 23:10:27,427 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
02-03-25 23:10:27,427 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
02-03-25 23:10:27,427 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
02-03-25 23:10:27,427 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
02-03-25 23:10:27,427 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
02-03-25 23:10:27,427 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
02-03-25 23:10:27,428 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
02-03-25 23:10:27,428 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
02-03-25 23:10:27,428 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@670b3ca] under format; prior registration was org.hibernate.dialect.function.FormatFunction@32177fa5
02-03-25 23:10:27,428 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
02-03-25 23:10:27,428 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
02-03-25 23:10:27,428 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
02-03-25 23:10:27,428 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
02-03-25 23:10:27,428 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@22ebccb9
02-03-25 23:10:27,429 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5875de6a
02-03-25 23:10:27,429 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
02-03-25 23:10:27,429 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24a86066] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@707b1a44
02-03-25 23:10:27,429 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54402c04] under chr; prior registration was null
02-03-25 23:10:27,429 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
02-03-25 23:10:27,429 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b3bb1f7] under sysdate; prior registration was null
02-03-25 23:10:27,430 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6c5ddccd] under listagg; prior registration was null
02-03-25 23:10:27,445 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
02-03-25 23:10:27,448 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
02-03-25 23:10:27,448 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
02-03-25 23:10:27,448 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
02-03-25 23:10:27,448 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
02-03-25 23:10:27,449 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
02-03-25 23:10:27,449 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
02-03-25 23:10:27,449 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
02-03-25 23:10:27,449 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
02-03-25 23:10:27,449 | DEBUG | HQL_FUNCTIONS        | avg(arg)
02-03-25 23:10:27,450 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
02-03-25 23:10:27,450 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
02-03-25 23:10:27,451 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | Date curdate()
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | Date current date
02-03-25 23:10:27,452 | DEBUG | HQL_FUNCTIONS        | Time current time
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Date current_date
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Time current_time
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Time curtime()
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
02-03-25 23:10:27,453 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
02-03-25 23:10:27,454 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | Instant instant
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
02-03-25 23:10:27,455 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
02-03-25 23:10:27,456 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
02-03-25 23:10:27,456 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
02-03-25 23:10:27,456 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
02-03-25 23:10:27,456 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
02-03-25 23:10:27,456 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
02-03-25 23:10:27,456 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
02-03-25 23:10:27,456 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
02-03-25 23:10:27,456 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
02-03-25 23:10:27,456 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
02-03-25 23:10:27,458 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
02-03-25 23:10:27,459 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
02-03-25 23:10:27,460 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
02-03-25 23:10:27,460 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
02-03-25 23:10:27,460 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
02-03-25 23:10:27,460 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
02-03-25 23:10:27,469 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
02-03-25 23:10:27,470 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
02-03-25 23:10:27,470 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
02-03-25 23:10:27,470 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
02-03-25 23:10:27,470 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
02-03-25 23:10:27,470 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
02-03-25 23:10:27,470 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
02-03-25 23:10:27,470 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
02-03-25 23:10:27,470 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
02-03-25 23:10:27,470 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
02-03-25 23:10:27,471 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
02-03-25 23:10:27,471 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
02-03-25 23:10:27,471 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
02-03-25 23:10:27,471 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
02-03-25 23:10:27,473 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
02-03-25 23:10:27,475 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
02-03-25 23:10:27,476 | DEBUG | HQL_FUNCTIONS        | Double pi
02-03-25 23:10:27,476 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
02-03-25 23:10:27,476 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
02-03-25 23:10:27,476 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
02-03-25 23:10:27,476 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
02-03-25 23:10:27,476 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
02-03-25 23:10:27,476 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
02-03-25 23:10:27,476 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
02-03-25 23:10:27,477 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
02-03-25 23:10:27,477 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
02-03-25 23:10:27,477 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
02-03-25 23:10:27,477 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
02-03-25 23:10:27,477 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
02-03-25 23:10:27,477 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
02-03-25 23:10:27,477 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
02-03-25 23:10:27,477 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
02-03-25 23:10:27,478 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
02-03-25 23:10:27,479 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
02-03-25 23:10:27,480 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
02-03-25 23:10:27,480 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
02-03-25 23:10:27,480 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
02-03-25 23:10:27,480 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
02-03-25 23:10:27,480 | DEBUG | HQL_FUNCTIONS        | Object sql
02-03-25 23:10:27,480 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
02-03-25 23:10:27,480 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
02-03-25 23:10:27,481 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
02-03-25 23:10:27,481 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
02-03-25 23:10:27,481 | DEBUG | HQL_FUNCTIONS        | String str(arg)
02-03-25 23:10:27,481 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
02-03-25 23:10:27,481 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
02-03-25 23:10:27,481 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
02-03-25 23:10:27,482 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
02-03-25 23:10:27,482 | DEBUG | HQL_FUNCTIONS        | sum(arg)
02-03-25 23:10:27,482 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
02-03-25 23:10:27,482 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
02-03-25 23:10:27,483 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
02-03-25 23:10:27,483 | DEBUG | HQL_FUNCTIONS        | String time(arg)
02-03-25 23:10:27,483 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
02-03-25 23:10:27,483 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
02-03-25 23:10:27,483 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | Date utc_date
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | Time utc_time
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
02-03-25 23:10:27,484 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
02-03-25 23:10:27,495 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
02-03-25 23:10:27,505 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
02-03-25 23:10:27,678 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
02-03-25 23:10:27,678 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
02-03-25 23:10:27,681 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
02-03-25 23:10:27,682 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
02-03-25 23:10:27,684 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
02-03-25 23:10:27,710 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
02-03-25 23:10:27,710 | TRACE | batch                | Using standard BatchBuilder (1)
02-03-25 23:10:27,725 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
02-03-25 23:10:27,725 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
02-03-25 23:10:27,725 | DEBUG | creation             | Starting post-init callbacks
02-03-25 23:10:27,757 | TRACE | MetadataContext      | Wrapping up metadata context...
02-03-25 23:10:27,788 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
02-03-25 23:10:27,788 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
02-03-25 23:10:27,788 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
02-03-25 23:10:27,788 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
02-03-25 23:10:27,804 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
02-03-25 23:10:27,804 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-03-25 23:10:27,804 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@153d4abb] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@ea52184]
02-03-25 23:10:27,819 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
02-03-25 23:10:27,819 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
02-03-25 23:10:27,819 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
02-03-25 23:10:27,819 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
02-03-25 23:10:27,819 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@766a49c7
02-03-25 23:10:27,819 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: 0e552326-6a58-4508-86b4-76b76f408419 (<unnamed>)
02-03-25 23:10:27,819 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
02-03-25 23:10:27,819 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@ea52184] for TypeConfiguration
02-03-25 23:10:27,819 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
02-03-25 23:10:27,819 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
02-03-25 23:10:27,897 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
02-03-25 23:10:27,897 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
02-03-25 23:10:27,929 | TRACE | SessionImpl          | Opened Session [cd683b8e-da35-4434-a5b1-a9f3fca1b87f] at timestamp: 1740967827929
02-03-25 23:10:27,929 | TRACE | SessionImpl          | Closing session [cd683b8e-da35-4434-a5b1-a9f3fca1b87f]
02-03-25 23:10:27,929 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@60bb7995]
02-03-25 23:10:27,929 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
02-03-25 23:10:27,929 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
02-03-25 23:10:27,929 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
02-03-25 23:10:27,929 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
02-03-25 23:10:27,929 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 23:10:27,929 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@ea52184] for TypeConfiguration
02-03-25 23:10:27,929 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@663f237a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ea52184]
02-03-25 23:10:27,929 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
02-03-25 23:10:27,929 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
02-03-25 23:10:27,929 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
