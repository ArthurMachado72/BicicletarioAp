26-02-25 16:41:43,189 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
26-02-25 16:41:43,196 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
26-02-25 16:41:43,196 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
26-02-25 16:41:43,387 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
26-02-25 16:41:43,616 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
26-02-25 16:41:43,870 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : br.com.BicicletarioApPU
26-02-25 16:41:43,886 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
26-02-25 16:41:43,886 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=br.com.BicicletarioApPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
26-02-25 16:41:43,886 | DEBUG | HibernatePersistenceProvider | Excluding from consideration due to name mis-match
26-02-25 16:41:43,886 | DEBUG | HibernatePersistenceProvider | Found no matching persistence units
26-02-25 16:41:43,886 | TRACE | HibernatePersistenceProvider | Could not obtain matching EntityManagerFactoryBuilder, returning null
26-02-25 16:47:35,748 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
26-02-25 16:47:35,753 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName BicicletarioApPU
26-02-25 16:47:35,753 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : BicicletarioApPU
26-02-25 16:47:35,801 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
26-02-25 16:47:36,022 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
26-02-25 16:47:36,028 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : br.com.BicicletarioApPU
26-02-25 16:47:36,031 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
26-02-25 16:47:36,031 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=br.com.BicicletarioApPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [BicicletarioApPU]
26-02-25 16:47:36,031 | DEBUG | HibernatePersistenceProvider | Excluding from consideration due to name mis-match
26-02-25 16:47:36,031 | DEBUG | HibernatePersistenceProvider | Found no matching persistence units
26-02-25 16:47:36,031 | TRACE | HibernatePersistenceProvider | Could not obtain matching EntityManagerFactoryBuilder, returning null
26-02-25 16:57:24,407 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
26-02-25 16:57:24,413 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
26-02-25 16:57:24,414 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
26-02-25 16:57:24,461 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
26-02-25 16:57:24,683 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
26-02-25 16:57:24,689 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : br.com.BicicletarioApPU
26-02-25 16:57:24,692 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
26-02-25 16:57:24,692 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=br.com.BicicletarioApPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
26-02-25 16:57:24,692 | DEBUG | HibernatePersistenceProvider | Excluding from consideration due to name mis-match
26-02-25 16:57:24,692 | DEBUG | HibernatePersistenceProvider | Found no matching persistence units
26-02-25 16:57:24,692 | TRACE | HibernatePersistenceProvider | Could not obtain matching EntityManagerFactoryBuilder, returning null
26-02-25 21:44:49,748 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
26-02-25 21:44:49,768 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
26-02-25 21:44:49,768 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
26-02-25 21:44:49,896 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
26-02-25 21:44:50,366 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
26-02-25 21:44:50,413 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : br.com.BicicletarioApPU
26-02-25 21:44:50,413 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
26-02-25 21:44:50,413 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=br.com.BicicletarioApPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
26-02-25 21:44:50,413 | DEBUG | HibernatePersistenceProvider | Excluding from consideration due to name mis-match
26-02-25 21:44:50,413 | DEBUG | HibernatePersistenceProvider | Found no matching persistence units
26-02-25 21:44:50,413 | TRACE | HibernatePersistenceProvider | Could not obtain matching EntityManagerFactoryBuilder, returning null
26-02-25 21:53:50,649 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
26-02-25 21:53:50,678 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
26-02-25 21:53:50,678 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
26-02-25 21:53:50,809 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
26-02-25 21:53:51,034 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
26-02-25 21:53:51,040 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
26-02-25 21:53:51,040 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
26-02-25 21:53:51,134 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
26-02-25 21:53:51,381 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
26-02-25 21:53:51,389 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : br.com.BicicletarioApPU
26-02-25 21:53:51,394 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
26-02-25 21:53:51,394 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=br.com.BicicletarioApPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
26-02-25 21:53:51,395 | DEBUG | HibernatePersistenceProvider | Excluding from consideration due to name mis-match
26-02-25 21:53:51,395 | DEBUG | HibernatePersistenceProvider | Found no matching persistence units
26-02-25 21:53:51,395 | TRACE | HibernatePersistenceProvider | Could not obtain matching EntityManagerFactoryBuilder, returning null
26-02-25 21:53:51,609 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
26-02-25 21:53:51,617 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : br.com.BicicletarioApPU
26-02-25 21:53:51,622 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
26-02-25 21:53:51,622 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=br.com.BicicletarioApPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
26-02-25 21:53:51,623 | DEBUG | HibernatePersistenceProvider | Excluding from consideration due to name mis-match
26-02-25 21:53:51,623 | DEBUG | HibernatePersistenceProvider | Found no matching persistence units
26-02-25 21:53:51,623 | TRACE | HibernatePersistenceProvider | Could not obtain matching EntityManagerFactoryBuilder, returning null
27-02-25 09:50:42,195 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
27-02-25 09:50:42,204 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
27-02-25 09:50:42,204 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
27-02-25 09:50:42,352 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
27-02-25 09:50:42,837 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
27-02-25 09:50:42,868 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
27-02-25 09:50:42,871 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
27-02-25 09:50:42,871 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
27-02-25 09:50:42,873 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
27-02-25 09:50:42,873 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
27-02-25 09:50:42,915 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.bicicletario.model.Usuario
		com.bicicletario.model.Cliente
		com.bicicletario.model.Bicicleta]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
27-02-25 09:50:42,923 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
27-02-25 09:50:42,961 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
27-02-25 09:50:43,009 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 09:50:43,011 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 09:50:43,011 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 09:50:43,011 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 09:50:43,011 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 09:50:43,012 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
27-02-25 09:50:43,014 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
27-02-25 09:50:43,016 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
27-02-25 09:50:43,017 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
27-02-25 09:50:43,018 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
27-02-25 09:50:43,018 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
27-02-25 09:50:43,019 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
27-02-25 09:50:43,019 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
27-02-25 09:50:43,021 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 09:50:43,022 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 09:50:43,022 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
27-02-25 09:50:43,023 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
27-02-25 09:50:43,023 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
27-02-25 09:50:43,025 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
27-02-25 09:50:43,025 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
27-02-25 09:50:43,026 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
27-02-25 09:50:43,028 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
27-02-25 09:50:43,029 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
27-02-25 09:50:43,030 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
27-02-25 09:50:43,031 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
27-02-25 09:50:43,033 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
27-02-25 09:50:43,034 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
27-02-25 09:50:43,035 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
27-02-25 09:50:43,040 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
27-02-25 09:50:43,160 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
27-02-25 09:50:43,163 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
27-02-25 09:50:43,197 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
27-02-25 09:50:43,201 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
27-02-25 09:50:43,207 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
27-02-25 09:50:43,218 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
27-02-25 09:50:43,218 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
27-02-25 09:50:43,220 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 09:50:43,220 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 09:50:43,221 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
27-02-25 09:50:43,222 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
27-02-25 09:50:43,223 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
27-02-25 09:50:43,225 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 09:50:43,225 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
27-02-25 09:50:43,226 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
27-02-25 09:50:43,226 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 09:50:43,228 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
27-02-25 09:50:43,250 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:50:43,253 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
27-02-25 09:50:43,255 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
27-02-25 09:50:43,257 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
27-02-25 09:50:43,719 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@723ca036
27-02-25 09:50:43,719 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@723ca036
27-02-25 09:50:43,719 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@723ca036
27-02-25 09:50:43,719 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@25be7b63
27-02-25 09:50:43,719 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@25be7b63
27-02-25 09:50:43,719 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@28dcca0c
27-02-25 09:50:43,720 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@28dcca0c
27-02-25 09:50:43,720 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@45d84a20
27-02-25 09:50:43,720 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@45d84a20
27-02-25 09:50:43,720 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@52f27fbd
27-02-25 09:50:43,720 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@52f27fbd
27-02-25 09:50:43,721 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@52f27fbd
27-02-25 09:50:43,721 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@4c163e3
27-02-25 09:50:43,721 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4c163e3
27-02-25 09:50:43,721 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@4c163e3
27-02-25 09:50:43,721 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4a8355dd
27-02-25 09:50:43,721 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4a8355dd
27-02-25 09:50:43,721 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@4d0d9fe7
27-02-25 09:50:43,722 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@c430e6c
27-02-25 09:50:43,722 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@c430e6c
27-02-25 09:50:43,722 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@312aa7c
27-02-25 09:50:43,722 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@536f2a7e
27-02-25 09:50:43,722 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@72bc6553
27-02-25 09:50:43,722 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@72bc6553
27-02-25 09:50:43,722 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@72bc6553
27-02-25 09:50:43,722 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@66982506
27-02-25 09:50:43,723 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@66982506
27-02-25 09:50:43,723 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@66982506
27-02-25 09:50:43,723 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@70cf32e3
27-02-25 09:50:43,723 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@70cf32e3
27-02-25 09:50:43,723 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@70cf32e3
27-02-25 09:50:43,723 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@5a59ca5e
27-02-25 09:50:43,723 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@5a59ca5e
27-02-25 09:50:43,724 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a59ca5e
27-02-25 09:50:43,724 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4bdeaabb
27-02-25 09:50:43,724 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4bdeaabb
27-02-25 09:50:43,724 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4bdeaabb
27-02-25 09:50:43,724 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6c4906d3
27-02-25 09:50:43,724 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6c4906d3
27-02-25 09:50:43,724 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@65987993
27-02-25 09:50:43,725 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@65987993
27-02-25 09:50:43,725 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@71075444
27-02-25 09:50:43,725 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@71075444
27-02-25 09:50:43,725 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71075444
27-02-25 09:50:43,725 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4f32a3ad
27-02-25 09:50:43,725 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@6b695b06
27-02-25 09:50:43,725 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6b695b06
27-02-25 09:50:43,726 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4d1bf319
27-02-25 09:50:43,726 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@6f53b8a
27-02-25 09:50:43,726 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6f53b8a
27-02-25 09:50:43,726 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@6f53b8a
27-02-25 09:50:43,726 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5c80cf32
27-02-25 09:50:43,726 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@7d900ecf
27-02-25 09:50:43,726 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6f01b95f
27-02-25 09:50:43,727 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@4007f65e
27-02-25 09:50:43,727 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4007f65e
27-02-25 09:50:43,727 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a245833
27-02-25 09:50:43,727 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a245833
27-02-25 09:50:43,727 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@673fdbce
27-02-25 09:50:43,727 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5965d37
27-02-25 09:50:43,727 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7a5ceedd
27-02-25 09:50:43,728 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4201c465
27-02-25 09:50:43,728 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5b799640
27-02-25 09:50:43,728 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6cb107fd
27-02-25 09:50:43,728 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@710636b0
27-02-25 09:50:43,728 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@710636b0
27-02-25 09:50:43,729 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3de8f619
27-02-25 09:50:43,729 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3de8f619
27-02-25 09:50:43,729 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2ab4bc72
27-02-25 09:50:43,729 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2ab4bc72
27-02-25 09:50:43,729 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4e5ed836
27-02-25 09:50:43,729 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4e5ed836
27-02-25 09:50:43,729 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@eadd4fb
27-02-25 09:50:43,729 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@eadd4fb
27-02-25 09:50:43,730 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@740fb309
27-02-25 09:50:43,730 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7bd7d6d6
27-02-25 09:50:43,730 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@43f02ef2
27-02-25 09:50:43,730 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@43f02ef2
27-02-25 09:50:43,730 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@239a307b
27-02-25 09:50:43,730 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a8448fa
27-02-25 09:50:43,731 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f204a1a
27-02-25 09:50:43,731 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2de56eb2
27-02-25 09:50:43,731 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2de56eb2
27-02-25 09:50:43,731 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f8e8a9d
27-02-25 09:50:43,731 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5745ca0e
27-02-25 09:50:43,731 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@3ad83a66
27-02-25 09:50:43,731 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3ad83a66
27-02-25 09:50:43,732 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@3cce5371
27-02-25 09:50:43,732 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3cce5371
27-02-25 09:50:43,732 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@17bffc17
27-02-25 09:50:43,732 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@17bffc17
27-02-25 09:50:43,732 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@17bffc17
27-02-25 09:50:43,732 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6e535154
27-02-25 09:50:43,733 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6e535154
27-02-25 09:50:43,733 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6e535154
27-02-25 09:50:43,734 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@15a34df2
27-02-25 09:50:43,734 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5b38c1ec
27-02-25 09:50:43,735 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@338fc1d8
27-02-25 09:50:43,735 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@338fc1d8
27-02-25 09:50:43,735 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4722ef0c
27-02-25 09:50:43,735 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4722ef0c
27-02-25 09:50:43,735 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4722ef0c
27-02-25 09:50:43,735 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@48e1f6c7
27-02-25 09:50:43,736 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@55cb6996
27-02-25 09:50:43,736 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@1807e3f6
27-02-25 09:50:43,736 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1807e3f6
27-02-25 09:50:43,736 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@480d3575
27-02-25 09:50:43,736 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@480d3575
27-02-25 09:50:43,736 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@480d3575
27-02-25 09:50:43,736 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@f1da57d
27-02-25 09:50:43,737 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f1da57d
27-02-25 09:50:43,737 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@194fad1
27-02-25 09:50:43,737 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@194fad1
27-02-25 09:50:43,737 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@26abb146
27-02-25 09:50:43,737 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@26abb146
27-02-25 09:50:43,737 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@72c8e7b
27-02-25 09:50:43,737 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@72c8e7b
27-02-25 09:50:43,737 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@65f8f5ae
27-02-25 09:50:43,737 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@65f8f5ae
27-02-25 09:50:43,738 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@431cd9b2
27-02-25 09:50:43,738 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@38467116
27-02-25 09:50:43,748 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@69504ae9
27-02-25 09:50:43,748 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@69504ae9
27-02-25 09:50:43,750 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@71687585
27-02-25 09:50:43,750 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1807f5a7
27-02-25 09:50:43,750 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1b919693
27-02-25 09:50:43,751 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7fb4f2a9
27-02-25 09:50:43,751 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4dc27487
27-02-25 09:50:43,751 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6a4f1a55
27-02-25 09:50:43,751 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7dfd3c81
27-02-25 09:50:43,751 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2584b82d
27-02-25 09:50:43,751 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7bbc8656
27-02-25 09:50:43,755 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
27-02-25 09:50:43,757 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
27-02-25 09:50:43,762 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@798162bc] into BootstrapContext; was [null]
27-02-25 09:50:43,763 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1df8da7a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@23941fb4]
27-02-25 09:50:43,996 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Usuario] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 09:50:43,998 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Cliente] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 09:50:44,000 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Bicicleta] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 09:50:44,001 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
27-02-25 09:50:44,001 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
27-02-25 09:50:44,018 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
27-02-25 09:50:44,018 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
27-02-25 09:50:44,019 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
27-02-25 09:50:44,028 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:50:44,028 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
27-02-25 09:50:44,028 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:50:44,040 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
27-02-25 09:50:44,121 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
27-02-25 09:50:44,121 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 09:50:44,122 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
27-02-25 09:50:44,123 | INFO  | pooling              | HHH10001003: Autocommit mode: false
27-02-25 09:50:44,138 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
27-02-25 09:50:44,138 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
27-02-25 09:50:45,555 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
27-02-25 09:50:45,586 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
27-02-25 09:50:45,586 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
27-02-25 09:50:45,586 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
27-02-25 09:50:45,852 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
27-02-25 09:50:45,852 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
27-02-25 09:50:45,852 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
27-02-25 09:50:45,867 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
27-02-25 09:50:45,883 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
27-02-25 09:50:45,883 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
27-02-25 09:50:45,883 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 09:50:45,899 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
27-02-25 09:50:45,899 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
27-02-25 09:50:45,899 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
27-02-25 09:50:45,930 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a195a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76304b46)
27-02-25 09:50:45,930 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fa3be26) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4287d447)
27-02-25 09:50:45,930 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3af37506) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e6d7365)
27-02-25 09:50:45,930 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0da600) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d4602a)
27-02-25 09:50:45,930 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ae6e73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47dd778)
27-02-25 09:50:45,930 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15515c51) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@36a7abe1)
27-02-25 09:50:45,930 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64a896b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e044b4a)
27-02-25 09:50:45,930 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11a82d0f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1adb7478)
27-02-25 09:50:45,930 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ae66c85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@16943e88)
27-02-25 09:50:45,946 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
27-02-25 09:50:45,946 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
27-02-25 09:50:45,946 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
27-02-25 09:50:45,946 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 09:50:45,946 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 09:50:45,946 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@1059754c
27-02-25 09:50:45,946 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@71687585`
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 09:50:45,961 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 09:50:45,961 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@775594f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5767b2af]
27-02-25 09:50:46,055 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
27-02-25 09:50:46,086 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
27-02-25 09:50:46,102 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:50:46,102 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
27-02-25 09:50:46,117 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
27-02-25 09:50:46,947 | DEBUG | SessionFactoryImpl   | Building session factory
27-02-25 09:50:46,947 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
27-02-25 09:50:46,961 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
27-02-25 09:50:47,106 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 09:50:47,108 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\target\classes;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\jakarta.persistence\2.2.3\jakarta.persistence-2.2.3.jar, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7c29adc8, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
27-02-25 09:50:47,111 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 09:50:47,112 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
27-02-25 09:50:47,119 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
27-02-25 09:50:47,242 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
27-02-25 09:50:47,243 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
27-02-25 09:50:47,244 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
27-02-25 09:50:47,245 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
27-02-25 09:50:47,248 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@24934262] under count; prior registration was null
27-02-25 09:50:47,250 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2bebb74f] under every; prior registration was null
27-02-25 09:50:47,251 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@58cf8f94] under any; prior registration was null
27-02-25 09:50:47,252 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
27-02-25 09:50:47,253 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
27-02-25 09:50:47,254 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
27-02-25 09:50:47,256 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
27-02-25 09:50:47,256 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
27-02-25 09:50:47,256 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
27-02-25 09:50:47,256 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
27-02-25 09:50:47,257 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
27-02-25 09:50:47,257 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
27-02-25 09:50:47,260 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
27-02-25 09:50:47,260 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
27-02-25 09:50:47,260 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
27-02-25 09:50:47,260 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
27-02-25 09:50:47,261 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
27-02-25 09:50:47,262 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
27-02-25 09:50:47,262 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
27-02-25 09:50:47,262 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
27-02-25 09:50:47,267 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12968227] under sinh; prior registration was null
27-02-25 09:50:47,267 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@144ab54] under cosh; prior registration was null
27-02-25 09:50:47,268 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cfa2c4f] under tanh; prior registration was null
27-02-25 09:50:47,268 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ecab872] under pi; prior registration was null
27-02-25 09:50:47,268 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@48eb9836] under log; prior registration was null
27-02-25 09:50:47,269 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
27-02-25 09:50:47,269 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
27-02-25 09:50:47,269 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
27-02-25 09:50:47,269 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
27-02-25 09:50:47,269 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
27-02-25 09:50:47,270 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
27-02-25 09:50:47,270 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
27-02-25 09:50:47,270 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
27-02-25 09:50:47,270 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
27-02-25 09:50:47,274 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
27-02-25 09:50:47,274 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
27-02-25 09:50:47,274 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
27-02-25 09:50:47,276 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@79d06bbd] under position; prior registration was null
27-02-25 09:50:47,279 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@17a703f5] under overlay; prior registration was null
27-02-25 09:50:47,281 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3531f3ca] under trim; prior registration was null
27-02-25 09:50:47,283 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5e671e20] under cast; prior registration was null
27-02-25 09:50:47,283 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eabe84a] under collate; prior registration was null
27-02-25 09:50:47,285 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3f049056] under extract; prior registration was null
27-02-25 09:50:47,285 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
27-02-25 09:50:47,285 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
27-02-25 09:50:47,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1de0a46c] under ifnull; prior registration was null
27-02-25 09:50:47,286 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
27-02-25 09:50:47,287 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
27-02-25 09:50:47,287 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@54f4a7f0] under pad; prior registration was null
27-02-25 09:50:47,288 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5477a1ca] under str; prior registration was null
27-02-25 09:50:47,291 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@43b40233] under format; prior registration was null
27-02-25 09:50:47,292 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2184b4f4] under timestampadd; prior registration was null
27-02-25 09:50:47,294 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@35764bef] under timestampdiff; prior registration was null
27-02-25 09:50:47,294 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
27-02-25 09:50:47,295 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
27-02-25 09:50:47,295 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2903c6ff] under current_date; prior registration was null
27-02-25 09:50:47,296 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@61af1510] under current_time; prior registration was null
27-02-25 09:50:47,296 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@37af1f93] under current_timestamp; prior registration was null
27-02-25 09:50:47,296 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
27-02-25 09:50:47,296 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
27-02-25 09:50:47,296 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
27-02-25 09:50:47,296 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@778d82e9] under local_date; prior registration was null
27-02-25 09:50:47,296 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@408e96d9] under local_time; prior registration was null
27-02-25 09:50:47,297 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59901c4d] under local_datetime; prior registration was null
27-02-25 09:50:47,297 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@168cd36b] under offset_datetime; prior registration was null
27-02-25 09:50:47,307 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
27-02-25 09:50:47,308 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
27-02-25 09:50:47,308 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
27-02-25 09:50:47,308 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
27-02-25 09:50:47,308 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@d8d9199] under instant; prior registration was null
27-02-25 09:50:47,308 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
27-02-25 09:50:47,309 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@71ad3d8a] under sql; prior registration was null
27-02-25 09:50:47,309 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
27-02-25 09:50:47,309 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
27-02-25 09:50:47,309 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
27-02-25 09:50:47,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
27-02-25 09:50:47,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@48eb9836
27-02-25 09:50:47,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
27-02-25 09:50:47,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
27-02-25 09:50:47,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
27-02-25 09:50:47,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
27-02-25 09:50:47,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
27-02-25 09:50:47,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
27-02-25 09:50:47,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
27-02-25 09:50:47,311 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
27-02-25 09:50:47,312 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@13da7ab0] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
27-02-25 09:50:47,312 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2c8662ac] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
27-02-25 09:50:47,312 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
27-02-25 09:50:47,312 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
27-02-25 09:50:47,312 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
27-02-25 09:50:47,312 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
27-02-25 09:50:47,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
27-02-25 09:50:47,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
27-02-25 09:50:47,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
27-02-25 09:50:47,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
27-02-25 09:50:47,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
27-02-25 09:50:47,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
27-02-25 09:50:47,313 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
27-02-25 09:50:47,314 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
27-02-25 09:50:47,314 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
27-02-25 09:50:47,314 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
27-02-25 09:50:47,318 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
27-02-25 09:50:47,318 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
27-02-25 09:50:47,318 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
27-02-25 09:50:47,319 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
27-02-25 09:50:47,320 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
27-02-25 09:50:47,322 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
27-02-25 09:50:47,331 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
27-02-25 09:50:47,333 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
27-02-25 09:50:47,333 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
27-02-25 09:50:47,334 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
27-02-25 09:50:47,335 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
27-02-25 09:50:47,335 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
27-02-25 09:50:47,335 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@260ff5b7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@79d06bbd
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
27-02-25 09:50:47,336 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
27-02-25 09:50:47,347 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@a518813] under trunc; prior registration was null
27-02-25 09:50:47,347 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
27-02-25 09:50:47,347 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
27-02-25 09:50:47,348 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43d38654] under bitand; prior registration was null
27-02-25 09:50:47,348 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75361cf6] under bitor; prior registration was null
27-02-25 09:50:47,348 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d303498] under bitxor; prior registration was null
27-02-25 09:50:47,348 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba7383d] under bitnot; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
27-02-25 09:50:47,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3419e23b] under format; prior registration was org.hibernate.dialect.function.FormatFunction@43b40233
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@408e96d9
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@59901c4d
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
27-02-25 09:50:47,350 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@710d89e2] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ecab872
27-02-25 09:50:47,351 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d75e7af] under chr; prior registration was null
27-02-25 09:50:47,351 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
27-02-25 09:50:47,351 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fc142ec] under sysdate; prior registration was null
27-02-25 09:50:47,352 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5e048149] under listagg; prior registration was null
27-02-25 09:50:47,368 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
27-02-25 09:50:47,369 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
27-02-25 09:50:47,369 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
27-02-25 09:50:47,369 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
27-02-25 09:50:47,370 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
27-02-25 09:50:47,370 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
27-02-25 09:50:47,371 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
27-02-25 09:50:47,371 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
27-02-25 09:50:47,384 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
27-02-25 09:50:47,385 | DEBUG | HQL_FUNCTIONS        | avg(arg)
27-02-25 09:50:47,385 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
27-02-25 09:50:47,385 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
27-02-25 09:50:47,385 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
27-02-25 09:50:47,385 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
27-02-25 09:50:47,385 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
27-02-25 09:50:47,385 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
27-02-25 09:50:47,385 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
27-02-25 09:50:47,386 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Date curdate()
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Date current date
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Time current time
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Date current_date
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Time current_time
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Time curtime()
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
27-02-25 09:50:47,387 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
27-02-25 09:50:47,388 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
27-02-25 09:50:47,388 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
27-02-25 09:50:47,388 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | Instant instant
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
27-02-25 09:50:47,389 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
27-02-25 09:50:47,390 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 09:50:47,390 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
27-02-25 09:50:47,390 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
27-02-25 09:50:47,390 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
27-02-25 09:50:47,391 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
27-02-25 09:50:47,391 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
27-02-25 09:50:47,391 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
27-02-25 09:50:47,391 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
27-02-25 09:50:47,391 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
27-02-25 09:50:47,391 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
27-02-25 09:50:47,391 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
27-02-25 09:50:47,392 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
27-02-25 09:50:47,392 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
27-02-25 09:50:47,392 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
27-02-25 09:50:47,393 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
27-02-25 09:50:47,393 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
27-02-25 09:50:47,394 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
27-02-25 09:50:47,400 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
27-02-25 09:50:47,400 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
27-02-25 09:50:47,400 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
27-02-25 09:50:47,400 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
27-02-25 09:50:47,400 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
27-02-25 09:50:47,400 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
27-02-25 09:50:47,401 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
27-02-25 09:50:47,401 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
27-02-25 09:50:47,401 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
27-02-25 09:50:47,401 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
27-02-25 09:50:47,401 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
27-02-25 09:50:47,401 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
27-02-25 09:50:47,401 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
27-02-25 09:50:47,401 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | Double pi
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
27-02-25 09:50:47,402 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
27-02-25 09:50:47,403 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | Object sql
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | String str(arg)
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
27-02-25 09:50:47,404 | DEBUG | HQL_FUNCTIONS        | sum(arg)
27-02-25 09:50:47,405 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
27-02-25 09:50:47,405 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
27-02-25 09:50:47,405 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
27-02-25 09:50:47,405 | DEBUG | HQL_FUNCTIONS        | String time(arg)
27-02-25 09:50:47,405 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
27-02-25 09:50:47,405 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 09:50:47,406 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
27-02-25 09:50:47,406 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
27-02-25 09:50:47,406 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
27-02-25 09:50:47,406 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
27-02-25 09:50:47,406 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
27-02-25 09:50:47,406 | DEBUG | HQL_FUNCTIONS        | Date utc_date
27-02-25 09:50:47,406 | DEBUG | HQL_FUNCTIONS        | Time utc_time
27-02-25 09:50:47,407 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
27-02-25 09:50:47,407 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
27-02-25 09:50:47,407 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
27-02-25 09:50:47,407 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
27-02-25 09:50:47,407 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
27-02-25 09:50:47,407 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
27-02-25 09:50:47,418 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
27-02-25 09:50:47,426 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
27-02-25 09:50:47,585 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 09:50:47,585 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
27-02-25 09:50:47,588 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
27-02-25 09:50:47,588 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
27-02-25 09:50:47,590 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
27-02-25 09:50:47,609 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
27-02-25 09:50:47,616 | TRACE | batch                | Using standard BatchBuilder (1)
27-02-25 09:50:47,633 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
27-02-25 09:50:47,636 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
27-02-25 09:50:47,849 | DEBUG | creation             | Starting post-init callbacks
27-02-25 09:50:47,868 | TRACE | MetadataContext      | Wrapping up metadata context...
27-02-25 09:50:47,997 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
27-02-25 09:50:47,998 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
27-02-25 09:50:47,998 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
27-02-25 09:50:48,000 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
27-02-25 09:50:48,023 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
27-02-25 09:50:48,024 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
27-02-25 09:50:48,029 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@775594f2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1229a2b7]
27-02-25 09:50:48,039 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
27-02-25 09:50:48,039 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
27-02-25 09:50:48,063 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
27-02-25 09:50:48,064 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
27-02-25 09:50:48,073 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@895416d
27-02-25 09:50:48,073 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: 1af13adc-d0d1-42db-ba24-2ab279fc9b35 (<unnamed>)
27-02-25 09:50:48,073 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
27-02-25 09:50:48,073 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1229a2b7] for TypeConfiguration
27-02-25 09:50:48,074 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
27-02-25 09:50:48,075 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
27-02-25 09:50:48,155 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
27-02-25 09:50:48,163 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
27-02-25 09:50:48,185 | TRACE | SessionImpl          | Opened Session [7760bc81-0527-4786-b5af-8807a5f40645] at timestamp: 1740660648185
27-02-25 09:50:48,188 | TRACE | SessionImpl          | Closing session [7760bc81-0527-4786-b5af-8807a5f40645]
27-02-25 09:50:48,188 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@17143b3b]
27-02-25 09:50:48,188 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
27-02-25 09:50:48,189 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
27-02-25 09:50:48,189 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
27-02-25 09:50:48,189 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
27-02-25 09:50:48,189 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:50:48,190 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1229a2b7] for TypeConfiguration
27-02-25 09:50:48,190 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@268cbb86] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1229a2b7]
27-02-25 09:50:48,192 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
27-02-25 09:50:48,192 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 09:50:48,227 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
27-02-25 09:54:32,193 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
27-02-25 09:54:32,198 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
27-02-25 09:54:32,199 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
27-02-25 09:54:32,259 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
27-02-25 09:54:32,483 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
27-02-25 09:54:32,488 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
27-02-25 09:54:32,491 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
27-02-25 09:54:32,492 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
27-02-25 09:54:32,493 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
27-02-25 09:54:32,493 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
27-02-25 09:54:32,504 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.bicicletario.model.Usuario
		com.bicicletario.model.Cliente
		com.bicicletario.model.Bicicleta]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
27-02-25 09:54:32,511 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
27-02-25 09:54:32,525 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
27-02-25 09:54:32,549 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 09:54:32,550 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 09:54:32,550 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 09:54:32,551 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 09:54:32,551 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 09:54:32,552 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
27-02-25 09:54:32,553 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
27-02-25 09:54:32,554 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
27-02-25 09:54:32,555 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
27-02-25 09:54:32,557 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
27-02-25 09:54:32,557 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
27-02-25 09:54:32,558 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
27-02-25 09:54:32,558 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
27-02-25 09:54:32,560 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 09:54:32,560 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 09:54:32,560 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
27-02-25 09:54:32,561 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
27-02-25 09:54:32,561 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
27-02-25 09:54:32,563 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
27-02-25 09:54:32,563 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
27-02-25 09:54:32,564 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
27-02-25 09:54:32,565 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
27-02-25 09:54:32,566 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
27-02-25 09:54:32,567 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
27-02-25 09:54:32,568 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
27-02-25 09:54:32,569 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
27-02-25 09:54:32,569 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
27-02-25 09:54:32,570 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
27-02-25 09:54:32,572 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
27-02-25 09:54:32,651 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
27-02-25 09:54:32,657 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
27-02-25 09:54:32,695 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
27-02-25 09:54:32,699 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
27-02-25 09:54:32,704 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
27-02-25 09:54:32,715 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
27-02-25 09:54:32,716 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
27-02-25 09:54:32,717 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 09:54:32,718 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 09:54:32,718 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
27-02-25 09:54:32,720 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
27-02-25 09:54:32,720 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
27-02-25 09:54:32,722 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 09:54:32,723 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
27-02-25 09:54:32,723 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
27-02-25 09:54:32,723 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 09:54:32,725 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
27-02-25 09:54:32,746 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:54:32,748 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
27-02-25 09:54:32,750 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
27-02-25 09:54:32,752 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
27-02-25 09:54:33,090 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@723ca036
27-02-25 09:54:33,090 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@723ca036
27-02-25 09:54:33,090 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@723ca036
27-02-25 09:54:33,090 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@25be7b63
27-02-25 09:54:33,090 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@25be7b63
27-02-25 09:54:33,091 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@28dcca0c
27-02-25 09:54:33,091 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@28dcca0c
27-02-25 09:54:33,091 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@45d84a20
27-02-25 09:54:33,091 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@45d84a20
27-02-25 09:54:33,091 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@52f27fbd
27-02-25 09:54:33,091 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@52f27fbd
27-02-25 09:54:33,092 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@52f27fbd
27-02-25 09:54:33,092 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@4c163e3
27-02-25 09:54:33,092 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4c163e3
27-02-25 09:54:33,092 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@4c163e3
27-02-25 09:54:33,092 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4a8355dd
27-02-25 09:54:33,092 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4a8355dd
27-02-25 09:54:33,092 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@4d0d9fe7
27-02-25 09:54:33,093 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@c430e6c
27-02-25 09:54:33,093 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@c430e6c
27-02-25 09:54:33,093 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@312aa7c
27-02-25 09:54:33,093 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@536f2a7e
27-02-25 09:54:33,093 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@72bc6553
27-02-25 09:54:33,093 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@72bc6553
27-02-25 09:54:33,093 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@72bc6553
27-02-25 09:54:33,093 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@66982506
27-02-25 09:54:33,094 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@66982506
27-02-25 09:54:33,094 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@66982506
27-02-25 09:54:33,094 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@70cf32e3
27-02-25 09:54:33,094 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@70cf32e3
27-02-25 09:54:33,094 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@70cf32e3
27-02-25 09:54:33,094 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@5a59ca5e
27-02-25 09:54:33,094 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@5a59ca5e
27-02-25 09:54:33,094 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a59ca5e
27-02-25 09:54:33,095 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4bdeaabb
27-02-25 09:54:33,095 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4bdeaabb
27-02-25 09:54:33,095 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4bdeaabb
27-02-25 09:54:33,095 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6c4906d3
27-02-25 09:54:33,095 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6c4906d3
27-02-25 09:54:33,095 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@65987993
27-02-25 09:54:33,096 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@65987993
27-02-25 09:54:33,096 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@71075444
27-02-25 09:54:33,096 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@71075444
27-02-25 09:54:33,096 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71075444
27-02-25 09:54:33,096 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4f32a3ad
27-02-25 09:54:33,096 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@6b695b06
27-02-25 09:54:33,096 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6b695b06
27-02-25 09:54:33,096 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4d1bf319
27-02-25 09:54:33,097 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@6f53b8a
27-02-25 09:54:33,097 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6f53b8a
27-02-25 09:54:33,097 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@6f53b8a
27-02-25 09:54:33,097 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5c80cf32
27-02-25 09:54:33,097 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@7d900ecf
27-02-25 09:54:33,097 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6f01b95f
27-02-25 09:54:33,097 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@4007f65e
27-02-25 09:54:33,097 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4007f65e
27-02-25 09:54:33,098 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a245833
27-02-25 09:54:33,099 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a245833
27-02-25 09:54:33,099 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@673fdbce
27-02-25 09:54:33,099 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5965d37
27-02-25 09:54:33,099 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7a5ceedd
27-02-25 09:54:33,099 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4201c465
27-02-25 09:54:33,099 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5b799640
27-02-25 09:54:33,100 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6cb107fd
27-02-25 09:54:33,100 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@710636b0
27-02-25 09:54:33,100 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@710636b0
27-02-25 09:54:33,100 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3de8f619
27-02-25 09:54:33,100 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3de8f619
27-02-25 09:54:33,101 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2ab4bc72
27-02-25 09:54:33,101 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2ab4bc72
27-02-25 09:54:33,101 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4e5ed836
27-02-25 09:54:33,101 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4e5ed836
27-02-25 09:54:33,101 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@eadd4fb
27-02-25 09:54:33,101 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@eadd4fb
27-02-25 09:54:33,101 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@740fb309
27-02-25 09:54:33,102 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7bd7d6d6
27-02-25 09:54:33,102 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@43f02ef2
27-02-25 09:54:33,102 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@43f02ef2
27-02-25 09:54:33,102 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@239a307b
27-02-25 09:54:33,102 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a8448fa
27-02-25 09:54:33,103 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f204a1a
27-02-25 09:54:33,103 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2de56eb2
27-02-25 09:54:33,103 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2de56eb2
27-02-25 09:54:33,103 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f8e8a9d
27-02-25 09:54:33,103 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5745ca0e
27-02-25 09:54:33,103 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@3ad83a66
27-02-25 09:54:33,103 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3ad83a66
27-02-25 09:54:33,104 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@3cce5371
27-02-25 09:54:33,104 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3cce5371
27-02-25 09:54:33,104 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@17bffc17
27-02-25 09:54:33,104 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@17bffc17
27-02-25 09:54:33,104 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@17bffc17
27-02-25 09:54:33,104 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6e535154
27-02-25 09:54:33,104 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6e535154
27-02-25 09:54:33,104 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6e535154
27-02-25 09:54:33,105 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@15a34df2
27-02-25 09:54:33,106 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5b38c1ec
27-02-25 09:54:33,106 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@338fc1d8
27-02-25 09:54:33,106 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@338fc1d8
27-02-25 09:54:33,106 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4722ef0c
27-02-25 09:54:33,106 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4722ef0c
27-02-25 09:54:33,106 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4722ef0c
27-02-25 09:54:33,106 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@48e1f6c7
27-02-25 09:54:33,107 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@55cb6996
27-02-25 09:54:33,107 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@1807e3f6
27-02-25 09:54:33,107 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1807e3f6
27-02-25 09:54:33,107 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@480d3575
27-02-25 09:54:33,107 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@480d3575
27-02-25 09:54:33,107 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@480d3575
27-02-25 09:54:33,108 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@f1da57d
27-02-25 09:54:33,108 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f1da57d
27-02-25 09:54:33,108 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@194fad1
27-02-25 09:54:33,108 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@194fad1
27-02-25 09:54:33,108 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@26abb146
27-02-25 09:54:33,108 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@26abb146
27-02-25 09:54:33,108 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@72c8e7b
27-02-25 09:54:33,108 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@72c8e7b
27-02-25 09:54:33,108 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@65f8f5ae
27-02-25 09:54:33,109 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@65f8f5ae
27-02-25 09:54:33,109 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@431cd9b2
27-02-25 09:54:33,109 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@38467116
27-02-25 09:54:33,117 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@69504ae9
27-02-25 09:54:33,117 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@69504ae9
27-02-25 09:54:33,119 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@71687585
27-02-25 09:54:33,119 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1807f5a7
27-02-25 09:54:33,119 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1b919693
27-02-25 09:54:33,120 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7fb4f2a9
27-02-25 09:54:33,120 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4dc27487
27-02-25 09:54:33,120 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6a4f1a55
27-02-25 09:54:33,120 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7dfd3c81
27-02-25 09:54:33,120 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2584b82d
27-02-25 09:54:33,120 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7bbc8656
27-02-25 09:54:33,124 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
27-02-25 09:54:33,126 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
27-02-25 09:54:33,131 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@798162bc] into BootstrapContext; was [null]
27-02-25 09:54:33,132 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1df8da7a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@23941fb4]
27-02-25 09:54:33,317 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Usuario] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 09:54:33,319 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Cliente] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 09:54:33,321 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Bicicleta] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 09:54:33,322 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
27-02-25 09:54:33,322 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
27-02-25 09:54:33,337 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
27-02-25 09:54:33,337 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
27-02-25 09:54:33,339 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
27-02-25 09:54:33,347 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:54:33,347 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
27-02-25 09:54:33,348 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:54:33,359 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
27-02-25 09:54:33,371 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
27-02-25 09:54:33,371 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 09:54:33,372 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
27-02-25 09:54:33,372 | INFO  | pooling              | HHH10001003: Autocommit mode: false
27-02-25 09:54:33,377 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
27-02-25 09:54:33,378 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
27-02-25 09:54:34,309 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
27-02-25 09:54:34,340 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
27-02-25 09:54:34,340 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
27-02-25 09:54:34,340 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
27-02-25 09:54:34,456 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
27-02-25 09:54:34,459 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
27-02-25 09:54:34,459 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
27-02-25 09:54:34,475 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
27-02-25 09:54:34,476 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
27-02-25 09:54:34,484 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
27-02-25 09:54:34,485 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 09:54:34,497 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
27-02-25 09:54:34,498 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
27-02-25 09:54:34,508 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
27-02-25 09:54:34,528 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c383e33) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a195a4)
27-02-25 09:54:34,528 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76304b46) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fa3be26)
27-02-25 09:54:34,528 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4287d447) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3af37506)
27-02-25 09:54:34,529 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e6d7365) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0da600)
27-02-25 09:54:34,529 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d4602a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ae6e73)
27-02-25 09:54:34,529 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47dd778) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15515c51)
27-02-25 09:54:34,529 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36a7abe1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64a896b0)
27-02-25 09:54:34,529 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e044b4a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11a82d0f)
27-02-25 09:54:34,529 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1adb7478) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ae66c85)
27-02-25 09:54:34,532 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
27-02-25 09:54:34,532 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
27-02-25 09:54:34,533 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
27-02-25 09:54:34,536 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 09:54:34,536 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 09:54:34,542 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@78f9ed3e
27-02-25 09:54:34,543 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@71687585`
27-02-25 09:54:34,550 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
27-02-25 09:54:34,550 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
27-02-25 09:54:34,552 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
27-02-25 09:54:34,557 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 09:54:34,558 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 09:54:34,558 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 09:54:34,558 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 09:54:34,558 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 09:54:34,558 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 09:54:34,560 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
27-02-25 09:54:34,560 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 09:54:34,560 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 09:54:34,562 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@33a630fa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@775594f2]
27-02-25 09:54:34,643 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
27-02-25 09:54:34,675 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
27-02-25 09:54:34,691 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:54:34,692 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
27-02-25 09:54:34,697 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
27-02-25 09:54:35,075 | DEBUG | SessionFactoryImpl   | Building session factory
27-02-25 09:54:35,075 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
27-02-25 09:54:35,088 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
27-02-25 09:54:35,181 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 09:54:35,183 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\target\classes;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\jakarta.persistence\2.2.3\jakarta.persistence-2.2.3.jar, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3cff0139, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
27-02-25 09:54:35,185 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 09:54:35,186 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
27-02-25 09:54:35,193 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
27-02-25 09:54:35,301 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
27-02-25 09:54:35,301 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
27-02-25 09:54:35,302 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
27-02-25 09:54:35,303 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
27-02-25 09:54:35,306 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@499ef98e] under count; prior registration was null
27-02-25 09:54:35,308 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@341672e] under every; prior registration was null
27-02-25 09:54:35,308 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2bebb74f] under any; prior registration was null
27-02-25 09:54:35,309 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
27-02-25 09:54:35,309 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
27-02-25 09:54:35,310 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
27-02-25 09:54:35,312 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
27-02-25 09:54:35,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
27-02-25 09:54:35,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
27-02-25 09:54:35,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
27-02-25 09:54:35,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
27-02-25 09:54:35,313 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
27-02-25 09:54:35,317 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
27-02-25 09:54:35,318 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
27-02-25 09:54:35,318 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
27-02-25 09:54:35,318 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
27-02-25 09:54:35,319 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
27-02-25 09:54:35,319 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
27-02-25 09:54:35,319 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
27-02-25 09:54:35,320 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
27-02-25 09:54:35,323 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a87b51] under sinh; prior registration was null
27-02-25 09:54:35,325 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12968227] under cosh; prior registration was null
27-02-25 09:54:35,325 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@144ab54] under tanh; prior registration was null
27-02-25 09:54:35,325 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cfa2c4f] under pi; prior registration was null
27-02-25 09:54:35,325 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ecab872] under log; prior registration was null
27-02-25 09:54:35,326 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
27-02-25 09:54:35,326 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
27-02-25 09:54:35,327 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
27-02-25 09:54:35,327 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
27-02-25 09:54:35,327 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
27-02-25 09:54:35,328 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
27-02-25 09:54:35,328 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
27-02-25 09:54:35,328 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
27-02-25 09:54:35,328 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
27-02-25 09:54:35,330 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
27-02-25 09:54:35,330 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
27-02-25 09:54:35,331 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
27-02-25 09:54:35,332 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@64524dd] under position; prior registration was null
27-02-25 09:54:35,335 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6c42f2a1] under overlay; prior registration was null
27-02-25 09:54:35,337 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1aa6e3c0] under trim; prior registration was null
27-02-25 09:54:35,338 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2caa5d7c] under cast; prior registration was null
27-02-25 09:54:35,339 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e671e20] under collate; prior registration was null
27-02-25 09:54:35,340 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5e8cda75] under extract; prior registration was null
27-02-25 09:54:35,341 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
27-02-25 09:54:35,341 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
27-02-25 09:54:35,342 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6fd12c5] under ifnull; prior registration was null
27-02-25 09:54:35,342 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
27-02-25 09:54:35,342 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
27-02-25 09:54:35,343 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4c2fb9dd] under pad; prior registration was null
27-02-25 09:54:35,344 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@25cd49a4] under str; prior registration was null
27-02-25 09:54:35,346 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@131ff6fa] under format; prior registration was null
27-02-25 09:54:35,348 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@42c28305] under timestampadd; prior registration was null
27-02-25 09:54:35,349 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6ba30587] under timestampdiff; prior registration was null
27-02-25 09:54:35,350 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
27-02-25 09:54:35,350 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
27-02-25 09:54:35,351 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2eadc9f6] under current_date; prior registration was null
27-02-25 09:54:35,351 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2903c6ff] under current_time; prior registration was null
27-02-25 09:54:35,351 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@61af1510] under current_timestamp; prior registration was null
27-02-25 09:54:35,351 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
27-02-25 09:54:35,351 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
27-02-25 09:54:35,351 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
27-02-25 09:54:35,351 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@37af1f93] under local_date; prior registration was null
27-02-25 09:54:35,351 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@778d82e9] under local_time; prior registration was null
27-02-25 09:54:35,352 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@408e96d9] under local_datetime; prior registration was null
27-02-25 09:54:35,352 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59901c4d] under offset_datetime; prior registration was null
27-02-25 09:54:35,359 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
27-02-25 09:54:35,360 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
27-02-25 09:54:35,360 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
27-02-25 09:54:35,360 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
27-02-25 09:54:35,360 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@168cd36b] under instant; prior registration was null
27-02-25 09:54:35,360 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
27-02-25 09:54:35,361 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@10cd6753] under sql; prior registration was null
27-02-25 09:54:35,361 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
27-02-25 09:54:35,361 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
27-02-25 09:54:35,361 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
27-02-25 09:54:35,362 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
27-02-25 09:54:35,362 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ecab872
27-02-25 09:54:35,362 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
27-02-25 09:54:35,362 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
27-02-25 09:54:35,362 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
27-02-25 09:54:35,362 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
27-02-25 09:54:35,363 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
27-02-25 09:54:35,364 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
27-02-25 09:54:35,364 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
27-02-25 09:54:35,364 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
27-02-25 09:54:35,365 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@b835727] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
27-02-25 09:54:35,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@13da7ab0] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
27-02-25 09:54:35,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
27-02-25 09:54:35,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
27-02-25 09:54:35,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
27-02-25 09:54:35,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
27-02-25 09:54:35,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
27-02-25 09:54:35,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
27-02-25 09:54:35,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
27-02-25 09:54:35,366 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
27-02-25 09:54:35,367 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
27-02-25 09:54:35,367 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
27-02-25 09:54:35,367 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
27-02-25 09:54:35,367 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
27-02-25 09:54:35,367 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
27-02-25 09:54:35,367 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
27-02-25 09:54:35,368 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
27-02-25 09:54:35,369 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
27-02-25 09:54:35,369 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
27-02-25 09:54:35,370 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
27-02-25 09:54:35,370 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
27-02-25 09:54:35,373 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
27-02-25 09:54:35,382 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
27-02-25 09:54:35,382 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
27-02-25 09:54:35,382 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
27-02-25 09:54:35,383 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
27-02-25 09:54:35,385 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
27-02-25 09:54:35,385 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
27-02-25 09:54:35,385 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
27-02-25 09:54:35,385 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
27-02-25 09:54:35,385 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
27-02-25 09:54:35,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
27-02-25 09:54:35,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
27-02-25 09:54:35,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
27-02-25 09:54:35,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
27-02-25 09:54:35,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c8662ac] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@64524dd
27-02-25 09:54:35,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
27-02-25 09:54:35,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
27-02-25 09:54:35,386 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
27-02-25 09:54:35,396 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@55d9b8f0] under trunc; prior registration was null
27-02-25 09:54:35,396 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
27-02-25 09:54:35,396 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
27-02-25 09:54:35,396 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a518813] under bitand; prior registration was null
27-02-25 09:54:35,396 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43d38654] under bitor; prior registration was null
27-02-25 09:54:35,397 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75361cf6] under bitxor; prior registration was null
27-02-25 09:54:35,397 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d303498] under bitnot; prior registration was null
27-02-25 09:54:35,397 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
27-02-25 09:54:35,397 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
27-02-25 09:54:35,398 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6ba7383d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@131ff6fa
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@778d82e9
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@408e96d9
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
27-02-25 09:54:35,399 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3419e23b] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cfa2c4f
27-02-25 09:54:35,400 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@710d89e2] under chr; prior registration was null
27-02-25 09:54:35,400 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
27-02-25 09:54:35,400 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d75e7af] under sysdate; prior registration was null
27-02-25 09:54:35,401 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@1b9776f5] under listagg; prior registration was null
27-02-25 09:54:35,418 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
27-02-25 09:54:35,419 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
27-02-25 09:54:35,419 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
27-02-25 09:54:35,419 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
27-02-25 09:54:35,420 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
27-02-25 09:54:35,420 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
27-02-25 09:54:35,420 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
27-02-25 09:54:35,421 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
27-02-25 09:54:35,435 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
27-02-25 09:54:35,435 | DEBUG | HQL_FUNCTIONS        | avg(arg)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
27-02-25 09:54:35,436 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Date curdate()
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Date current date
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Time current time
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Date current_date
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
27-02-25 09:54:35,437 | DEBUG | HQL_FUNCTIONS        | Time current_time
27-02-25 09:54:35,438 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
27-02-25 09:54:35,438 | DEBUG | HQL_FUNCTIONS        | Time curtime()
27-02-25 09:54:35,438 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
27-02-25 09:54:35,438 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 09:54:35,438 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
27-02-25 09:54:35,438 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
27-02-25 09:54:35,438 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
27-02-25 09:54:35,438 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
27-02-25 09:54:35,439 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
27-02-25 09:54:35,439 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
27-02-25 09:54:35,439 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
27-02-25 09:54:35,439 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
27-02-25 09:54:35,439 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
27-02-25 09:54:35,439 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
27-02-25 09:54:35,439 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | Instant instant
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
27-02-25 09:54:35,440 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
27-02-25 09:54:35,441 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
27-02-25 09:54:35,441 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
27-02-25 09:54:35,441 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
27-02-25 09:54:35,442 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
27-02-25 09:54:35,443 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
27-02-25 09:54:35,451 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
27-02-25 09:54:35,451 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
27-02-25 09:54:35,451 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
27-02-25 09:54:35,451 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
27-02-25 09:54:35,451 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
27-02-25 09:54:35,451 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
27-02-25 09:54:35,451 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
27-02-25 09:54:35,452 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
27-02-25 09:54:35,452 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
27-02-25 09:54:35,452 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
27-02-25 09:54:35,452 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
27-02-25 09:54:35,452 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
27-02-25 09:54:35,452 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
27-02-25 09:54:35,452 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | Double pi
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
27-02-25 09:54:35,453 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
27-02-25 09:54:35,454 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | Object sql
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | String str(arg)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
27-02-25 09:54:35,455 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
27-02-25 09:54:35,456 | DEBUG | HQL_FUNCTIONS        | sum(arg)
27-02-25 09:54:35,456 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
27-02-25 09:54:35,456 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
27-02-25 09:54:35,456 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
27-02-25 09:54:35,456 | DEBUG | HQL_FUNCTIONS        | String time(arg)
27-02-25 09:54:35,456 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
27-02-25 09:54:35,456 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 09:54:35,457 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
27-02-25 09:54:35,457 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
27-02-25 09:54:35,457 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
27-02-25 09:54:35,457 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
27-02-25 09:54:35,457 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
27-02-25 09:54:35,458 | DEBUG | HQL_FUNCTIONS        | Date utc_date
27-02-25 09:54:35,458 | DEBUG | HQL_FUNCTIONS        | Time utc_time
27-02-25 09:54:35,458 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
27-02-25 09:54:35,458 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
27-02-25 09:54:35,458 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
27-02-25 09:54:35,458 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
27-02-25 09:54:35,458 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
27-02-25 09:54:35,459 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
27-02-25 09:54:35,467 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
27-02-25 09:54:35,478 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
27-02-25 09:54:35,632 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 09:54:35,633 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
27-02-25 09:54:35,636 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
27-02-25 09:54:35,636 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
27-02-25 09:54:35,639 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
27-02-25 09:54:35,656 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
27-02-25 09:54:35,660 | TRACE | batch                | Using standard BatchBuilder (1)
27-02-25 09:54:35,677 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
27-02-25 09:54:35,887 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
27-02-25 09:54:35,887 | DEBUG | creation             | Starting post-init callbacks
27-02-25 09:54:35,902 | TRACE | MetadataContext      | Wrapping up metadata context...
27-02-25 09:54:35,934 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
27-02-25 09:54:35,934 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
27-02-25 09:54:35,934 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
27-02-25 09:54:35,949 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
27-02-25 09:54:35,949 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
27-02-25 09:54:35,949 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
27-02-25 09:54:35,949 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@33a630fa] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2127e66e]
27-02-25 09:54:35,965 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
27-02-25 09:54:35,965 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
27-02-25 09:54:35,965 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
27-02-25 09:54:35,965 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
27-02-25 09:54:35,965 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5df778c3
27-02-25 09:54:35,965 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: acc0a611-7e2e-499c-bdee-513ac0441589 (<unnamed>)
27-02-25 09:54:35,965 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
27-02-25 09:54:35,965 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2127e66e] for TypeConfiguration
27-02-25 09:54:35,965 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
27-02-25 09:54:35,965 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
27-02-25 09:54:36,043 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
27-02-25 09:54:36,043 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
27-02-25 09:54:36,059 | TRACE | SessionImpl          | Opened Session [137a1d86-0322-4ccf-a1d4-e8b630eb8975] at timestamp: 1740660876059
27-02-25 09:54:36,068 | TRACE | SessionImpl          | Closing session [137a1d86-0322-4ccf-a1d4-e8b630eb8975]
27-02-25 09:54:36,068 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3a26ec8d]
27-02-25 09:54:36,068 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
27-02-25 09:54:36,069 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
27-02-25 09:54:36,069 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
27-02-25 09:54:36,069 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
27-02-25 09:54:36,069 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 09:54:36,070 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2127e66e] for TypeConfiguration
27-02-25 09:54:36,070 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2bc378f7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2127e66e]
27-02-25 09:54:36,071 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
27-02-25 09:54:36,072 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 09:54:36,077 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
27-02-25 10:22:07,879 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
27-02-25 10:22:07,879 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
27-02-25 10:22:07,879 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
27-02-25 10:22:07,942 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
27-02-25 10:22:08,129 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
27-02-25 10:22:08,145 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
27-02-25 10:22:08,145 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
27-02-25 10:22:08,145 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
27-02-25 10:22:08,145 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
27-02-25 10:22:08,145 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
27-02-25 10:22:08,176 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.bicicletario.model.Usuario
		com.bicicletario.model.Cliente
		com.bicicletario.model.Bicicleta]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
27-02-25 10:22:08,176 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
27-02-25 10:22:08,192 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
27-02-25 10:22:08,223 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 10:22:08,223 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 10:22:08,223 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 10:22:08,223 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 10:22:08,223 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 10:22:08,223 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
27-02-25 10:22:08,239 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
27-02-25 10:22:08,239 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
27-02-25 10:22:08,239 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
27-02-25 10:22:08,239 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
27-02-25 10:22:08,239 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
27-02-25 10:22:08,254 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
27-02-25 10:22:08,317 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
27-02-25 10:22:08,317 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
27-02-25 10:22:08,364 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
27-02-25 10:22:08,364 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
27-02-25 10:22:08,364 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 10:22:08,379 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
27-02-25 10:22:08,411 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:22:08,411 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
27-02-25 10:22:08,411 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
27-02-25 10:22:08,411 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3549bca9
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3549bca9
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3549bca9
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4f25b795
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4f25b795
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6fb365ed
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6fb365ed
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6e950bcf
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6e950bcf
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@16414e40
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@16414e40
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@16414e40
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@74bada02
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@74bada02
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@74bada02
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@525575
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@525575
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@46dffdc3
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a709816
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a709816
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@78383390
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6ad3381f
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@53dbe163
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@53dbe163
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@53dbe163
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@db57326
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@db57326
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@db57326
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@34a875b3
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@34a875b3
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@34a875b3
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@4748a0f9
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@4748a0f9
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4748a0f9
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d1ef78d
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d1ef78d
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77d67cf3
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@176b3f44
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@421bba99
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@5d12a356
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@134d26af
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@31bcf236
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b3ed2f0
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4fad9bb2
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@517d4a0d
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7862f56
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3a12c404
27-02-25 10:22:08,693 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1941a8ff
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1941a8ff
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@149dd36b
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@149dd36b
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c1156a7
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c1156a7
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4982cc36
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4f1bfe23
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e19bb76
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@512535ff
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61a88b8c
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22295ec4
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 10:22:08,709 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@736caf7a
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@736caf7a
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@4dd02341
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3212a8d7
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a1a3478
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@495b0487
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@55dfcc6
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@222eb8aa
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@93cf163
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1852a3ff
27-02-25 10:22:08,724 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7203c7ff
27-02-25 10:22:08,724 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
27-02-25 10:22:08,740 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
27-02-25 10:22:08,740 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3ed242a4] into BootstrapContext; was [null]
27-02-25 10:22:08,740 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1199fe66] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@614df0a4]
27-02-25 10:22:08,959 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Usuario] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 10:22:08,959 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Cliente] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 10:22:08,959 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Bicicleta] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 10:22:08,959 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
27-02-25 10:22:08,959 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
27-02-25 10:22:08,974 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
27-02-25 10:22:08,974 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
27-02-25 10:22:08,974 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
27-02-25 10:22:08,990 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:22:08,990 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
27-02-25 10:22:08,990 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:22:08,990 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
27-02-25 10:22:09,006 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
27-02-25 10:22:09,006 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 10:22:09,006 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
27-02-25 10:22:09,006 | INFO  | pooling              | HHH10001003: Autocommit mode: false
27-02-25 10:22:09,006 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
27-02-25 10:22:09,006 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
27-02-25 10:22:09,883 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
27-02-25 10:22:09,915 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
27-02-25 10:22:09,915 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
27-02-25 10:22:09,915 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
27-02-25 10:22:10,055 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
27-02-25 10:22:10,055 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
27-02-25 10:22:10,055 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
27-02-25 10:22:10,071 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
27-02-25 10:22:10,071 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
27-02-25 10:22:10,071 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
27-02-25 10:22:10,071 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 10:22:10,087 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
27-02-25 10:22:10,087 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
27-02-25 10:22:10,087 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
27-02-25 10:22:10,102 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c0036b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17814b1c)
27-02-25 10:22:10,102 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ac9af2a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7bb004b8)
27-02-25 10:22:10,102 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@78e89bfe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@652ce654)
27-02-25 10:22:10,102 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@522ba524) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29c5ee1d)
27-02-25 10:22:10,102 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15cea7b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17d2ed1b)
27-02-25 10:22:10,102 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@185f7840) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e6cc850)
27-02-25 10:22:10,102 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7e7f0f0a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ec58feb)
27-02-25 10:22:10,102 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dbb650b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@656d10a4)
27-02-25 10:22:10,102 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63ec445c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3104351d)
27-02-25 10:22:10,102 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
27-02-25 10:22:10,102 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
27-02-25 10:22:10,102 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
27-02-25 10:22:10,102 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 10:22:10,102 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 10:22:10,118 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@4390f46e
27-02-25 10:22:10,118 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4dd02341`
27-02-25 10:22:10,118 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
27-02-25 10:22:10,118 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
27-02-25 10:22:10,118 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
27-02-25 10:22:10,133 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 10:22:10,133 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 10:22:10,133 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 10:22:10,133 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 10:22:10,133 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 10:22:10,133 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 10:22:10,133 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
27-02-25 10:22:10,133 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 10:22:10,133 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 10:22:10,133 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fd1660] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4a6c18ad]
27-02-25 10:22:10,180 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
27-02-25 10:22:10,212 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
27-02-25 10:22:10,227 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:22:10,227 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
27-02-25 10:22:10,227 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
27-02-25 10:22:10,602 | DEBUG | SessionFactoryImpl   | Building session factory
27-02-25 10:22:10,602 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
27-02-25 10:22:10,618 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
27-02-25 10:22:10,732 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 10:22:10,733 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\target\classes;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\jakarta.persistence\2.2.3\jakarta.persistence-2.2.3.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2819c460, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
27-02-25 10:22:10,735 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 10:22:10,735 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
27-02-25 10:22:10,743 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
27-02-25 10:22:10,884 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
27-02-25 10:22:10,885 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
27-02-25 10:22:10,886 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
27-02-25 10:22:10,887 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
27-02-25 10:22:10,891 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6e4f263e] under count; prior registration was null
27-02-25 10:22:10,893 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1b956cfa] under every; prior registration was null
27-02-25 10:22:10,893 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@315f09ef] under any; prior registration was null
27-02-25 10:22:10,894 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
27-02-25 10:22:10,894 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
27-02-25 10:22:10,895 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
27-02-25 10:22:10,897 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
27-02-25 10:22:10,898 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
27-02-25 10:22:10,898 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
27-02-25 10:22:10,898 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
27-02-25 10:22:10,898 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
27-02-25 10:22:10,898 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
27-02-25 10:22:10,901 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
27-02-25 10:22:10,901 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
27-02-25 10:22:10,901 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
27-02-25 10:22:10,901 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
27-02-25 10:22:10,902 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
27-02-25 10:22:10,905 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
27-02-25 10:22:10,905 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
27-02-25 10:22:10,905 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
27-02-25 10:22:10,909 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1352434e] under sinh; prior registration was null
27-02-25 10:22:10,911 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f9a6c2d] under cosh; prior registration was null
27-02-25 10:22:10,911 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b6fcb9f] under tanh; prior registration was null
27-02-25 10:22:10,912 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75de6341] under pi; prior registration was null
27-02-25 10:22:10,912 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74170687] under log; prior registration was null
27-02-25 10:22:10,913 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
27-02-25 10:22:10,913 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
27-02-25 10:22:10,913 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
27-02-25 10:22:10,913 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
27-02-25 10:22:10,913 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
27-02-25 10:22:10,914 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
27-02-25 10:22:10,914 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
27-02-25 10:22:10,914 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
27-02-25 10:22:10,914 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
27-02-25 10:22:10,917 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
27-02-25 10:22:10,917 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
27-02-25 10:22:10,917 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
27-02-25 10:22:10,919 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6e041285] under position; prior registration was null
27-02-25 10:22:10,922 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7a583586] under overlay; prior registration was null
27-02-25 10:22:10,923 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2bc378f7] under trim; prior registration was null
27-02-25 10:22:10,925 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@788ddc1f] under cast; prior registration was null
27-02-25 10:22:10,926 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2dc3271b] under collate; prior registration was null
27-02-25 10:22:10,928 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1f346ad2] under extract; prior registration was null
27-02-25 10:22:10,929 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
27-02-25 10:22:10,929 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
27-02-25 10:22:10,930 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@363c4251] under ifnull; prior registration was null
27-02-25 10:22:10,930 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
27-02-25 10:22:10,930 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
27-02-25 10:22:10,931 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@524270b8] under pad; prior registration was null
27-02-25 10:22:10,932 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@29149030] under str; prior registration was null
27-02-25 10:22:10,934 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3b920bdc] under format; prior registration was null
27-02-25 10:22:10,935 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@34780cd9] under timestampadd; prior registration was null
27-02-25 10:22:10,937 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@53311681] under timestampdiff; prior registration was null
27-02-25 10:22:10,937 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
27-02-25 10:22:10,937 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
27-02-25 10:22:10,938 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e645fbd] under current_date; prior registration was null
27-02-25 10:22:10,938 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@574a89e2] under current_time; prior registration was null
27-02-25 10:22:10,938 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e1e9ef3] under current_timestamp; prior registration was null
27-02-25 10:22:10,938 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
27-02-25 10:22:10,939 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
27-02-25 10:22:10,939 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
27-02-25 10:22:10,939 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dd31157] under local_date; prior registration was null
27-02-25 10:22:10,939 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31c628e7] under local_time; prior registration was null
27-02-25 10:22:10,939 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3240b2a4] under local_datetime; prior registration was null
27-02-25 10:22:10,939 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58434b19] under offset_datetime; prior registration was null
27-02-25 10:22:10,947 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
27-02-25 10:22:10,947 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
27-02-25 10:22:10,947 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
27-02-25 10:22:10,948 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
27-02-25 10:22:10,949 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7d3fb0ef] under instant; prior registration was null
27-02-25 10:22:10,949 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
27-02-25 10:22:10,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@8bd86c8] under sql; prior registration was null
27-02-25 10:22:10,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
27-02-25 10:22:10,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
27-02-25 10:22:10,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
27-02-25 10:22:10,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
27-02-25 10:22:10,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74170687
27-02-25 10:22:10,950 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
27-02-25 10:22:10,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
27-02-25 10:22:10,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
27-02-25 10:22:10,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
27-02-25 10:22:10,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
27-02-25 10:22:10,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
27-02-25 10:22:10,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
27-02-25 10:22:10,951 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
27-02-25 10:22:10,952 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6e4c0d8c] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e3315d9] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
27-02-25 10:22:10,953 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
27-02-25 10:22:10,954 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
27-02-25 10:22:10,954 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
27-02-25 10:22:10,954 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
27-02-25 10:22:10,954 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
27-02-25 10:22:10,954 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
27-02-25 10:22:10,955 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
27-02-25 10:22:10,955 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
27-02-25 10:22:10,956 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
27-02-25 10:22:10,956 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
27-02-25 10:22:10,956 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
27-02-25 10:22:10,958 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
27-02-25 10:22:10,969 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
27-02-25 10:22:10,970 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
27-02-25 10:22:10,971 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
27-02-25 10:22:10,971 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64db4967] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6e041285
27-02-25 10:22:10,971 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
27-02-25 10:22:10,971 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
27-02-25 10:22:10,971 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
27-02-25 10:22:10,980 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2eeb0f9b] under trunc; prior registration was null
27-02-25 10:22:10,981 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
27-02-25 10:22:10,981 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
27-02-25 10:22:10,981 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b1c538d] under bitand; prior registration was null
27-02-25 10:22:10,981 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1645f294] under bitor; prior registration was null
27-02-25 10:22:10,981 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6325f352] under bitxor; prior registration was null
27-02-25 10:22:10,982 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15c4af7a] under bitnot; prior registration was null
27-02-25 10:22:10,982 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
27-02-25 10:22:10,982 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
27-02-25 10:22:10,982 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
27-02-25 10:22:10,982 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
27-02-25 10:22:10,982 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
27-02-25 10:22:10,982 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
27-02-25 10:22:10,983 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
27-02-25 10:22:10,983 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
27-02-25 10:22:10,983 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
27-02-25 10:22:10,984 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6cbd0674] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3b920bdc
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@31c628e7
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3240b2a4
27-02-25 10:22:10,985 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
27-02-25 10:22:10,986 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55d58825] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75de6341
27-02-25 10:22:10,986 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19a64eae] under chr; prior registration was null
27-02-25 10:22:10,986 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
27-02-25 10:22:10,986 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29a98d9f] under sysdate; prior registration was null
27-02-25 10:22:10,987 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@1a96d94c] under listagg; prior registration was null
27-02-25 10:22:10,992 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
27-02-25 10:22:10,992 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
27-02-25 10:22:10,992 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
27-02-25 10:22:10,995 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
27-02-25 10:22:10,996 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
27-02-25 10:22:10,996 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
27-02-25 10:22:10,996 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
27-02-25 10:22:10,996 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
27-02-25 10:22:10,996 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
27-02-25 10:22:10,996 | DEBUG | HQL_FUNCTIONS        | avg(arg)
27-02-25 10:22:10,997 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
27-02-25 10:22:10,997 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
27-02-25 10:22:10,997 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
27-02-25 10:22:10,998 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
27-02-25 10:22:10,999 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
27-02-25 10:22:10,999 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
27-02-25 10:22:10,999 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
27-02-25 10:22:10,999 | DEBUG | HQL_FUNCTIONS        | Date curdate()
27-02-25 10:22:10,999 | DEBUG | HQL_FUNCTIONS        | Date current date
27-02-25 10:22:10,999 | DEBUG | HQL_FUNCTIONS        | Time current time
27-02-25 10:22:10,999 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
27-02-25 10:22:10,999 | DEBUG | HQL_FUNCTIONS        | Date current_date
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | Time current_time
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | Time curtime()
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
27-02-25 10:22:11,000 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
27-02-25 10:22:11,001 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
27-02-25 10:22:11,001 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
27-02-25 10:22:11,001 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
27-02-25 10:22:11,001 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
27-02-25 10:22:11,001 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
27-02-25 10:22:11,001 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
27-02-25 10:22:11,001 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
27-02-25 10:22:11,001 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | Instant instant
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
27-02-25 10:22:11,002 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
27-02-25 10:22:11,003 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
27-02-25 10:22:11,004 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | Double pi
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
27-02-25 10:22:11,005 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | Object sql
27-02-25 10:22:11,006 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | String str(arg)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | sum(arg)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | String time(arg)
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
27-02-25 10:22:11,007 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | Date utc_date
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | Time utc_time
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
27-02-25 10:22:11,008 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
27-02-25 10:22:11,009 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
27-02-25 10:22:11,009 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
27-02-25 10:22:11,009 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
27-02-25 10:22:11,018 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
27-02-25 10:22:11,024 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
27-02-25 10:22:11,186 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 10:22:11,187 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
27-02-25 10:22:11,189 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
27-02-25 10:22:11,189 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
27-02-25 10:22:11,199 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
27-02-25 10:22:11,216 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
27-02-25 10:22:11,221 | TRACE | batch                | Using standard BatchBuilder (1)
27-02-25 10:22:11,297 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
27-02-25 10:22:11,299 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
27-02-25 10:22:11,304 | DEBUG | creation             | Starting post-init callbacks
27-02-25 10:22:11,330 | TRACE | MetadataContext      | Wrapping up metadata context...
27-02-25 10:22:11,341 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
27-02-25 10:22:11,342 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
27-02-25 10:22:11,342 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
27-02-25 10:22:11,343 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
27-02-25 10:22:11,351 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
27-02-25 10:22:11,351 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
27-02-25 10:22:11,353 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fd1660] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@439e3cb4]
27-02-25 10:22:11,359 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
27-02-25 10:22:11,359 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
27-02-25 10:22:11,364 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
27-02-25 10:22:11,365 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
27-02-25 10:22:11,369 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a0bef24
27-02-25 10:22:11,369 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: 59c53a75-972d-470e-a23b-02b1e2ba4eec (<unnamed>)
27-02-25 10:22:11,369 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
27-02-25 10:22:11,369 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@439e3cb4] for TypeConfiguration
27-02-25 10:22:11,369 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
27-02-25 10:22:11,370 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
27-02-25 10:22:11,475 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
27-02-25 10:22:11,483 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
27-02-25 10:22:11,496 | TRACE | SessionImpl          | Opened Session [699f4a27-0743-4445-bc38-dc3573d3bb31] at timestamp: 1740662531495
27-02-25 10:22:11,497 | TRACE | SessionImpl          | Closing session [699f4a27-0743-4445-bc38-dc3573d3bb31]
27-02-25 10:22:11,498 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@40f35e52]
27-02-25 10:22:11,498 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
27-02-25 10:22:11,499 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
27-02-25 10:22:11,499 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
27-02-25 10:22:11,499 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
27-02-25 10:22:11,499 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:22:11,500 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@439e3cb4] for TypeConfiguration
27-02-25 10:22:11,500 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@443faa85] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@439e3cb4]
27-02-25 10:22:11,500 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
27-02-25 10:22:11,500 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 10:22:11,516 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
27-02-25 10:52:45,428 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
27-02-25 10:52:45,440 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
27-02-25 10:52:45,441 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
27-02-25 10:52:45,495 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
27-02-25 10:52:45,730 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
27-02-25 10:52:45,730 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
27-02-25 10:52:45,745 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
27-02-25 10:52:45,745 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
27-02-25 10:52:45,745 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
27-02-25 10:52:45,745 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
27-02-25 10:52:45,777 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.bicicletario.model.Usuario
		com.bicicletario.model.Cliente
		com.bicicletario.model.Bicicleta]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
27-02-25 10:52:45,808 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
27-02-25 10:52:45,823 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
27-02-25 10:52:45,856 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 10:52:45,858 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 10:52:45,858 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 10:52:45,858 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 10:52:45,858 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 10:52:45,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
27-02-25 10:52:45,861 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
27-02-25 10:52:45,874 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
27-02-25 10:52:45,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
27-02-25 10:52:45,877 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
27-02-25 10:52:45,877 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
27-02-25 10:52:45,878 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
27-02-25 10:52:45,879 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
27-02-25 10:52:45,880 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 10:52:45,880 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 10:52:45,881 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
27-02-25 10:52:45,882 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
27-02-25 10:52:45,882 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
27-02-25 10:52:45,883 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
27-02-25 10:52:45,884 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
27-02-25 10:52:45,885 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
27-02-25 10:52:45,887 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
27-02-25 10:52:45,888 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
27-02-25 10:52:45,889 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
27-02-25 10:52:45,890 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
27-02-25 10:52:45,891 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
27-02-25 10:52:45,892 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
27-02-25 10:52:45,892 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
27-02-25 10:52:45,894 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
27-02-25 10:52:45,955 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
27-02-25 10:52:45,957 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
27-02-25 10:52:45,990 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
27-02-25 10:52:45,994 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
27-02-25 10:52:46,002 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
27-02-25 10:52:46,011 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
27-02-25 10:52:46,012 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
27-02-25 10:52:46,013 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 10:52:46,013 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 10:52:46,014 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
27-02-25 10:52:46,015 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
27-02-25 10:52:46,016 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
27-02-25 10:52:46,018 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 10:52:46,019 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
27-02-25 10:52:46,020 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
27-02-25 10:52:46,020 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 10:52:46,021 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
27-02-25 10:52:46,049 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:52:46,052 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
27-02-25 10:52:46,055 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
27-02-25 10:52:46,056 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
27-02-25 10:52:46,366 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3549bca9
27-02-25 10:52:46,366 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3549bca9
27-02-25 10:52:46,366 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3549bca9
27-02-25 10:52:46,367 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4f25b795
27-02-25 10:52:46,367 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4f25b795
27-02-25 10:52:46,367 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6fb365ed
27-02-25 10:52:46,367 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6fb365ed
27-02-25 10:52:46,367 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6e950bcf
27-02-25 10:52:46,367 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6e950bcf
27-02-25 10:52:46,368 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@16414e40
27-02-25 10:52:46,368 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@16414e40
27-02-25 10:52:46,368 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@16414e40
27-02-25 10:52:46,368 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@74bada02
27-02-25 10:52:46,368 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@74bada02
27-02-25 10:52:46,368 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@74bada02
27-02-25 10:52:46,369 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@525575
27-02-25 10:52:46,369 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@525575
27-02-25 10:52:46,369 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@46dffdc3
27-02-25 10:52:46,370 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a709816
27-02-25 10:52:46,370 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a709816
27-02-25 10:52:46,370 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@78383390
27-02-25 10:52:46,370 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6ad3381f
27-02-25 10:52:46,370 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@53dbe163
27-02-25 10:52:46,371 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@53dbe163
27-02-25 10:52:46,371 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@53dbe163
27-02-25 10:52:46,371 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@db57326
27-02-25 10:52:46,371 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@db57326
27-02-25 10:52:46,371 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@db57326
27-02-25 10:52:46,372 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@34a875b3
27-02-25 10:52:46,372 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@34a875b3
27-02-25 10:52:46,372 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@34a875b3
27-02-25 10:52:46,372 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@4748a0f9
27-02-25 10:52:46,373 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@4748a0f9
27-02-25 10:52:46,373 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4748a0f9
27-02-25 10:52:46,373 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 10:52:46,373 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 10:52:46,373 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 10:52:46,374 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d1ef78d
27-02-25 10:52:46,374 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d1ef78d
27-02-25 10:52:46,375 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 10:52:46,375 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 10:52:46,375 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 10:52:46,375 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 10:52:46,375 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 10:52:46,375 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77d67cf3
27-02-25 10:52:46,375 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 10:52:46,376 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 10:52:46,376 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@176b3f44
27-02-25 10:52:46,376 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 10:52:46,376 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 10:52:46,376 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 10:52:46,377 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@421bba99
27-02-25 10:52:46,377 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@5d12a356
27-02-25 10:52:46,377 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@134d26af
27-02-25 10:52:46,377 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 10:52:46,377 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 10:52:46,377 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 10:52:46,378 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 10:52:46,378 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@31bcf236
27-02-25 10:52:46,378 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b3ed2f0
27-02-25 10:52:46,378 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4fad9bb2
27-02-25 10:52:46,379 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@517d4a0d
27-02-25 10:52:46,379 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7862f56
27-02-25 10:52:46,381 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3a12c404
27-02-25 10:52:46,381 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1941a8ff
27-02-25 10:52:46,382 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1941a8ff
27-02-25 10:52:46,382 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 10:52:46,382 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 10:52:46,382 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@149dd36b
27-02-25 10:52:46,382 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@149dd36b
27-02-25 10:52:46,382 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 10:52:46,382 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 10:52:46,383 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c1156a7
27-02-25 10:52:46,383 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c1156a7
27-02-25 10:52:46,383 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 10:52:46,383 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4982cc36
27-02-25 10:52:46,383 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 10:52:46,383 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 10:52:46,383 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4f1bfe23
27-02-25 10:52:46,384 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e19bb76
27-02-25 10:52:46,384 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@512535ff
27-02-25 10:52:46,384 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 10:52:46,384 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 10:52:46,385 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61a88b8c
27-02-25 10:52:46,385 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22295ec4
27-02-25 10:52:46,385 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 10:52:46,385 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 10:52:46,385 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 10:52:46,385 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 10:52:46,385 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 10:52:46,386 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 10:52:46,386 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 10:52:46,386 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 10:52:46,386 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 10:52:46,386 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 10:52:46,386 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 10:52:46,386 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 10:52:46,386 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 10:52:46,387 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 10:52:46,387 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 10:52:46,387 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 10:52:46,387 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 10:52:46,387 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 10:52:46,387 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 10:52:46,387 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 10:52:46,387 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 10:52:46,388 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 10:52:46,388 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 10:52:46,388 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 10:52:46,388 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 10:52:46,388 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 10:52:46,388 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 10:52:46,388 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 10:52:46,388 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 10:52:46,388 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 10:52:46,389 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 10:52:46,389 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 10:52:46,389 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 10:52:46,389 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 10:52:46,389 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 10:52:46,389 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 10:52:46,398 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@736caf7a
27-02-25 10:52:46,398 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@736caf7a
27-02-25 10:52:46,401 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@4dd02341
27-02-25 10:52:46,402 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3212a8d7
27-02-25 10:52:46,402 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a1a3478
27-02-25 10:52:46,402 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@495b0487
27-02-25 10:52:46,402 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@55dfcc6
27-02-25 10:52:46,402 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@222eb8aa
27-02-25 10:52:46,403 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@93cf163
27-02-25 10:52:46,403 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1852a3ff
27-02-25 10:52:46,403 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7203c7ff
27-02-25 10:52:46,406 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
27-02-25 10:52:46,408 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
27-02-25 10:52:46,414 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3ed242a4] into BootstrapContext; was [null]
27-02-25 10:52:46,414 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1199fe66] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@614df0a4]
27-02-25 10:52:46,640 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Usuario] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 10:52:46,643 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Cliente] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 10:52:46,645 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Bicicleta] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 10:52:46,647 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
27-02-25 10:52:46,647 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
27-02-25 10:52:46,665 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
27-02-25 10:52:46,666 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
27-02-25 10:52:46,668 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
27-02-25 10:52:46,677 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:52:46,677 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
27-02-25 10:52:46,677 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:52:46,694 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
27-02-25 10:52:46,706 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
27-02-25 10:52:46,706 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 10:52:46,707 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
27-02-25 10:52:46,707 | INFO  | pooling              | HHH10001003: Autocommit mode: false
27-02-25 10:52:46,712 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
27-02-25 10:52:46,712 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
27-02-25 10:52:47,716 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
27-02-25 10:52:47,753 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
27-02-25 10:52:47,754 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
27-02-25 10:52:47,754 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
27-02-25 10:52:47,899 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
27-02-25 10:52:47,905 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
27-02-25 10:52:47,905 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
27-02-25 10:52:47,917 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
27-02-25 10:52:47,917 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
27-02-25 10:52:47,933 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
27-02-25 10:52:47,933 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 10:52:47,933 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
27-02-25 10:52:47,933 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
27-02-25 10:52:47,933 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
27-02-25 10:52:47,964 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46d8f407) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c0036b)
27-02-25 10:52:47,964 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17814b1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ac9af2a)
27-02-25 10:52:47,964 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7bb004b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@78e89bfe)
27-02-25 10:52:47,964 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@652ce654) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@522ba524)
27-02-25 10:52:47,964 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29c5ee1d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15cea7b0)
27-02-25 10:52:47,964 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17d2ed1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@185f7840)
27-02-25 10:52:47,964 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e6cc850) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e7f0f0a)
27-02-25 10:52:47,964 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ec58feb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dbb650b)
27-02-25 10:52:47,964 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@656d10a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63ec445c)
27-02-25 10:52:47,964 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
27-02-25 10:52:47,964 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
27-02-25 10:52:47,979 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
27-02-25 10:52:47,979 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 10:52:47,979 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 10:52:47,979 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@121c54fa
27-02-25 10:52:47,979 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4dd02341`
27-02-25 10:52:47,995 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
27-02-25 10:52:47,995 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
27-02-25 10:52:47,995 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
27-02-25 10:52:47,995 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 10:52:47,995 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 10:52:47,995 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 10:52:47,995 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 10:52:48,011 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 10:52:48,011 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 10:52:48,011 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
27-02-25 10:52:48,011 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 10:52:48,011 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 10:52:48,011 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6892cc6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6fd1660]
27-02-25 10:52:48,058 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
27-02-25 10:52:48,089 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
27-02-25 10:52:48,104 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:52:48,104 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
27-02-25 10:52:48,120 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
27-02-25 10:52:48,511 | DEBUG | SessionFactoryImpl   | Building session factory
27-02-25 10:52:48,511 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
27-02-25 10:52:48,526 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
27-02-25 10:52:48,636 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 10:52:48,636 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\target\classes;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\jakarta.persistence\2.2.3\jakarta.persistence-2.2.3.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2a3194c6, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
27-02-25 10:52:48,651 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 10:52:48,651 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
27-02-25 10:52:48,651 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@f1d0004] under count; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4996c99] under every; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1b956cfa] under any; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
27-02-25 10:52:48,808 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c3c4a71] under sinh; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1352434e] under cosh; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f9a6c2d] under tanh; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b6fcb9f] under pi; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75de6341] under log; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
27-02-25 10:52:48,823 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@52f57666] under position; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3a37a501] under overlay; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@100c8b75] under trim; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3ba46e63] under cast; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@788ddc1f] under collate; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2bfb6b49] under extract; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@ae2db25] under ifnull; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
27-02-25 10:52:48,839 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@63884e4] under pad; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6812fa3a] under str; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@67514bdd] under format; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1f9f381d] under timestampadd; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@66b59b7d] under timestampdiff; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@753aca85] under current_date; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e645fbd] under current_time; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@574a89e2] under current_timestamp; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e1e9ef3] under local_date; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dd31157] under local_time; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31c628e7] under local_datetime; prior registration was null
27-02-25 10:52:48,854 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3240b2a4] under offset_datetime; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58434b19] under instant; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@885e7ff] under sql; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75de6341
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a2341c6] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6e4c0d8c] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
27-02-25 10:52:48,870 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
27-02-25 10:52:48,886 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
27-02-25 10:52:48,886 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e3315d9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@52f57666
27-02-25 10:52:48,886 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
27-02-25 10:52:48,886 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
27-02-25 10:52:48,886 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
27-02-25 10:52:48,902 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5f254608] under trunc; prior registration was null
27-02-25 10:52:48,902 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
27-02-25 10:52:48,902 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
27-02-25 10:52:48,902 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eeb0f9b] under bitand; prior registration was null
27-02-25 10:52:48,902 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b1c538d] under bitor; prior registration was null
27-02-25 10:52:48,903 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1645f294] under bitxor; prior registration was null
27-02-25 10:52:48,903 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6325f352] under bitnot; prior registration was null
27-02-25 10:52:48,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
27-02-25 10:52:48,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
27-02-25 10:52:48,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
27-02-25 10:52:48,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
27-02-25 10:52:48,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
27-02-25 10:52:48,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
27-02-25 10:52:48,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
27-02-25 10:52:48,904 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
27-02-25 10:52:48,906 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
27-02-25 10:52:48,906 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
27-02-25 10:52:48,906 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
27-02-25 10:52:48,906 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
27-02-25 10:52:48,906 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
27-02-25 10:52:48,906 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@15c4af7a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@67514bdd
27-02-25 10:52:48,907 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
27-02-25 10:52:48,907 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
27-02-25 10:52:48,907 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
27-02-25 10:52:48,907 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
27-02-25 10:52:48,907 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3dd31157
27-02-25 10:52:48,907 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@31c628e7
27-02-25 10:52:48,907 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
27-02-25 10:52:48,907 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cbd0674] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b6fcb9f
27-02-25 10:52:48,908 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55d58825] under chr; prior registration was null
27-02-25 10:52:48,908 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
27-02-25 10:52:48,908 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19a64eae] under sysdate; prior registration was null
27-02-25 10:52:48,909 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7fb66650] under listagg; prior registration was null
27-02-25 10:52:48,914 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
27-02-25 10:52:48,915 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
27-02-25 10:52:48,915 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
27-02-25 10:52:48,915 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
27-02-25 10:52:48,916 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
27-02-25 10:52:48,916 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
27-02-25 10:52:48,916 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
27-02-25 10:52:48,917 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
27-02-25 10:52:48,917 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
27-02-25 10:52:48,917 | DEBUG | HQL_FUNCTIONS        | avg(arg)
27-02-25 10:52:48,918 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
27-02-25 10:52:48,918 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
27-02-25 10:52:48,918 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
27-02-25 10:52:48,918 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
27-02-25 10:52:48,918 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
27-02-25 10:52:48,919 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Date curdate()
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Date current date
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Time current time
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
27-02-25 10:52:48,920 | DEBUG | HQL_FUNCTIONS        | Date current_date
27-02-25 10:52:48,921 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | Time current_time
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | Time curtime()
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
27-02-25 10:52:48,922 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
27-02-25 10:52:48,923 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
27-02-25 10:52:48,924 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
27-02-25 10:52:48,924 | DEBUG | HQL_FUNCTIONS        | Instant instant
27-02-25 10:52:48,924 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
27-02-25 10:52:48,924 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
27-02-25 10:52:48,924 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 10:52:48,924 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
27-02-25 10:52:48,924 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
27-02-25 10:52:48,924 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
27-02-25 10:52:48,924 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
27-02-25 10:52:48,925 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
27-02-25 10:52:48,926 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
27-02-25 10:52:48,927 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
27-02-25 10:52:48,939 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
27-02-25 10:52:48,944 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
27-02-25 10:52:48,944 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
27-02-25 10:52:48,946 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
27-02-25 10:52:48,946 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
27-02-25 10:52:48,946 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
27-02-25 10:52:48,946 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
27-02-25 10:52:48,946 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
27-02-25 10:52:48,946 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
27-02-25 10:52:48,947 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
27-02-25 10:52:48,947 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
27-02-25 10:52:48,947 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
27-02-25 10:52:48,948 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
27-02-25 10:52:48,948 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
27-02-25 10:52:48,948 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
27-02-25 10:52:48,948 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
27-02-25 10:52:48,948 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
27-02-25 10:52:48,948 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | Double pi
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
27-02-25 10:52:48,949 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
27-02-25 10:52:48,950 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
27-02-25 10:52:48,951 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
27-02-25 10:52:48,951 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
27-02-25 10:52:48,951 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
27-02-25 10:52:48,951 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
27-02-25 10:52:48,951 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
27-02-25 10:52:48,953 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | Object sql
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
27-02-25 10:52:48,954 | DEBUG | HQL_FUNCTIONS        | String str(arg)
27-02-25 10:52:48,955 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
27-02-25 10:52:48,955 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
27-02-25 10:52:48,955 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
27-02-25 10:52:48,955 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
27-02-25 10:52:48,955 | DEBUG | HQL_FUNCTIONS        | sum(arg)
27-02-25 10:52:48,955 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
27-02-25 10:52:48,955 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
27-02-25 10:52:48,955 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
27-02-25 10:52:48,956 | DEBUG | HQL_FUNCTIONS        | String time(arg)
27-02-25 10:52:48,956 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
27-02-25 10:52:48,956 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 10:52:48,956 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
27-02-25 10:52:48,956 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | Date utc_date
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | Time utc_time
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
27-02-25 10:52:48,957 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
27-02-25 10:52:48,981 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
27-02-25 10:52:48,990 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
27-02-25 10:52:49,185 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 10:52:49,185 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
27-02-25 10:52:49,188 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
27-02-25 10:52:49,188 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
27-02-25 10:52:49,191 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
27-02-25 10:52:49,208 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
27-02-25 10:52:49,213 | TRACE | batch                | Using standard BatchBuilder (1)
27-02-25 10:52:49,221 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
27-02-25 10:52:49,224 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
27-02-25 10:52:49,230 | DEBUG | creation             | Starting post-init callbacks
27-02-25 10:52:49,298 | TRACE | MetadataContext      | Wrapping up metadata context...
27-02-25 10:52:49,309 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
27-02-25 10:52:49,310 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
27-02-25 10:52:49,310 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
27-02-25 10:52:49,311 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
27-02-25 10:52:49,325 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
27-02-25 10:52:49,325 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
27-02-25 10:52:49,327 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6892cc6f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7b32b129]
27-02-25 10:52:49,338 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
27-02-25 10:52:49,339 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
27-02-25 10:52:49,345 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
27-02-25 10:52:49,345 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
27-02-25 10:52:49,351 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@334ebcaa
27-02-25 10:52:49,351 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: a3c786aa-362c-4fb9-a734-9528982f5278 (<unnamed>)
27-02-25 10:52:49,352 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
27-02-25 10:52:49,352 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7b32b129] for TypeConfiguration
27-02-25 10:52:49,352 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
27-02-25 10:52:49,353 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
27-02-25 10:52:49,527 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
27-02-25 10:52:49,538 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
27-02-25 10:52:49,557 | TRACE | SessionImpl          | Opened Session [4ca8aa58-a251-4d09-8b27-b0fd1f872dbf] at timestamp: 1740664369557
27-02-25 10:52:49,559 | TRACE | SessionImpl          | Closing session [4ca8aa58-a251-4d09-8b27-b0fd1f872dbf]
27-02-25 10:52:49,560 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@480b57e2]
27-02-25 10:52:49,560 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
27-02-25 10:52:49,561 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
27-02-25 10:52:49,561 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
27-02-25 10:52:49,561 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
27-02-25 10:52:49,561 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 10:52:49,562 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7b32b129] for TypeConfiguration
27-02-25 10:52:49,562 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@561953e3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7b32b129]
27-02-25 10:52:49,563 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
27-02-25 10:52:49,563 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 10:52:49,569 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
27-02-25 11:19:17,092 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
27-02-25 11:19:17,104 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
27-02-25 11:19:17,104 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
27-02-25 11:19:17,176 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
27-02-25 11:19:17,412 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
27-02-25 11:19:17,418 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
27-02-25 11:19:17,423 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
27-02-25 11:19:17,423 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
27-02-25 11:19:17,426 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
27-02-25 11:19:17,427 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
27-02-25 11:19:17,458 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.bicicletario.model.Usuario
		com.bicicletario.model.Cliente
		com.bicicletario.model.Bicicleta]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
27-02-25 11:19:17,471 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
27-02-25 11:19:17,480 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
27-02-25 11:19:17,509 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 11:19:17,511 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 11:19:17,511 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 11:19:17,511 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 11:19:17,511 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 11:19:17,513 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
27-02-25 11:19:17,514 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
27-02-25 11:19:17,516 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
27-02-25 11:19:17,529 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
27-02-25 11:19:17,531 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
27-02-25 11:19:17,532 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
27-02-25 11:19:17,533 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
27-02-25 11:19:17,534 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
27-02-25 11:19:17,536 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 11:19:17,536 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 11:19:17,536 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
27-02-25 11:19:17,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
27-02-25 11:19:17,538 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
27-02-25 11:19:17,539 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
27-02-25 11:19:17,540 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
27-02-25 11:19:17,540 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
27-02-25 11:19:17,542 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
27-02-25 11:19:17,543 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
27-02-25 11:19:17,544 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
27-02-25 11:19:17,544 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
27-02-25 11:19:17,546 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
27-02-25 11:19:17,547 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
27-02-25 11:19:17,547 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
27-02-25 11:19:17,549 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
27-02-25 11:19:17,613 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
27-02-25 11:19:17,616 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
27-02-25 11:19:17,652 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
27-02-25 11:19:17,656 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
27-02-25 11:19:17,662 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
27-02-25 11:19:17,673 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
27-02-25 11:19:17,674 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
27-02-25 11:19:17,676 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 11:19:17,676 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 11:19:17,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
27-02-25 11:19:17,679 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
27-02-25 11:19:17,679 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
27-02-25 11:19:17,681 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 11:19:17,682 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
27-02-25 11:19:17,683 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
27-02-25 11:19:17,683 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 11:19:17,685 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
27-02-25 11:19:17,713 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 11:19:17,715 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
27-02-25 11:19:17,717 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
27-02-25 11:19:17,719 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3549bca9
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3549bca9
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3549bca9
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4f25b795
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4f25b795
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6fb365ed
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6fb365ed
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6e950bcf
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6e950bcf
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@16414e40
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@16414e40
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@16414e40
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@74bada02
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@74bada02
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@74bada02
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@525575
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@525575
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@46dffdc3
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a709816
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a709816
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@78383390
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6ad3381f
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@53dbe163
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@53dbe163
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@53dbe163
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@db57326
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@db57326
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@db57326
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@34a875b3
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@34a875b3
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@34a875b3
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@4748a0f9
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@4748a0f9
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4748a0f9
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d1ef78d
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d1ef78d
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 11:19:18,018 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77d67cf3
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@176b3f44
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@421bba99
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@5d12a356
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@134d26af
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@31bcf236
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b3ed2f0
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4fad9bb2
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@517d4a0d
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7862f56
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3a12c404
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1941a8ff
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1941a8ff
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@149dd36b
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@149dd36b
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c1156a7
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c1156a7
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4982cc36
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4f1bfe23
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e19bb76
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@512535ff
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61a88b8c
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22295ec4
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 11:19:18,034 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@736caf7a
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@736caf7a
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@4dd02341
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3212a8d7
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a1a3478
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@495b0487
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@55dfcc6
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@222eb8aa
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@93cf163
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1852a3ff
27-02-25 11:19:18,049 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7203c7ff
27-02-25 11:19:18,065 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
27-02-25 11:19:18,065 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
27-02-25 11:19:18,065 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3ed242a4] into BootstrapContext; was [null]
27-02-25 11:19:18,065 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1199fe66] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@614df0a4]
27-02-25 11:19:18,284 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Usuario] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 11:19:18,284 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Cliente] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 11:19:18,299 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Bicicleta] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 11:19:18,299 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
27-02-25 11:19:18,299 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
27-02-25 11:19:18,322 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
27-02-25 11:19:18,323 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
27-02-25 11:19:18,326 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
27-02-25 11:19:18,335 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 11:19:18,335 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
27-02-25 11:19:18,336 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 11:19:18,348 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
27-02-25 11:19:18,361 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
27-02-25 11:19:18,361 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 11:19:18,361 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
27-02-25 11:19:18,361 | INFO  | pooling              | HHH10001003: Autocommit mode: false
27-02-25 11:19:18,367 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
27-02-25 11:19:18,367 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
27-02-25 11:19:19,402 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
27-02-25 11:19:19,441 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
27-02-25 11:19:19,442 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
27-02-25 11:19:19,442 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
27-02-25 11:19:19,587 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
27-02-25 11:19:19,593 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
27-02-25 11:19:19,594 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
27-02-25 11:19:19,617 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
27-02-25 11:19:19,618 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
27-02-25 11:19:19,631 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
27-02-25 11:19:19,631 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 11:19:19,643 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
27-02-25 11:19:19,644 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
27-02-25 11:19:19,645 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
27-02-25 11:19:19,670 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17814b1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ac9af2a)
27-02-25 11:19:19,671 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7bb004b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@78e89bfe)
27-02-25 11:19:19,672 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@652ce654) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@522ba524)
27-02-25 11:19:19,672 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29c5ee1d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15cea7b0)
27-02-25 11:19:19,672 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17d2ed1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@185f7840)
27-02-25 11:19:19,672 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e6cc850) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e7f0f0a)
27-02-25 11:19:19,675 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ec58feb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dbb650b)
27-02-25 11:19:19,675 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@656d10a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63ec445c)
27-02-25 11:19:19,675 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3104351d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77d18d0b)
27-02-25 11:19:19,679 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
27-02-25 11:19:19,680 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
27-02-25 11:19:19,681 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
27-02-25 11:19:19,687 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 11:19:19,687 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 11:19:19,695 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@7c6442c2
27-02-25 11:19:19,695 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4dd02341`
27-02-25 11:19:19,704 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
27-02-25 11:19:19,704 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
27-02-25 11:19:19,705 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
27-02-25 11:19:19,711 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 11:19:19,714 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 11:19:19,714 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 11:19:19,714 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 11:19:19,714 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 11:19:19,714 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 11:19:19,717 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
27-02-25 11:19:19,717 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 11:19:19,717 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 11:19:19,720 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a6c18ad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e8604bf]
27-02-25 11:19:19,779 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
27-02-25 11:19:19,807 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
27-02-25 11:19:19,826 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 11:19:19,827 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
27-02-25 11:19:19,833 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
27-02-25 11:19:20,251 | DEBUG | SessionFactoryImpl   | Building session factory
27-02-25 11:19:20,251 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
27-02-25 11:19:20,267 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
27-02-25 11:19:20,392 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 11:19:20,392 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\target\classes;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\jakarta.persistence\2.2.3\jakarta.persistence-2.2.3.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@30364216, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
27-02-25 11:19:20,392 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 11:19:20,392 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
27-02-25 11:19:20,407 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
27-02-25 11:19:20,579 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
27-02-25 11:19:20,579 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
27-02-25 11:19:20,579 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
27-02-25 11:19:20,579 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
27-02-25 11:19:20,579 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@48b4a043] under count; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@315f09ef] under every; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3a66e67e] under any; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
27-02-25 11:19:20,595 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f9a6c2d] under sinh; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b6fcb9f] under cosh; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75de6341] under tanh; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74170687] under pi; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68f0f72c] under log; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@267dc982] under position; prior registration was null
27-02-25 11:19:20,610 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3a26ec8d] under overlay; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@268cbb86] under trim; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2dc3271b] under cast; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@254f906e] under collate; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@46a145ba] under extract; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7afc4db9] under ifnull; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4acb7ecc] under pad; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@38b8b6c0] under str; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7f5538a1] under format; prior registration was null
27-02-25 11:19:20,626 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@623ebac7] under timestampadd; prior registration was null
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4437ac07] under timestampdiff; prior registration was null
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@574a89e2] under current_date; prior registration was null
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e1e9ef3] under current_time; prior registration was null
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dd31157] under current_timestamp; prior registration was null
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31c628e7] under local_date; prior registration was null
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3240b2a4] under local_time; prior registration was null
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58434b19] under local_datetime; prior registration was null
27-02-25 11:19:20,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7d3fb0ef] under offset_datetime; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dbe2ebf] under instant; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4fa9ab6] under sql; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68f0f72c
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e3315d9] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@64db4967] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
27-02-25 11:19:20,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
27-02-25 11:19:20,673 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74e6094b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@267dc982
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1b1c538d] under trunc; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1645f294] under bitand; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6325f352] under bitor; prior registration was null
27-02-25 11:19:20,688 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15c4af7a] under bitxor; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cbd0674] under bitnot; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@55d58825] under format; prior registration was org.hibernate.dialect.function.FormatFunction@7f5538a1
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3240b2a4
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@58434b19
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19a64eae] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74170687
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29a98d9f] under chr; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2da3b078] under sysdate; prior registration was null
27-02-25 11:19:20,704 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@2a869a16] under listagg; prior registration was null
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | avg(arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Date curdate()
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Date current date
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Time current time
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Date current_date
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Time current_time
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Time curtime()
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Instant instant
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
27-02-25 11:19:20,720 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double pi
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Object sql
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | String str(arg)
27-02-25 11:19:20,735 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | sum(arg)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | String time(arg)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Date utc_date
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Time utc_time
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
27-02-25 11:19:20,751 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
27-02-25 11:19:20,751 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
27-02-25 11:19:20,767 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
27-02-25 11:19:20,938 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 11:19:20,938 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
27-02-25 11:19:20,938 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
27-02-25 11:19:20,954 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
27-02-25 11:19:20,954 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
27-02-25 11:19:20,970 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
27-02-25 11:19:20,970 | TRACE | batch                | Using standard BatchBuilder (1)
27-02-25 11:19:20,985 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
27-02-25 11:19:21,095 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
27-02-25 11:19:21,095 | DEBUG | creation             | Starting post-init callbacks
27-02-25 11:19:21,126 | TRACE | MetadataContext      | Wrapping up metadata context...
27-02-25 11:19:21,142 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
27-02-25 11:19:21,142 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
27-02-25 11:19:21,142 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
27-02-25 11:19:21,142 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
27-02-25 11:19:21,157 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
27-02-25 11:19:21,157 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
27-02-25 11:19:21,157 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a6c18ad] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1c9fbb61]
27-02-25 11:19:21,173 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
27-02-25 11:19:21,173 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
27-02-25 11:19:21,204 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
27-02-25 11:19:21,204 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
27-02-25 11:19:21,204 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6468a7b6
27-02-25 11:19:21,204 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: 583698ed-ffbb-437e-b833-8c68927502dc (<unnamed>)
27-02-25 11:19:21,204 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
27-02-25 11:19:21,204 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1c9fbb61] for TypeConfiguration
27-02-25 11:19:21,204 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
27-02-25 11:19:21,204 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
27-02-25 11:19:21,349 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
27-02-25 11:19:21,359 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
27-02-25 11:19:21,374 | TRACE | SessionImpl          | Opened Session [1c6310c5-7a66-4520-b73f-d1b0a37073cb] at timestamp: 1740665961373
27-02-25 11:19:21,377 | TRACE | SessionImpl          | Closing session [1c6310c5-7a66-4520-b73f-d1b0a37073cb]
27-02-25 11:19:21,378 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@340d6d89]
27-02-25 11:19:21,378 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
27-02-25 11:19:21,379 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
27-02-25 11:19:21,379 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
27-02-25 11:19:21,379 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
27-02-25 11:19:21,379 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 11:19:21,380 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1c9fbb61] for TypeConfiguration
27-02-25 11:19:21,380 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1ee47d9e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1c9fbb61]
27-02-25 11:19:21,381 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
27-02-25 11:19:21,381 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 11:19:21,387 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
27-02-25 12:53:08,526 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
27-02-25 12:53:08,532 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
27-02-25 12:53:08,532 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
27-02-25 12:53:08,584 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml
27-02-25 12:53:08,782 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
27-02-25 12:53:08,782 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
27-02-25 12:53:08,782 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
27-02-25 12:53:08,782 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
27-02-25 12:53:08,797 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
27-02-25 12:53:08,797 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
27-02-25 12:53:08,813 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.bicicletario.model.Usuario
		com.bicicletario.model.Cliente
		com.bicicletario.model.Bicicleta]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
27-02-25 12:53:08,813 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
27-02-25 12:53:08,828 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
27-02-25 12:53:08,860 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
27-02-25 12:53:08,875 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
27-02-25 12:53:08,953 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
27-02-25 12:53:08,953 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
27-02-25 12:53:08,985 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
27-02-25 12:53:08,985 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
27-02-25 12:53:08,985 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
27-02-25 12:53:09,000 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 12:53:09,016 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
27-02-25 12:53:09,032 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 12:53:09,032 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
27-02-25 12:53:09,032 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
27-02-25 12:53:09,032 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4b14918a
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6d1ef78d
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6d1ef78d
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@77d67cf3
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@77d67cf3
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@77d67cf3
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@176b3f44
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@176b3f44
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@421bba99
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@421bba99
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5d12a356
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@134d26af
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@31bcf236
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@31bcf236
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@31bcf236
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@4b3ed2f0
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@4b3ed2f0
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4b3ed2f0
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4fad9bb2
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@4fad9bb2
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4fad9bb2
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@517d4a0d
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@517d4a0d
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7862f56
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7862f56
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@3a12c404
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@3a12c404
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3a12c404
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1941a8ff
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@149dd36b
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2c1156a7
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4982cc36
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4f1bfe23
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4f1bfe23
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@e19bb76
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@512535ff
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@61a88b8c
27-02-25 12:53:09,338 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@22295ec4
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2e2ff723
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@324a0017
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@6187d1f5
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6187d1f5
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2445445a
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2445445a
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2445445a
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7502291e
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@17aad511
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@487db668
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@487db668
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@46944ca9
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@46944ca9
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@46944ca9
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@22bac7bc
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@22bac7bc
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@63798ca7
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@63798ca7
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4612b856
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4612b856
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@22875539
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@22875539
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@5674e1f2
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5674e1f2
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@79c7532f
27-02-25 12:53:09,353 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2a448449
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@55dfcc6
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@55dfcc6
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@7cf6a5f9
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@623e088f
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@39fcbef6
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@66565121
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2fc6f97f
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3d2ee678
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6179e425
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35f26e72
27-02-25 12:53:09,369 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2d6764b2
27-02-25 12:53:09,369 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
27-02-25 12:53:09,385 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
27-02-25 12:53:09,385 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@906d29b] into BootstrapContext; was [null]
27-02-25 12:53:09,385 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@49d3c823] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@436bc36]
27-02-25 12:53:09,603 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Usuario] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 12:53:09,605 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Cliente] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 12:53:09,607 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Bicicleta] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/target/classes/]
27-02-25 12:53:09,608 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
27-02-25 12:53:09,609 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
27-02-25 12:53:09,626 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
27-02-25 12:53:09,626 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
27-02-25 12:53:09,628 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
27-02-25 12:53:09,635 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 12:53:09,636 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
27-02-25 12:53:09,636 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 12:53:09,645 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
27-02-25 12:53:09,656 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
27-02-25 12:53:09,657 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 12:53:09,657 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
27-02-25 12:53:09,657 | INFO  | pooling              | HHH10001003: Autocommit mode: false
27-02-25 12:53:09,663 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
27-02-25 12:53:09,663 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
27-02-25 12:53:10,613 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
27-02-25 12:53:10,646 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
27-02-25 12:53:10,646 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
27-02-25 12:53:10,647 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
27-02-25 12:53:10,766 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
27-02-25 12:53:10,770 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
27-02-25 12:53:10,771 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
27-02-25 12:53:10,784 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
27-02-25 12:53:10,784 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
27-02-25 12:53:10,793 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
27-02-25 12:53:10,794 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 12:53:10,803 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
27-02-25 12:53:10,803 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
27-02-25 12:53:10,805 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
27-02-25 12:53:10,807 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3104351d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77d18d0b)
27-02-25 12:53:10,807 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a344b65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b7b3edb)
27-02-25 12:53:10,807 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b474074) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@108531c2)
27-02-25 12:53:10,807 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48b22fd4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a9d5dff)
27-02-25 12:53:10,807 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b08f438) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bac9ba)
27-02-25 12:53:10,807 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b2f8ab6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5bdd5689)
27-02-25 12:53:10,807 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2788d0fe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73ab3aac)
27-02-25 12:53:10,807 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f66455) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ae095c)
27-02-25 12:53:10,807 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c03a37) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e140e59)
27-02-25 12:53:10,823 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
27-02-25 12:53:10,823 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
27-02-25 12:53:10,823 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
27-02-25 12:53:10,823 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 12:53:10,823 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 12:53:10,823 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@12f8b1d8
27-02-25 12:53:10,823 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7cf6a5f9`
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 12:53:10,838 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 12:53:10,854 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ed38226] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3d43fe]
27-02-25 12:53:10,904 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
27-02-25 12:53:10,930 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
27-02-25 12:53:10,947 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 12:53:10,949 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
27-02-25 12:53:10,953 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
27-02-25 12:53:11,381 | DEBUG | SessionFactoryImpl   | Building session factory
27-02-25 12:53:11,381 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
27-02-25 12:53:11,394 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
27-02-25 12:53:11,511 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 12:53:11,513 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\target\classes;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.15.Final\hibernate-entitymanager-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Player14109423498\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Player14109423498\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Player14109423498\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\jakarta.persistence\2.2.3\jakarta.persistence-2.2.3.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5b3a7ef5, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
27-02-25 12:53:11,515 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 12:53:11,516 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
27-02-25 12:53:11,524 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
27-02-25 12:53:11,628 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
27-02-25 12:53:11,629 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
27-02-25 12:53:11,630 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
27-02-25 12:53:11,631 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
27-02-25 12:53:11,635 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@51d387d3] under count; prior registration was null
27-02-25 12:53:11,637 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@12eedfee] under every; prior registration was null
27-02-25 12:53:11,637 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3c3c4a71] under any; prior registration was null
27-02-25 12:53:11,638 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
27-02-25 12:53:11,638 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
27-02-25 12:53:11,639 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
27-02-25 12:53:11,641 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
27-02-25 12:53:11,641 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
27-02-25 12:53:11,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
27-02-25 12:53:11,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
27-02-25 12:53:11,642 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
27-02-25 12:53:11,644 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
27-02-25 12:53:11,645 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
27-02-25 12:53:11,645 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
27-02-25 12:53:11,646 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
27-02-25 12:53:11,646 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
27-02-25 12:53:11,647 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
27-02-25 12:53:11,647 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
27-02-25 12:53:11,647 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
27-02-25 12:53:11,647 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
27-02-25 12:53:11,652 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@267dc982] under sinh; prior registration was null
27-02-25 12:53:11,654 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@439b15f2] under cosh; prior registration was null
27-02-25 12:53:11,654 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3aa41da1] under tanh; prior registration was null
27-02-25 12:53:11,654 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74fab04a] under pi; prior registration was null
27-02-25 12:53:11,654 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c83468e] under log; prior registration was null
27-02-25 12:53:11,655 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
27-02-25 12:53:11,655 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
27-02-25 12:53:11,656 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
27-02-25 12:53:11,656 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
27-02-25 12:53:11,656 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
27-02-25 12:53:11,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
27-02-25 12:53:11,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
27-02-25 12:53:11,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
27-02-25 12:53:11,657 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
27-02-25 12:53:11,659 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
27-02-25 12:53:11,660 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
27-02-25 12:53:11,660 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
27-02-25 12:53:11,661 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@268cbb86] under position; prior registration was null
27-02-25 12:53:11,665 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2bfb6b49] under overlay; prior registration was null
27-02-25 12:53:11,666 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@ae2db25] under trim; prior registration was null
27-02-25 12:53:11,668 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2a4f5433] under cast; prior registration was null
27-02-25 12:53:11,668 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6812fa3a] under collate; prior registration was null
27-02-25 12:53:11,670 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@173a6728] under extract; prior registration was null
27-02-25 12:53:11,670 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
27-02-25 12:53:11,670 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
27-02-25 12:53:11,671 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7f5538a1] under ifnull; prior registration was null
27-02-25 12:53:11,672 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
27-02-25 12:53:11,672 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
27-02-25 12:53:11,674 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@623ebac7] under pad; prior registration was null
27-02-25 12:53:11,675 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@79a04e5f] under str; prior registration was null
27-02-25 12:53:11,677 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2e645fbd] under format; prior registration was null
27-02-25 12:53:11,679 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@31c628e7] under timestampadd; prior registration was null
27-02-25 12:53:11,681 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@8bd86c8] under timestampdiff; prior registration was null
27-02-25 12:53:11,681 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
27-02-25 12:53:11,681 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
27-02-25 12:53:11,682 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e4c0d8c] under current_date; prior registration was null
27-02-25 12:53:11,682 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e3315d9] under current_time; prior registration was null
27-02-25 12:53:11,683 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64db4967] under current_timestamp; prior registration was null
27-02-25 12:53:11,683 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
27-02-25 12:53:11,683 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
27-02-25 12:53:11,683 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
27-02-25 12:53:11,683 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@74e6094b] under local_date; prior registration was null
27-02-25 12:53:11,683 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a485a36] under local_time; prior registration was null
27-02-25 12:53:11,683 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5cf3157b] under local_datetime; prior registration was null
27-02-25 12:53:11,683 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@625dfff3] under offset_datetime; prior registration was null
27-02-25 12:53:11,691 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
27-02-25 12:53:11,692 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
27-02-25 12:53:11,692 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
27-02-25 12:53:11,692 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
27-02-25 12:53:11,692 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26350ea2] under instant; prior registration was null
27-02-25 12:53:11,692 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
27-02-25 12:53:11,694 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59696551] under sql; prior registration was null
27-02-25 12:53:11,694 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
27-02-25 12:53:11,694 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
27-02-25 12:53:11,695 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
27-02-25 12:53:11,695 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
27-02-25 12:53:11,695 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c83468e
27-02-25 12:53:11,695 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
27-02-25 12:53:11,695 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
27-02-25 12:53:11,695 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
27-02-25 12:53:11,695 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
27-02-25 12:53:11,695 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
27-02-25 12:53:11,696 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
27-02-25 12:53:11,696 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
27-02-25 12:53:11,696 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
27-02-25 12:53:11,697 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5f69e2b] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
27-02-25 12:53:11,698 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@984169e] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
27-02-25 12:53:11,698 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
27-02-25 12:53:11,698 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
27-02-25 12:53:11,698 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
27-02-25 12:53:11,698 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
27-02-25 12:53:11,698 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
27-02-25 12:53:11,698 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
27-02-25 12:53:11,698 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
27-02-25 12:53:11,698 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
27-02-25 12:53:11,699 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
27-02-25 12:53:11,699 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
27-02-25 12:53:11,699 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
27-02-25 12:53:11,699 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
27-02-25 12:53:11,699 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
27-02-25 12:53:11,699 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
27-02-25 12:53:11,703 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
27-02-25 12:53:11,703 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
27-02-25 12:53:11,705 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
27-02-25 12:53:11,705 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
27-02-25 12:53:11,705 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
27-02-25 12:53:11,706 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
27-02-25 12:53:11,714 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
27-02-25 12:53:11,715 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
27-02-25 12:53:11,716 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
27-02-25 12:53:11,716 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
27-02-25 12:53:11,716 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
27-02-25 12:53:11,716 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43f1bb92] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@268cbb86
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
27-02-25 12:53:11,717 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
27-02-25 12:53:11,718 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
27-02-25 12:53:11,727 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@46aa712c] under trunc; prior registration was null
27-02-25 12:53:11,727 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
27-02-25 12:53:11,727 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
27-02-25 12:53:11,727 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ada9c0c] under bitand; prior registration was null
27-02-25 12:53:11,728 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7412ed6b] under bitor; prior registration was null
27-02-25 12:53:11,728 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e7c351d] under bitxor; prior registration was null
27-02-25 12:53:11,728 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b4a0aef] under bitnot; prior registration was null
27-02-25 12:53:11,729 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
27-02-25 12:53:11,729 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
27-02-25 12:53:11,729 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
27-02-25 12:53:11,729 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
27-02-25 12:53:11,729 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
27-02-25 12:53:11,729 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
27-02-25 12:53:11,729 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
27-02-25 12:53:11,731 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
27-02-25 12:53:11,731 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
27-02-25 12:53:11,731 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
27-02-25 12:53:11,731 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
27-02-25 12:53:11,731 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
27-02-25 12:53:11,731 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
27-02-25 12:53:11,731 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@45cec376] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2e645fbd
27-02-25 12:53:11,732 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
27-02-25 12:53:11,732 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
27-02-25 12:53:11,732 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
27-02-25 12:53:11,732 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
27-02-25 12:53:11,732 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7a485a36
27-02-25 12:53:11,732 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5cf3157b
27-02-25 12:53:11,732 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
27-02-25 12:53:11,732 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26d41711] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74fab04a
27-02-25 12:53:11,733 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@298f0a0b] under chr; prior registration was null
27-02-25 12:53:11,733 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
27-02-25 12:53:11,733 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b960a7] under sysdate; prior registration was null
27-02-25 12:53:11,734 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@2f4e40d7] under listagg; prior registration was null
27-02-25 12:53:11,737 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
27-02-25 12:53:11,737 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
27-02-25 12:53:11,737 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
27-02-25 12:53:11,737 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
27-02-25 12:53:11,739 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
27-02-25 12:53:11,739 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
27-02-25 12:53:11,739 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
27-02-25 12:53:11,740 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
27-02-25 12:53:11,740 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
27-02-25 12:53:11,740 | DEBUG | HQL_FUNCTIONS        | avg(arg)
27-02-25 12:53:11,741 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
27-02-25 12:53:11,742 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
27-02-25 12:53:11,742 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
27-02-25 12:53:11,742 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
27-02-25 12:53:11,742 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
27-02-25 12:53:11,742 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
27-02-25 12:53:11,742 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
27-02-25 12:53:11,752 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
27-02-25 12:53:11,752 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
27-02-25 12:53:11,752 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
27-02-25 12:53:11,753 | DEBUG | HQL_FUNCTIONS        | Date curdate()
27-02-25 12:53:11,754 | DEBUG | HQL_FUNCTIONS        | Date current date
27-02-25 12:53:11,754 | DEBUG | HQL_FUNCTIONS        | Time current time
27-02-25 12:53:11,754 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
27-02-25 12:53:11,754 | DEBUG | HQL_FUNCTIONS        | Date current_date
27-02-25 12:53:11,756 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
27-02-25 12:53:11,756 | DEBUG | HQL_FUNCTIONS        | Time current_time
27-02-25 12:53:11,756 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
27-02-25 12:53:11,756 | DEBUG | HQL_FUNCTIONS        | Time curtime()
27-02-25 12:53:11,756 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
27-02-25 12:53:11,756 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 12:53:11,756 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
27-02-25 12:53:11,756 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
27-02-25 12:53:11,756 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
27-02-25 12:53:11,757 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | Instant instant
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
27-02-25 12:53:11,758 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
27-02-25 12:53:11,759 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
27-02-25 12:53:11,759 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
27-02-25 12:53:11,759 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
27-02-25 12:53:11,759 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
27-02-25 12:53:11,759 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
27-02-25 12:53:11,760 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
27-02-25 12:53:11,760 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
27-02-25 12:53:11,760 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
27-02-25 12:53:11,761 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
27-02-25 12:53:11,761 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
27-02-25 12:53:11,761 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
27-02-25 12:53:11,768 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
27-02-25 12:53:11,768 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
27-02-25 12:53:11,768 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
27-02-25 12:53:11,768 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
27-02-25 12:53:11,769 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | Double pi
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
27-02-25 12:53:11,770 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | Object sql
27-02-25 12:53:11,771 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | String str(arg)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | sum(arg)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
27-02-25 12:53:11,772 | DEBUG | HQL_FUNCTIONS        | String time(arg)
27-02-25 12:53:11,773 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
27-02-25 12:53:11,773 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 12:53:11,773 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
27-02-25 12:53:11,773 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
27-02-25 12:53:11,773 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
27-02-25 12:53:11,773 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
27-02-25 12:53:11,773 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
27-02-25 12:53:11,773 | DEBUG | HQL_FUNCTIONS        | Date utc_date
27-02-25 12:53:11,774 | DEBUG | HQL_FUNCTIONS        | Time utc_time
27-02-25 12:53:11,774 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
27-02-25 12:53:11,774 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
27-02-25 12:53:11,774 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
27-02-25 12:53:11,774 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
27-02-25 12:53:11,774 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
27-02-25 12:53:11,774 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
27-02-25 12:53:11,783 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
27-02-25 12:53:11,841 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
27-02-25 12:53:11,987 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 12:53:11,988 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
27-02-25 12:53:11,990 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
27-02-25 12:53:11,990 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
27-02-25 12:53:11,994 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
27-02-25 12:53:12,005 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
27-02-25 12:53:12,019 | TRACE | batch                | Using standard BatchBuilder (1)
27-02-25 12:53:12,028 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
27-02-25 12:53:12,034 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
27-02-25 12:53:12,040 | DEBUG | creation             | Starting post-init callbacks
27-02-25 12:53:12,062 | TRACE | MetadataContext      | Wrapping up metadata context...
27-02-25 12:53:12,071 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
27-02-25 12:53:12,071 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
27-02-25 12:53:12,071 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
27-02-25 12:53:12,101 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
27-02-25 12:53:12,109 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
27-02-25 12:53:12,110 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
27-02-25 12:53:12,111 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ed38226] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@279dd959]
27-02-25 12:53:12,114 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
27-02-25 12:53:12,115 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
27-02-25 12:53:12,119 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
27-02-25 12:53:12,119 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
27-02-25 12:53:12,124 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6c1cfa53
27-02-25 12:53:12,158 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: 15cd5ccc-d2e0-4fb9-94a4-5a94703e53df (<unnamed>)
27-02-25 12:53:12,158 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
27-02-25 12:53:12,158 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@279dd959] for TypeConfiguration
27-02-25 12:53:12,158 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
27-02-25 12:53:12,159 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
27-02-25 12:53:12,268 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
27-02-25 12:53:12,276 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
27-02-25 12:53:12,292 | TRACE | SessionImpl          | Opened Session [43fed217-bb86-4b80-9a00-3a19c96d0280] at timestamp: 1740671592292
27-02-25 12:53:12,295 | TRACE | SessionImpl          | Closing session [43fed217-bb86-4b80-9a00-3a19c96d0280]
27-02-25 12:53:12,295 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1ee47d9e]
27-02-25 12:53:12,295 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
27-02-25 12:53:12,296 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
27-02-25 12:53:12,296 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
27-02-25 12:53:12,296 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
27-02-25 12:53:12,296 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 12:53:12,297 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@279dd959] for TypeConfiguration
27-02-25 12:53:12,297 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@64920dc2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@279dd959]
27-02-25 12:53:12,298 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
27-02-25 12:53:12,298 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 12:53:12,304 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
27-02-25 16:48:31,701 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
27-02-25 16:48:31,716 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
27-02-25 16:48:31,716 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
27-02-25 16:48:31,779 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml
27-02-25 16:48:32,025 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
27-02-25 16:48:32,032 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
27-02-25 16:48:32,043 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
27-02-25 16:48:32,043 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
27-02-25 16:48:32,044 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
27-02-25 16:48:32,045 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
27-02-25 16:48:32,059 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.bicicletario.model.Usuario
		com.bicicletario.model.Cliente
		com.bicicletario.model.Bicicleta]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
27-02-25 16:48:32,069 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
27-02-25 16:48:32,079 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
27-02-25 16:48:32,122 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 16:48:32,123 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 16:48:32,123 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 16:48:32,124 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 16:48:32,124 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 16:48:32,126 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
27-02-25 16:48:32,127 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
27-02-25 16:48:32,129 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
27-02-25 16:48:32,130 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
27-02-25 16:48:32,132 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
27-02-25 16:48:32,133 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
27-02-25 16:48:32,134 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
27-02-25 16:48:32,134 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
27-02-25 16:48:32,136 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 16:48:32,136 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 16:48:32,137 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
27-02-25 16:48:32,138 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
27-02-25 16:48:32,139 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
27-02-25 16:48:32,140 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
27-02-25 16:48:32,141 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
27-02-25 16:48:32,142 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
27-02-25 16:48:32,143 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
27-02-25 16:48:32,144 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
27-02-25 16:48:32,146 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
27-02-25 16:48:32,147 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
27-02-25 16:48:32,148 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
27-02-25 16:48:32,149 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
27-02-25 16:48:32,150 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
27-02-25 16:48:32,151 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
27-02-25 16:48:32,220 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
27-02-25 16:48:32,223 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
27-02-25 16:48:32,258 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
27-02-25 16:48:32,262 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
27-02-25 16:48:32,272 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
27-02-25 16:48:32,282 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
27-02-25 16:48:32,283 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
27-02-25 16:48:32,284 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 16:48:32,284 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 16:48:32,285 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
27-02-25 16:48:32,287 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
27-02-25 16:48:32,288 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
27-02-25 16:48:32,290 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 16:48:32,291 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
27-02-25 16:48:32,291 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
27-02-25 16:48:32,291 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 16:48:32,293 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
27-02-25 16:48:32,315 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 16:48:32,318 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
27-02-25 16:48:32,320 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
27-02-25 16:48:32,321 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a6c1270
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@18a136ac
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@77d67cf3
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@77d67cf3
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6dee4f1b
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@176b3f44
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@176b3f44
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@176b3f44
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ee6f53
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@421bba99
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@421bba99
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@5d12a356
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@134d26af
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@134d26af
27-02-25 16:48:32,629 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@66ac5762
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@797cf65c
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@31bcf236
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@31bcf236
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@31bcf236
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@4b3ed2f0
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@4b3ed2f0
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4b3ed2f0
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@4fad9bb2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@4fad9bb2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4fad9bb2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@517d4a0d
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@517d4a0d
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@517d4a0d
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@7862f56
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@7862f56
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7862f56
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3a12c404
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3a12c404
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1941a8ff
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1941a8ff
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@22d7b4f8
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@149dd36b
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@38831718
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2c1156a7
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4982cc36
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4f1bfe23
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@e19bb76
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@e19bb76
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@512535ff
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@512535ff
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@61a88b8c
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22295ec4
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2e2ff723
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2e2ff723
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2e2ff723
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@324a0017
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@324a0017
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@324a0017
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6187d1f5
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2445445a
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@7502291e
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7502291e
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17aad511
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17aad511
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17aad511
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@487db668
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@46944ca9
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@22bac7bc
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22bac7bc
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@63798ca7
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63798ca7
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63798ca7
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@4612b856
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4612b856
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@22875539
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@22875539
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5674e1f2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5674e1f2
27-02-25 16:48:32,644 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@79c7532f
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@79c7532f
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@2a448449
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2a448449
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@32f232a5
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@43f82e78
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@93cf163
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@93cf163
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@39fcbef6
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@66565121
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2fc6f97f
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3d2ee678
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6179e425
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35f26e72
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2d6764b2
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@67304a40
27-02-25 16:48:32,660 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@49c6c24f
27-02-25 16:48:32,675 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
27-02-25 16:48:32,675 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
27-02-25 16:48:32,675 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@436bc36] into BootstrapContext; was [null]
27-02-25 16:48:32,675 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5fe1ce85] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@604c5de8]
27-02-25 16:48:32,941 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Usuario] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/]
27-02-25 16:48:32,941 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Cliente] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/]
27-02-25 16:48:32,941 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Bicicleta] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/]
27-02-25 16:48:32,941 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
27-02-25 16:48:32,941 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
27-02-25 16:48:32,957 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
27-02-25 16:48:32,957 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
27-02-25 16:48:32,957 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
27-02-25 16:48:32,972 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 16:48:32,972 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
27-02-25 16:48:32,972 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 16:48:32,988 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
27-02-25 16:48:33,004 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
27-02-25 16:48:33,004 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 16:48:33,004 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
27-02-25 16:48:33,004 | INFO  | pooling              | HHH10001003: Autocommit mode: false
27-02-25 16:48:33,004 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
27-02-25 16:48:33,004 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
27-02-25 16:48:34,197 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
27-02-25 16:48:34,241 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
27-02-25 16:48:34,241 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
27-02-25 16:48:34,242 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
27-02-25 16:48:34,371 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
27-02-25 16:48:34,376 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
27-02-25 16:48:34,377 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
27-02-25 16:48:34,400 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
27-02-25 16:48:34,400 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
27-02-25 16:48:34,411 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
27-02-25 16:48:34,411 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 16:48:34,424 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
27-02-25 16:48:34,425 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
27-02-25 16:48:34,426 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
27-02-25 16:48:34,458 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5af97169) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@99a78d7)
27-02-25 16:48:34,459 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@31da6b2e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61c76850)
27-02-25 16:48:34,459 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70242f38) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a22ad2b)
27-02-25 16:48:34,459 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48c3205a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@121c54fa)
27-02-25 16:48:34,459 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4390f46e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c6442c2)
27-02-25 16:48:34,460 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d746ce4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dbf5634)
27-02-25 16:48:34,460 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1948ea69) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47e4d9d0)
27-02-25 16:48:34,460 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49798e84) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ed06f69)
27-02-25 16:48:34,460 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3015db78) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@515ebef3)
27-02-25 16:48:34,464 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
27-02-25 16:48:34,464 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
27-02-25 16:48:34,465 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
27-02-25 16:48:34,470 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 16:48:34,471 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 16:48:34,479 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@aac3f4e
27-02-25 16:48:34,479 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@39fcbef6`
27-02-25 16:48:34,488 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
27-02-25 16:48:34,488 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
27-02-25 16:48:34,490 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
27-02-25 16:48:34,502 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 16:48:34,505 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 16:48:34,506 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 16:48:34,507 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 16:48:34,508 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 16:48:34,509 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 16:48:34,534 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
27-02-25 16:48:34,535 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 16:48:34,535 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 16:48:34,539 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58294867] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67c277a0]
27-02-25 16:48:34,613 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
27-02-25 16:48:34,643 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
27-02-25 16:48:34,663 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 16:48:34,664 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
27-02-25 16:48:34,669 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
27-02-25 16:48:35,182 | DEBUG | SessionFactoryImpl   | Building session factory
27-02-25 16:48:35,183 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
27-02-25 16:48:35,198 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
27-02-25 16:48:35,314 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 16:48:35,316 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\target\classes;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.15.Final\hibernate-entitymanager-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Player14109423498\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Player14109423498\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Player14109423498\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\jakarta.persistence\2.2.3\jakarta.persistence-2.2.3.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4fc3c165, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
27-02-25 16:48:35,319 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 16:48:35,319 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
27-02-25 16:48:35,327 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
27-02-25 16:48:35,487 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
27-02-25 16:48:35,488 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
27-02-25 16:48:35,490 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
27-02-25 16:48:35,492 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
27-02-25 16:48:35,495 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4acb7ecc] under count; prior registration was null
27-02-25 16:48:35,497 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67514bdd] under every; prior registration was null
27-02-25 16:48:35,497 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3b920bdc] under any; prior registration was null
27-02-25 16:48:35,498 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
27-02-25 16:48:35,498 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
27-02-25 16:48:35,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
27-02-25 16:48:35,500 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
27-02-25 16:48:35,500 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
27-02-25 16:48:35,501 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
27-02-25 16:48:35,501 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
27-02-25 16:48:35,501 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
27-02-25 16:48:35,501 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
27-02-25 16:48:35,504 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
27-02-25 16:48:35,504 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
27-02-25 16:48:35,504 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
27-02-25 16:48:35,504 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
27-02-25 16:48:35,505 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
27-02-25 16:48:35,506 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
27-02-25 16:48:35,506 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
27-02-25 16:48:35,506 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
27-02-25 16:48:35,511 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@574a89e2] under sinh; prior registration was null
27-02-25 16:48:35,513 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e1e9ef3] under cosh; prior registration was null
27-02-25 16:48:35,514 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3dd31157] under tanh; prior registration was null
27-02-25 16:48:35,514 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31c628e7] under pi; prior registration was null
27-02-25 16:48:35,514 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3240b2a4] under log; prior registration was null
27-02-25 16:48:35,516 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
27-02-25 16:48:35,516 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
27-02-25 16:48:35,516 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
27-02-25 16:48:35,516 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
27-02-25 16:48:35,519 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
27-02-25 16:48:35,520 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
27-02-25 16:48:35,521 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
27-02-25 16:48:35,521 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
27-02-25 16:48:35,521 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
27-02-25 16:48:35,523 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
27-02-25 16:48:35,524 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
27-02-25 16:48:35,524 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
27-02-25 16:48:35,526 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6e4c0d8c] under position; prior registration was null
27-02-25 16:48:35,530 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@57272109] under overlay; prior registration was null
27-02-25 16:48:35,531 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@17273273] under trim; prior registration was null
27-02-25 16:48:35,533 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3b27b497] under cast; prior registration was null
27-02-25 16:48:35,534 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b1534d3] under collate; prior registration was null
27-02-25 16:48:35,535 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@489091bd] under extract; prior registration was null
27-02-25 16:48:35,536 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
27-02-25 16:48:35,536 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
27-02-25 16:48:35,537 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3743539f] under ifnull; prior registration was null
27-02-25 16:48:35,538 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
27-02-25 16:48:35,538 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
27-02-25 16:48:35,539 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1afd72ef] under pad; prior registration was null
27-02-25 16:48:35,539 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7a81065e] under str; prior registration was null
27-02-25 16:48:35,543 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1b1c538d] under format; prior registration was null
27-02-25 16:48:35,544 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6cbd0674] under timestampadd; prior registration was null
27-02-25 16:48:35,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1a96d94c] under timestampdiff; prior registration was null
27-02-25 16:48:35,546 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
27-02-25 16:48:35,546 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
27-02-25 16:48:35,547 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ada9c0c] under current_date; prior registration was null
27-02-25 16:48:35,547 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7412ed6b] under current_time; prior registration was null
27-02-25 16:48:35,547 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e7c351d] under current_timestamp; prior registration was null
27-02-25 16:48:35,547 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
27-02-25 16:48:35,547 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
27-02-25 16:48:35,547 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b4a0aef] under local_date; prior registration was null
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@45cec376] under local_time; prior registration was null
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26d41711] under local_datetime; prior registration was null
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@298f0a0b] under offset_datetime; prior registration was null
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b960a7] under instant; prior registration was null
27-02-25 16:48:35,548 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
27-02-25 16:48:35,549 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2f4e40d7] under sql; prior registration was null
27-02-25 16:48:35,550 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
27-02-25 16:48:35,550 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
27-02-25 16:48:35,550 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
27-02-25 16:48:35,550 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
27-02-25 16:48:35,550 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3240b2a4
27-02-25 16:48:35,550 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
27-02-25 16:48:35,550 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
27-02-25 16:48:35,551 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
27-02-25 16:48:35,551 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
27-02-25 16:48:35,551 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
27-02-25 16:48:35,551 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
27-02-25 16:48:35,551 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
27-02-25 16:48:35,551 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
27-02-25 16:48:35,552 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@188ac8a3] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
27-02-25 16:48:35,553 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3650d4fc] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
27-02-25 16:48:35,553 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
27-02-25 16:48:35,553 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
27-02-25 16:48:35,553 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
27-02-25 16:48:35,553 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
27-02-25 16:48:35,553 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
27-02-25 16:48:35,553 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
27-02-25 16:48:35,553 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
27-02-25 16:48:35,554 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
27-02-25 16:48:35,554 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
27-02-25 16:48:35,554 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
27-02-25 16:48:35,554 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
27-02-25 16:48:35,554 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
27-02-25 16:48:35,554 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
27-02-25 16:48:35,556 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
27-02-25 16:48:35,556 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
27-02-25 16:48:35,559 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
27-02-25 16:48:35,560 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
27-02-25 16:48:35,560 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
27-02-25 16:48:35,560 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
27-02-25 16:48:35,574 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
27-02-25 16:48:35,574 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
27-02-25 16:48:35,574 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
27-02-25 16:48:35,575 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
27-02-25 16:48:35,575 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
27-02-25 16:48:35,575 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
27-02-25 16:48:35,575 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
27-02-25 16:48:35,575 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
27-02-25 16:48:35,575 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
27-02-25 16:48:35,575 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
27-02-25 16:48:35,576 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
27-02-25 16:48:35,576 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
27-02-25 16:48:35,576 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
27-02-25 16:48:35,576 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
27-02-25 16:48:35,576 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@aaa0f76] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6e4c0d8c
27-02-25 16:48:35,576 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
27-02-25 16:48:35,576 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
27-02-25 16:48:35,576 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
27-02-25 16:48:35,587 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@72e295cc] under trunc; prior registration was null
27-02-25 16:48:35,588 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
27-02-25 16:48:35,588 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
27-02-25 16:48:35,588 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c2584d3] under bitand; prior registration was null
27-02-25 16:48:35,588 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fa0450e] under bitor; prior registration was null
27-02-25 16:48:35,588 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37468787] under bitxor; prior registration was null
27-02-25 16:48:35,589 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51ec2856] under bitnot; prior registration was null
27-02-25 16:48:35,589 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
27-02-25 16:48:35,589 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
27-02-25 16:48:35,589 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
27-02-25 16:48:35,589 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
27-02-25 16:48:35,589 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
27-02-25 16:48:35,589 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
27-02-25 16:48:35,589 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
27-02-25 16:48:35,589 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@714f3da4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1b1c538d
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
27-02-25 16:48:35,590 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
27-02-25 16:48:35,591 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@45cec376
27-02-25 16:48:35,591 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@26d41711
27-02-25 16:48:35,591 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
27-02-25 16:48:35,591 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1caa9eb6] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31c628e7
27-02-25 16:48:35,591 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f53481b] under chr; prior registration was null
27-02-25 16:48:35,591 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
27-02-25 16:48:35,591 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fcd7d3f] under sysdate; prior registration was null
27-02-25 16:48:35,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@2e869098] under listagg; prior registration was null
27-02-25 16:48:35,596 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
27-02-25 16:48:35,597 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
27-02-25 16:48:35,598 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
27-02-25 16:48:35,598 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
27-02-25 16:48:35,599 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
27-02-25 16:48:35,599 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
27-02-25 16:48:35,599 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
27-02-25 16:48:35,599 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
27-02-25 16:48:35,599 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
27-02-25 16:48:35,599 | DEBUG | HQL_FUNCTIONS        | avg(arg)
27-02-25 16:48:35,600 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
27-02-25 16:48:35,601 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
27-02-25 16:48:35,601 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
27-02-25 16:48:35,601 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
27-02-25 16:48:35,601 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
27-02-25 16:48:35,601 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
27-02-25 16:48:35,601 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
27-02-25 16:48:35,601 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
27-02-25 16:48:35,601 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
27-02-25 16:48:35,601 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Date curdate()
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Date current date
27-02-25 16:48:35,602 | DEBUG | HQL_FUNCTIONS        | Time current time
27-02-25 16:48:35,603 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
27-02-25 16:48:35,603 | DEBUG | HQL_FUNCTIONS        | Date current_date
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | Time current_time
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | Time curtime()
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
27-02-25 16:48:35,604 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
27-02-25 16:48:35,605 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
27-02-25 16:48:35,605 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
27-02-25 16:48:35,605 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
27-02-25 16:48:35,605 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
27-02-25 16:48:35,605 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
27-02-25 16:48:35,605 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
27-02-25 16:48:35,605 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | Instant instant
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
27-02-25 16:48:35,606 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
27-02-25 16:48:35,607 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
27-02-25 16:48:35,608 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
27-02-25 16:48:35,608 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
27-02-25 16:48:35,608 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
27-02-25 16:48:35,608 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
27-02-25 16:48:35,608 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
27-02-25 16:48:35,608 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
27-02-25 16:48:35,608 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
27-02-25 16:48:35,608 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
27-02-25 16:48:35,609 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | Double pi
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
27-02-25 16:48:35,610 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
27-02-25 16:48:35,611 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
27-02-25 16:48:35,611 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
27-02-25 16:48:35,611 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
27-02-25 16:48:35,611 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
27-02-25 16:48:35,613 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
27-02-25 16:48:35,613 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
27-02-25 16:48:35,613 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
27-02-25 16:48:35,614 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
27-02-25 16:48:35,614 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
27-02-25 16:48:35,614 | DEBUG | HQL_FUNCTIONS        | Object sql
27-02-25 16:48:35,614 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
27-02-25 16:48:35,614 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
27-02-25 16:48:35,614 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | String str(arg)
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | sum(arg)
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | String time(arg)
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
27-02-25 16:48:35,615 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 16:48:35,616 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
27-02-25 16:48:35,616 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
27-02-25 16:48:35,616 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
27-02-25 16:48:35,616 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
27-02-25 16:48:35,616 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
27-02-25 16:48:35,616 | DEBUG | HQL_FUNCTIONS        | Date utc_date
27-02-25 16:48:35,616 | DEBUG | HQL_FUNCTIONS        | Time utc_time
27-02-25 16:48:35,616 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
27-02-25 16:48:35,616 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
27-02-25 16:48:35,617 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
27-02-25 16:48:35,617 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
27-02-25 16:48:35,617 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
27-02-25 16:48:35,617 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
27-02-25 16:48:35,628 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
27-02-25 16:48:35,637 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
27-02-25 16:48:35,785 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 16:48:35,786 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
27-02-25 16:48:35,788 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
27-02-25 16:48:35,788 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
27-02-25 16:48:35,792 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
27-02-25 16:48:35,805 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
27-02-25 16:48:35,809 | TRACE | batch                | Using standard BatchBuilder (1)
27-02-25 16:48:35,825 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
27-02-25 16:48:35,827 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
27-02-25 16:48:35,832 | DEBUG | creation             | Starting post-init callbacks
27-02-25 16:48:35,852 | TRACE | MetadataContext      | Wrapping up metadata context...
27-02-25 16:48:35,862 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
27-02-25 16:48:35,862 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
27-02-25 16:48:35,862 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
27-02-25 16:48:35,863 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
27-02-25 16:48:35,893 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
27-02-25 16:48:35,893 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
27-02-25 16:48:35,895 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58294867] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6232ffdb]
27-02-25 16:48:35,899 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
27-02-25 16:48:35,900 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
27-02-25 16:48:35,905 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
27-02-25 16:48:35,905 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
27-02-25 16:48:35,910 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@38f77cd9
27-02-25 16:48:35,911 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: df6e7088-cba0-449e-ac95-02ba758ed351 (<unnamed>)
27-02-25 16:48:35,911 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
27-02-25 16:48:35,911 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6232ffdb] for TypeConfiguration
27-02-25 16:48:35,911 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
27-02-25 16:48:35,912 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
27-02-25 16:48:36,017 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
27-02-25 16:48:36,027 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
27-02-25 16:48:36,042 | TRACE | SessionImpl          | Opened Session [49b24acb-4ab5-4561-8d5c-d2b71ee1e004] at timestamp: 1740685716042
27-02-25 16:48:36,044 | TRACE | SessionImpl          | Closing session [49b24acb-4ab5-4561-8d5c-d2b71ee1e004]
27-02-25 16:48:36,044 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1ee27d73]
27-02-25 16:48:36,044 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
27-02-25 16:48:36,045 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
27-02-25 16:48:36,045 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
27-02-25 16:48:36,045 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
27-02-25 16:48:36,045 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 16:48:36,046 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6232ffdb] for TypeConfiguration
27-02-25 16:48:36,046 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5583098b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6232ffdb]
27-02-25 16:48:36,047 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
27-02-25 16:48:36,047 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 16:48:36,053 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
27-02-25 17:44:39,113 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
27-02-25 17:44:39,135 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
27-02-25 17:44:39,135 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
27-02-25 17:44:39,194 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml
27-02-25 17:44:39,427 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
27-02-25 17:44:39,443 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
27-02-25 17:44:39,443 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
27-02-25 17:44:39,443 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
27-02-25 17:44:39,443 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
27-02-25 17:44:39,443 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
27-02-25 17:44:39,474 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.bicicletario.model.Usuario
		com.bicicletario.model.Cliente
		com.bicicletario.model.Bicicleta]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
27-02-25 17:44:39,474 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
27-02-25 17:44:39,490 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 17:44:39,521 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
27-02-25 17:44:39,537 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
27-02-25 17:44:39,552 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
27-02-25 17:44:39,615 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
27-02-25 17:44:39,615 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
27-02-25 17:44:39,646 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
27-02-25 17:44:39,662 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
27-02-25 17:44:39,662 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
27-02-25 17:44:39,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
27-02-25 17:44:39,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
27-02-25 17:44:39,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 17:44:39,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 17:44:39,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
27-02-25 17:44:39,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
27-02-25 17:44:39,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
27-02-25 17:44:39,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 17:44:39,677 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
27-02-25 17:44:39,693 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
27-02-25 17:44:39,693 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 17:44:39,693 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
27-02-25 17:44:39,708 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 17:44:39,708 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
27-02-25 17:44:39,724 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
27-02-25 17:44:39,724 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@33fe57a9
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4982cc36
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4982cc36
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@691939c9
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4f1bfe23
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4f1bfe23
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@e19bb76
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@e19bb76
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@e19bb76
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@512535ff
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@512535ff
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@512535ff
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@61a88b8c
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@22295ec4
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@22295ec4
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 17:44:40,037 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2e2ff723
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@324a0017
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6187d1f5
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2445445a
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7502291e
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@17aad511
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@487db668
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@487db668
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@46944ca9
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@46944ca9
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22bac7bc
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22bac7bc
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@63798ca7
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@63798ca7
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4612b856
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4612b856
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@22875539
27-02-25 17:44:40,052 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5674e1f2
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@79c7532f
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@79c7532f
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2a448449
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@32f232a5
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@43f82e78
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@e54303
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@e54303
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e8df99a
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2dc995f4
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@2f40e5db
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f40e5db
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@517566b
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@517566b
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@64b73e7a
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@64b73e7a
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@64b73e7a
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@530712d
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@530712d
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@530712d
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2df6226d
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@12ed9db6
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@4ff4357f
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4ff4357f
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@49cb9cb5
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@49cb9cb5
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@49cb9cb5
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@55322aab
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2b4c1d96
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@45fd9a4d
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@45fd9a4d
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@50468873
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@50468873
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@50468873
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@146587a2
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@146587a2
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5f0e9815
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5f0e9815
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76884e4b
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76884e4b
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@126945f9
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@126945f9
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@2a898881
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2a898881
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@16c63f5
27-02-25 17:44:40,068 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35229f85
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@1c32386d
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1c32386d
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@63a270c9
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@37c7595
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3ed242a4
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1199fe66
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@614df0a4
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1fdf1c5
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2d96543c
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@73a2e526
27-02-25 17:44:40,083 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7d64e326
27-02-25 17:44:40,083 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
27-02-25 17:44:40,083 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
27-02-25 17:44:40,099 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1e8ce150] into BootstrapContext; was [null]
27-02-25 17:44:40,099 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@604f2bd2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d3ac898]
27-02-25 17:44:40,349 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Usuario] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/]
27-02-25 17:44:40,352 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Cliente] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/]
27-02-25 17:44:40,355 | DEBUG | ScanningCoordinator  | Unable to resolve class [com.bicicletario.model.Bicicleta] named in persistence unit [file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/]
27-02-25 17:44:40,356 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
27-02-25 17:44:40,357 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
27-02-25 17:44:40,375 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
27-02-25 17:44:40,375 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
27-02-25 17:44:40,377 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
27-02-25 17:44:40,385 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 17:44:40,385 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
27-02-25 17:44:40,386 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 17:44:40,396 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
27-02-25 17:44:40,410 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
27-02-25 17:44:40,410 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 17:44:40,410 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
27-02-25 17:44:40,410 | INFO  | pooling              | HHH10001003: Autocommit mode: false
27-02-25 17:44:40,417 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
27-02-25 17:44:40,417 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
27-02-25 17:44:41,562 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
27-02-25 17:44:41,609 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
27-02-25 17:44:41,609 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
27-02-25 17:44:41,609 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
27-02-25 17:44:41,786 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
27-02-25 17:44:41,791 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
27-02-25 17:44:41,792 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
27-02-25 17:44:41,810 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
27-02-25 17:44:41,810 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
27-02-25 17:44:41,822 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
27-02-25 17:44:41,822 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 17:44:41,834 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
27-02-25 17:44:41,834 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
27-02-25 17:44:41,836 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
27-02-25 17:44:41,864 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@67403656) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a6482a9)
27-02-25 17:44:41,865 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f9ab969) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@12f8b1d8)
27-02-25 17:44:41,865 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@746cd757) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ae372b9)
27-02-25 17:44:41,865 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2098d37d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77b9d0c7)
27-02-25 17:44:41,865 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65fd6708) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@749ab7b4)
27-02-25 17:44:41,866 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@127f9161) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bf94401)
27-02-25 17:44:41,869 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2532b351) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4349754)
27-02-25 17:44:41,869 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a2eea2a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b967222)
27-02-25 17:44:41,869 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b0ee03a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ba05e38)
27-02-25 17:44:41,874 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
27-02-25 17:44:41,874 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
27-02-25 17:44:41,875 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
27-02-25 17:44:41,880 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 17:44:41,881 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 17:44:41,890 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@ae7950d
27-02-25 17:44:41,891 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@63a270c9`
27-02-25 17:44:41,901 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
27-02-25 17:44:41,902 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
27-02-25 17:44:41,903 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
27-02-25 17:44:41,915 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 17:44:41,918 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 17:44:41,919 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 17:44:41,920 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 17:44:41,920 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 17:44:41,923 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 17:44:41,928 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
27-02-25 17:44:41,928 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 17:44:41,928 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 17:44:41,932 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bc9a775] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27b000f7]
27-02-25 17:44:42,005 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
27-02-25 17:44:42,048 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
27-02-25 17:44:42,069 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 17:44:42,070 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
27-02-25 17:44:42,075 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
27-02-25 17:44:42,514 | DEBUG | SessionFactoryImpl   | Building session factory
27-02-25 17:44:42,514 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
27-02-25 17:44:42,530 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
27-02-25 17:44:42,655 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 17:44:42,655 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\target\classes;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.15.Final\hibernate-entitymanager-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Player14109423498\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Player14109423498\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Player14109423498\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\eclipselink\4.0.5\eclipselink-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-core\4.0.5\jaxb-core-4.0.5.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4eba373c, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
27-02-25 17:44:42,655 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 17:44:42,655 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
27-02-25 17:44:42,670 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
27-02-25 17:44:42,780 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
27-02-25 17:44:42,780 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
27-02-25 17:44:42,780 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
27-02-25 17:44:42,780 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
27-02-25 17:44:42,780 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3f1ed068] under count; prior registration was null
27-02-25 17:44:42,780 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@58434b19] under every; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7d3fb0ef] under any; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
27-02-25 17:44:42,795 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e9469b8] under sinh; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a08efdc] under cosh; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57272109] under tanh; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59696551] under pi; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@648d0e6d] under log; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@b1534d3] under position; prior registration was null
27-02-25 17:44:42,811 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5db6b845] under overlay; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@445bb139] under trim; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2eeb0f9b] under cast; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b1c538d] under collate; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6cbd0674] under extract; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2da3b078] under ifnull; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a869a16] under pad; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7412ed6b] under str; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2b960a7] under format; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2f4e40d7] under timestampadd; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@340a8894] under timestampdiff; prior registration was null
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
27-02-25 17:44:42,827 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@70e94ecb] under current_date; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56cfe111] under current_time; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e446d92] under current_timestamp; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57f9b467] under local_date; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6d5c2745] under local_time; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@44b29496] under local_datetime; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1947596f] under offset_datetime; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3078cac] under instant; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@43d9f1a2] under sql; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@648d0e6d
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@71e4b308] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@11900483] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14a049f9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@b1534d3
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
27-02-25 17:44:42,842 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@33063f5b] under trunc; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15405bd6] under bitand; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352ed70d] under bitor; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70730db] under bitxor; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5793b87] under bitnot; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@12704e15] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2b960a7
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6d5c2745
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@44b29496
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@512575e9] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59696551
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f1a16fe] under chr; prior registration was null
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
27-02-25 17:44:42,858 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2373ad99] under sysdate; prior registration was null
27-02-25 17:44:42,873 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@48a0c8aa] under listagg; prior registration was null
27-02-25 17:44:42,873 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
27-02-25 17:44:42,873 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
27-02-25 17:44:42,873 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
27-02-25 17:44:42,873 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
27-02-25 17:44:42,873 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
27-02-25 17:44:42,873 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | avg(arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Date curdate()
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Date current date
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Time current time
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Date current_date
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Time current_time
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Time curtime()
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Instant instant
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double pi
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
27-02-25 17:44:42,967 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Object sql
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String str(arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | sum(arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String time(arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Date utc_date
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Time utc_time
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
27-02-25 17:44:42,983 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
27-02-25 17:44:42,998 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
27-02-25 17:44:42,998 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
27-02-25 17:44:43,180 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 17:44:43,180 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
27-02-25 17:44:43,183 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
27-02-25 17:44:43,183 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
27-02-25 17:44:43,185 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
27-02-25 17:44:43,204 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
27-02-25 17:44:43,210 | TRACE | batch                | Using standard BatchBuilder (1)
27-02-25 17:44:43,219 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
27-02-25 17:44:43,222 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
27-02-25 17:44:43,228 | DEBUG | creation             | Starting post-init callbacks
27-02-25 17:44:43,257 | TRACE | MetadataContext      | Wrapping up metadata context...
27-02-25 17:44:43,288 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
27-02-25 17:44:43,288 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
27-02-25 17:44:43,288 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
27-02-25 17:44:43,289 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
27-02-25 17:44:43,301 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
27-02-25 17:44:43,302 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
27-02-25 17:44:43,304 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bc9a775] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4667c4c1]
27-02-25 17:44:43,311 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
27-02-25 17:44:43,311 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
27-02-25 17:44:43,317 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
27-02-25 17:44:43,318 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
27-02-25 17:44:43,324 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6ca372ef
27-02-25 17:44:43,325 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: a625aec1-0c22-4edb-aca8-98e82f3f06e0 (<unnamed>)
27-02-25 17:44:43,325 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
27-02-25 17:44:43,325 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4667c4c1] for TypeConfiguration
27-02-25 17:44:43,325 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
27-02-25 17:44:43,326 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
27-02-25 17:44:43,484 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
27-02-25 17:44:43,494 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
27-02-25 17:44:43,514 | TRACE | SessionImpl          | Opened Session [09151d9d-9136-4eaa-8e38-d5710da7837d] at timestamp: 1740689083514
27-02-25 17:44:43,518 | TRACE | SessionImpl          | Closing session [09151d9d-9136-4eaa-8e38-d5710da7837d]
27-02-25 17:44:43,519 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4e642ee1]
27-02-25 17:44:43,519 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
27-02-25 17:44:43,520 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
27-02-25 17:44:43,520 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
27-02-25 17:44:43,520 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
27-02-25 17:44:43,521 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 17:44:43,521 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4667c4c1] for TypeConfiguration
27-02-25 17:44:43,522 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5731d3a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4667c4c1]
27-02-25 17:44:43,522 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
27-02-25 17:44:43,522 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 17:44:43,528 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
27-02-25 18:02:48,720 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
27-02-25 18:02:48,737 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
27-02-25 18:02:48,737 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
27-02-25 18:02:48,800 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml
27-02-25 18:02:49,041 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
27-02-25 18:02:49,047 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
27-02-25 18:02:49,051 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
27-02-25 18:02:49,052 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
27-02-25 18:02:49,053 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
27-02-25 18:02:49,053 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
27-02-25 18:02:49,075 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/NetBeansProjects/BicicletarioAp/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		model.Aluguel
		model.Bicicleta
		model.Cliente
		model.Usuario]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
27-02-25 18:02:49,085 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
27-02-25 18:02:49,094 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
27-02-25 18:02:49,122 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 18:02:49,123 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 18:02:49,124 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
27-02-25 18:02:49,124 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 18:02:49,124 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
27-02-25 18:02:49,125 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
27-02-25 18:02:49,127 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
27-02-25 18:02:49,129 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
27-02-25 18:02:49,131 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
27-02-25 18:02:49,132 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
27-02-25 18:02:49,133 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
27-02-25 18:02:49,133 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
27-02-25 18:02:49,134 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
27-02-25 18:02:49,136 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 18:02:49,136 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
27-02-25 18:02:49,136 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
27-02-25 18:02:49,137 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
27-02-25 18:02:49,138 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
27-02-25 18:02:49,139 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
27-02-25 18:02:49,140 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
27-02-25 18:02:49,141 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
27-02-25 18:02:49,142 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
27-02-25 18:02:49,143 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
27-02-25 18:02:49,145 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
27-02-25 18:02:49,145 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
27-02-25 18:02:49,147 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
27-02-25 18:02:49,148 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
27-02-25 18:02:49,149 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
27-02-25 18:02:49,150 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
27-02-25 18:02:49,214 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
27-02-25 18:02:49,217 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
27-02-25 18:02:49,249 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
27-02-25 18:02:49,254 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
27-02-25 18:02:49,261 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
27-02-25 18:02:49,269 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
27-02-25 18:02:49,270 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
27-02-25 18:02:49,271 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 18:02:49,271 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
27-02-25 18:02:49,272 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
27-02-25 18:02:49,274 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
27-02-25 18:02:49,274 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
27-02-25 18:02:49,277 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 18:02:49,278 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
27-02-25 18:02:49,279 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
27-02-25 18:02:49,279 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
27-02-25 18:02:49,280 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
27-02-25 18:02:49,306 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 18:02:49,309 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
27-02-25 18:02:49,312 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
27-02-25 18:02:49,314 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
27-02-25 18:02:49,642 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 18:02:49,643 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 18:02:49,643 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@71529963
27-02-25 18:02:49,643 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@61a88b8c
27-02-25 18:02:49,643 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@61a88b8c
27-02-25 18:02:49,643 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@22295ec4
27-02-25 18:02:49,644 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@22295ec4
27-02-25 18:02:49,644 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 18:02:49,645 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5adb0db3
27-02-25 18:02:49,645 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 18:02:49,645 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 18:02:49,645 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3f270e0a
27-02-25 18:02:49,645 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 18:02:49,645 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 18:02:49,646 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a760689
27-02-25 18:02:49,646 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 18:02:49,646 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7241a47d
27-02-25 18:02:49,646 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@70f59913
27-02-25 18:02:49,647 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 18:02:49,647 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@77258e59
27-02-25 18:02:49,647 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5dcd8c7a
27-02-25 18:02:49,647 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2250b9f2
27-02-25 18:02:49,647 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 18:02:49,647 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 18:02:49,648 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7e3181aa
27-02-25 18:02:49,648 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 18:02:49,648 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 18:02:49,648 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@253d9f73
27-02-25 18:02:49,649 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 18:02:49,649 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 18:02:49,649 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@142269f2
27-02-25 18:02:49,649 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 18:02:49,649 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 18:02:49,649 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@331acdad
27-02-25 18:02:49,649 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 18:02:49,650 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 18:02:49,650 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@41d426b5
27-02-25 18:02:49,650 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 18:02:49,650 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@8dbfffb
27-02-25 18:02:49,650 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 18:02:49,650 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f316aeb
27-02-25 18:02:49,651 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 18:02:49,651 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 18:02:49,651 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6aa3a905
27-02-25 18:02:49,651 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@a22cb6a
27-02-25 18:02:49,651 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 18:02:49,651 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5dd1c9f2
27-02-25 18:02:49,651 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@59b38691
27-02-25 18:02:49,652 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@2e2ff723
27-02-25 18:02:49,652 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2e2ff723
27-02-25 18:02:49,652 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@2e2ff723
27-02-25 18:02:49,652 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@324a0017
27-02-25 18:02:49,652 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@6187d1f5
27-02-25 18:02:49,652 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2445445a
27-02-25 18:02:49,652 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@7502291e
27-02-25 18:02:49,652 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7502291e
27-02-25 18:02:49,653 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@17aad511
27-02-25 18:02:49,653 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@17aad511
27-02-25 18:02:49,653 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@487db668
27-02-25 18:02:49,653 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@46944ca9
27-02-25 18:02:49,653 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22bac7bc
27-02-25 18:02:49,653 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63798ca7
27-02-25 18:02:49,653 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4612b856
27-02-25 18:02:49,654 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@22875539
27-02-25 18:02:49,654 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5674e1f2
27-02-25 18:02:49,654 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5674e1f2
27-02-25 18:02:49,654 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@79c7532f
27-02-25 18:02:49,655 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@79c7532f
27-02-25 18:02:49,655 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2a448449
27-02-25 18:02:49,655 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2a448449
27-02-25 18:02:49,655 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@32f232a5
27-02-25 18:02:49,655 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@32f232a5
27-02-25 18:02:49,655 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@43f82e78
27-02-25 18:02:49,656 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@43f82e78
27-02-25 18:02:49,656 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e54303
27-02-25 18:02:49,656 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e8df99a
27-02-25 18:02:49,656 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2dc995f4
27-02-25 18:02:49,656 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2dc995f4
27-02-25 18:02:49,656 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2f40e5db
27-02-25 18:02:49,656 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@517566b
27-02-25 18:02:49,657 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@64b73e7a
27-02-25 18:02:49,657 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@530712d
27-02-25 18:02:49,657 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@530712d
27-02-25 18:02:49,657 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2df6226d
27-02-25 18:02:49,657 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12ed9db6
27-02-25 18:02:49,657 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@4ff4357f
27-02-25 18:02:49,657 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ff4357f
27-02-25 18:02:49,658 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@49cb9cb5
27-02-25 18:02:49,658 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49cb9cb5
27-02-25 18:02:49,658 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55322aab
27-02-25 18:02:49,658 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55322aab
27-02-25 18:02:49,658 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55322aab
27-02-25 18:02:49,658 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
27-02-25 18:02:49,658 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
27-02-25 18:02:49,658 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2b4c1d96
27-02-25 18:02:49,659 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45fd9a4d
27-02-25 18:02:49,659 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@50468873
27-02-25 18:02:49,659 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@146587a2
27-02-25 18:02:49,659 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@146587a2
27-02-25 18:02:49,659 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5f0e9815
27-02-25 18:02:49,659 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5f0e9815
27-02-25 18:02:49,659 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5f0e9815
27-02-25 18:02:49,660 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@76884e4b
27-02-25 18:02:49,660 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@126945f9
27-02-25 18:02:49,660 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@2a898881
27-02-25 18:02:49,660 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2a898881
27-02-25 18:02:49,660 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@16c63f5
27-02-25 18:02:49,660 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16c63f5
27-02-25 18:02:49,661 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16c63f5
27-02-25 18:02:49,661 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@35229f85
27-02-25 18:02:49,661 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@35229f85
27-02-25 18:02:49,661 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d3c5255
27-02-25 18:02:49,661 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d3c5255
27-02-25 18:02:49,661 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@b1712f3
27-02-25 18:02:49,661 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@b1712f3
27-02-25 18:02:49,661 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6986bbaf
27-02-25 18:02:49,662 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6986bbaf
27-02-25 18:02:49,662 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@4879dfad
27-02-25 18:02:49,662 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4879dfad
27-02-25 18:02:49,662 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@4758820d
27-02-25 18:02:49,662 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@74eb909f
27-02-25 18:02:49,671 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@1e0f9063
27-02-25 18:02:49,671 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e0f9063
27-02-25 18:02:49,674 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@2d96543c
27-02-25 18:02:49,674 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@73a2e526
27-02-25 18:02:49,674 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7d64e326
27-02-25 18:02:49,674 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@13f95696
27-02-25 18:02:49,675 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@cd1d761
27-02-25 18:02:49,675 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68be8808
27-02-25 18:02:49,675 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@32193bea
27-02-25 18:02:49,675 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6b8d96d9
27-02-25 18:02:49,675 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@69653e16
27-02-25 18:02:49,679 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
27-02-25 18:02:49,682 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
27-02-25 18:02:49,689 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@30b19518] into BootstrapContext; was [null]
27-02-25 18:02:49,689 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@363042d7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@366ac49b]
27-02-25 18:02:49,930 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
27-02-25 18:02:49,930 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
27-02-25 18:02:49,949 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
27-02-25 18:02:49,949 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
27-02-25 18:02:49,949 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
27-02-25 18:02:49,949 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 18:02:49,949 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
27-02-25 18:02:49,949 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 18:02:49,964 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
27-02-25 18:02:49,980 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
27-02-25 18:02:49,980 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 18:02:49,980 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
27-02-25 18:02:49,980 | INFO  | pooling              | HHH10001003: Autocommit mode: false
27-02-25 18:02:49,980 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
27-02-25 18:02:49,980 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
27-02-25 18:02:51,041 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
27-02-25 18:02:51,082 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
27-02-25 18:02:51,082 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
27-02-25 18:02:51,083 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
27-02-25 18:02:51,228 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
27-02-25 18:02:51,231 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
27-02-25 18:02:51,232 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
27-02-25 18:02:51,247 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
27-02-25 18:02:51,248 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
27-02-25 18:02:51,257 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
27-02-25 18:02:51,257 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 18:02:51,267 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
27-02-25 18:02:51,267 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
27-02-25 18:02:51,269 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
27-02-25 18:02:51,288 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@545607f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39109136)
27-02-25 18:02:51,289 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27c04377) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34dc85a)
27-02-25 18:02:51,289 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@67403656) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a6482a9)
27-02-25 18:02:51,289 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f9ab969) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12f8b1d8)
27-02-25 18:02:51,290 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@746cd757) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ae372b9)
27-02-25 18:02:51,290 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2098d37d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77b9d0c7)
27-02-25 18:02:51,290 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65fd6708) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@749ab7b4)
27-02-25 18:02:51,290 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@127f9161) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bf94401)
27-02-25 18:02:51,290 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2532b351) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4349754)
27-02-25 18:02:51,294 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
27-02-25 18:02:51,294 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
27-02-25 18:02:51,295 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
27-02-25 18:02:51,301 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 18:02:51,301 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
27-02-25 18:02:51,318 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@5e8604bf
27-02-25 18:02:51,318 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2d96543c`
27-02-25 18:02:51,327 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
27-02-25 18:02:51,327 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
27-02-25 18:02:51,328 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
27-02-25 18:02:51,334 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 18:02:51,334 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 18:02:51,334 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
27-02-25 18:02:51,335 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 18:02:51,335 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 18:02:51,335 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
27-02-25 18:02:51,337 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
27-02-25 18:02:51,337 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 18:02:51,337 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
27-02-25 18:02:51,340 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@153d4abb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d4c273c]
27-02-25 18:02:51,418 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
27-02-25 18:02:51,620 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
27-02-25 18:02:51,665 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
27-02-25 18:02:51,681 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 18:02:51,683 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
27-02-25 18:02:51,687 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
27-02-25 18:02:52,124 | DEBUG | SessionFactoryImpl   | Building session factory
27-02-25 18:02:52,124 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
27-02-25 18:02:52,234 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 18:02:52,249 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\target\classes;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.15.Final\hibernate-entitymanager-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Player14109423498\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Player14109423498\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Player14109423498\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\eclipselink\4.0.5\eclipselink-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-core\4.0.5\jaxb-core-4.0.5.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\NetBeansProjects\BicicletarioAp\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@252a8aae, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
27-02-25 18:02:52,249 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
27-02-25 18:02:52,249 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
27-02-25 18:02:52,249 | DEBUG | SessionFactoryImpl   | Session factory constructed with filter configurations : {}
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4012d5bc] under count; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3c98781a] under every; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3f736a16] under any; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
27-02-25 18:02:52,468 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e67f5f2] under sinh; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fd53053] under cosh; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4527f70a] under tanh; prior registration was null
27-02-25 18:02:52,484 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@707b1a44] under pi; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7132a9dc] under log; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registering alternate key : length -> character_length
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5c723f2d] under position; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f4a3a8d] under overlay; prior registration was null
27-02-25 18:02:52,499 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7b27e8f4] under trim; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6920b0bc] under cast; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65f651eb] under collate; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@24f870ee] under extract; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1886991b] under ifnull; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3bbf6abe] under pad; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@358ab600] under str; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@32177fa5] under format; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@235d29d6] under timestampadd; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2a8a4e0c] under timestampdiff; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registering alternate key : dateadd -> timestampadd
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registering alternate key : datediff -> timestampdiff
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20f6f88c] under current_date; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4277127c] under current_time; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4c7e978c] under current_timestamp; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current date -> current_date
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current time -> current_time
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current timestamp -> current_timestamp
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@354e7004] under local_date; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@22ebccb9] under local_time; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5875de6a] under local_datetime; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@608fe01f] under offset_datetime; prior registration was null
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local date -> local_date
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local time -> local_time
27-02-25 18:02:52,515 | DEBUG | SqmFunctionRegistry  | Registering alternate key : local datetime -> local_datetime
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registering alternate key : offset datetime -> offset_datetime
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2687725a] under instant; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registering alternate key : current_instant -> instant
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2e1ddc90] under sql; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7132a9dc
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a8ab2] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3f50b680] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registering alternate key : day -> dayofmonth
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
27-02-25 18:02:52,546 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54db056b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5c723f2d
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
27-02-25 18:02:52,562 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
27-02-25 18:02:52,577 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@43a65cd8] under trunc; prior registration was null
27-02-25 18:02:52,577 | DEBUG | SqmFunctionRegistry  | Registering alternate key : truncate -> trunc
27-02-25 18:02:52,577 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
27-02-25 18:02:52,577 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f1ef9d6] under bitand; prior registration was null
27-02-25 18:02:52,577 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17461db] under bitor; prior registration was null
27-02-25 18:02:52,577 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fd9e827] under bitxor; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e682398] under bitnot; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@670b3ca] under format; prior registration was org.hibernate.dialect.function.FormatFunction@32177fa5
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@22ebccb9
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5875de6a
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24a86066] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@707b1a44
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54402c04] under chr; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registering alternate key : char -> chr
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b3bb1f7] under sysdate; prior registration was null
27-02-25 18:02:52,593 | DEBUG | SqmFunctionRegistry  | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6c5ddccd] under listagg; prior registration was null
27-02-25 18:02:52,593 | DEBUG | HQL_FUNCTIONS        | abs(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double acos(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | adddate(DATE datetime, INTEGER days)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | addtime(TIME datetime, TIME time)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Boolean any(BOOLEAN arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer ascii(STRING arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double asin(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double atan(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double atan2(NUMERIC arg0, NUMERIC arg1)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | avg(arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | bit_and(arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer bit_length(STRING_OR_CLOB arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | bit_or(arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | bitand(arg0, arg1)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | bitnot(arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | bitor(arg0, arg1)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | bitxor(arg0, arg1)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | cast(arg as Type)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | ceiling(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Character char(INTEGER arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer character_length(STRING_OR_CLOB arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Character chr(INTEGER arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | coalesce(arg0[, arg1[, ...]])
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String collate(STRING string as COLLATION collation)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String concat(STRING string0[, STRING string1[, ...]])
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double cos(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double cosh(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double cot(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Long count([distinct ]{arg|*})
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer crc32(arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Date curdate()
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Date current date
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Time current time
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Timestamp current timestamp
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Date current_date
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Instant current_instant
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Time current_time
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Timestamp current_timestamp
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Time curtime()
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Date date(arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer datediff(DATE end, DATE start)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer day(DATE arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String dayname(DATE arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer dayofmonth(DATE arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer dayofweek(DATE arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer dayofyear(DATE arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double degrees(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Boolean every(BOOLEAN arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double exp(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | extract(TEMPORAL_UNIT field from TEMPORAL arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | floor(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String format(TEMPORAL datetime as STRING pattern)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer hour(TIME arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | ifnull(arg0, arg1)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Instant instant
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Date last_day(DATE arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String left(STRING string, INTEGER length)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer length(STRING_OR_CLOB arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String listagg(STRING arg0, STRING arg1)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double ln(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | LocalDate local date
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local datetime
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | LocalTime local time
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | LocalDate local_date
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | LocalDateTime local_datetime
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | LocalTime local_time
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Timestamp localtime
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Timestamp localtimestamp
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Integer locate(STRING pattern, STRING string[, INTEGER start])
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double log(NUMERIC arg0[, NUMERIC arg1])
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double log10(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Double log2(NUMERIC arg)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String lower(STRING string)
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String lpad(string, length[, padding])
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | String ltrim(STRING string[, STRING characters])
27-02-25 18:02:52,609 | DEBUG | HQL_FUNCTIONS        | Date makedate(INTEGER year, INTEGER dayofyear)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | max(COMPARABLE arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String md5(arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Integer microsecond(TIME arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | min(COMPARABLE arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Integer minute(TIME arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Integer mod(INTEGER arg0, INTEGER arg1)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Integer month(DATE arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String monthname(DATE arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Timestamp now()
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | nullif(arg0, arg1)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Integer octet_length(STRING_OR_CLOB arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset datetime
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | OffsetDateTime offset_datetime
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Double pi
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Integer position(STRING pattern in STRING string)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Double power(NUMERIC arg0, NUMERIC arg1)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Integer quarter(DATE arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Double radians(NUMERIC arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Double rand([INTEGER seed])
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String repeat(STRING string, INTEGER times)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String replace(STRING string, STRING pattern, STRING replacement)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String reverse(STRING arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String right(STRING string, INTEGER length)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | round(NUMERIC number[, INTEGER places])
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String rpad(string, length[, padding])
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String rtrim(STRING string[, STRING characters])
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | Integer second(TIME arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String sha(arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String sha1(arg)
27-02-25 18:02:52,624 | DEBUG | HQL_FUNCTIONS        | String sha2(arg0, arg1)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Integer sign(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double sin(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double sinh(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | String soundex(arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | String space(INTEGER arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Object sql
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double sqrt(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double stddev(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double stddev_pop(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double stddev_samp(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | String str(arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | subdate(DATE datetime, INTEGER days)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | String substr(STRING string, INTEGER start[, INTEGER length])
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | subtime(TIME datetime, TIME time)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | sum(arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Timestamp sysdate()
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double tan(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double tanh(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | String time(arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Timestamp timestamp(arg0[, arg1])
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | basicType@12(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | trunc( ... )
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | truncate( ... )
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | String upper(STRING string)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Date utc_date
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Time utc_time
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Timestamp utc_timestamp
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double var_pop(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double var_samp(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Double variance(NUMERIC arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Integer week(DATE arg)
27-02-25 18:02:52,640 | DEBUG | HQL_FUNCTIONS        | Integer year(DATE arg)
27-02-25 18:02:52,656 | DEBUG | cache                | Starting QueryInterpretationCache(2048)
27-02-25 18:02:52,656 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
27-02-25 18:02:52,827 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
27-02-25 18:02:52,827 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
27-02-25 18:02:52,843 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
27-02-25 18:02:52,843 | DEBUG | EntityCopyObserverFactoryInitiator | Configured EntityCopyObserver strategy: disallow
27-02-25 18:02:52,843 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
27-02-25 18:02:52,937 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
27-02-25 18:02:52,937 | TRACE | batch                | Using standard BatchBuilder (1)
27-02-25 18:02:52,952 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
27-02-25 18:02:52,952 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
27-02-25 18:02:52,968 | DEBUG | creation             | Starting post-init callbacks
27-02-25 18:02:52,984 | TRACE | MetadataContext      | Wrapping up metadata context...
27-02-25 18:02:53,031 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
27-02-25 18:02:53,031 | DEBUG | JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
27-02-25 18:02:53,031 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
27-02-25 18:02:53,031 | DEBUG | JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
27-02-25 18:02:53,046 | DEBUG | StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
27-02-25 18:02:53,046 | INFO  | JtaPlatformInitiator | HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
27-02-25 18:02:53,046 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@153d4abb] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@ea52184]
27-02-25 18:02:53,046 | DEBUG | NamedObjectRepository | Checking 0 named HQL queries
27-02-25 18:02:53,046 | DEBUG | NamedObjectRepository | Checking 0 named SQL queries
27-02-25 18:02:53,062 | DEBUG | SchemaManagementToolCoordinator | No actions found; doing nothing
27-02-25 18:02:53,062 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
27-02-25 18:02:53,062 | DEBUG | SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@766a49c7
27-02-25 18:02:53,062 | DEBUG | SessionFactoryRegistry | Registering SessionFactory: d1f9b6b2-ac8d-4ac1-9b4d-c33268212113 (<unnamed>)
27-02-25 18:02:53,062 | DEBUG | SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
27-02-25 18:02:53,062 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@ea52184] for TypeConfiguration
27-02-25 18:02:53,062 | DEBUG | SessionFactoryImpl   | Instantiated SessionFactory
27-02-25 18:02:53,062 | TRACE | SessionFactoryImpl$SessionBuilderImpl | Opening Hibernate Session.  tenant=null
27-02-25 18:02:53,140 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
27-02-25 18:02:53,156 | DEBUG | StatisticsInitiator  | Statistics initialized [enabled=false]
27-02-25 18:02:53,171 | TRACE | SessionImpl          | Opened Session [3c18bafc-bf8e-4702-92c2-d0cedcccc781] at timestamp: 1740690173171
27-02-25 18:02:53,171 | TRACE | SessionImpl          | Closing session [3c18bafc-bf8e-4702-92c2-d0cedcccc781]
27-02-25 18:02:53,171 | TRACE | JdbcCoordinatorImpl  | Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@60bb7995]
27-02-25 18:02:53,171 | TRACE | ResourceRegistryStandardImpl | Releasing JDBC resources
27-02-25 18:02:53,171 | TRACE | LogicalConnectionManagedImpl | Closing logical connection
27-02-25 18:02:53,171 | TRACE | LogicalConnectionManagedImpl | Logical connection closed
27-02-25 18:02:53,171 | DEBUG | SessionFactoryImpl   | HHH000031: Closing
27-02-25 18:02:53,171 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
27-02-25 18:02:53,171 | TRACE | TypeConfiguration$Scope | Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@ea52184] for TypeConfiguration
27-02-25 18:02:53,171 | DEBUG | TypeConfiguration$Scope | Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@663f237a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ea52184]
27-02-25 18:02:53,171 | DEBUG | AbstractServiceRegistryImpl | Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
27-02-25 18:02:53,171 | INFO  | pooling              | HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/bicicletario]
27-02-25 18:02:53,187 | DEBUG | BootstrapServiceRegistryImpl | Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
02-03-25 17:11:55,455 | DEBUG | logging              | Logging Provider: org.jboss.logging.Log4jLoggerProvider
02-03-25 17:11:55,697 | TRACE | HibernatePersistenceProvider | Starting createEntityManagerFactory for persistenceUnitName PERSISTENCE_UNIT
02-03-25 17:11:55,697 | TRACE | HibernatePersistenceProvider | Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : PERSISTENCE_UNIT
02-03-25 17:11:55,840 | TRACE | PersistenceXmlParser | Attempting to parse persistence.xml file : file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml
02-03-25 17:11:56,059 | TRACE | ArchiveHelper        | JAR URL from URL Entry: file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/META-INF/persistence.xml >> file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
02-03-25 17:11:56,081 | TRACE | PersistenceXmlParser | Persistence unit name from persistence.xml : PERSISTENCE_UNIT
02-03-25 17:11:56,081 | DEBUG | HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
02-03-25 17:11:56,081 | DEBUG | HibernatePersistenceProvider | Checking persistence-unit [name=PERSISTENCE_UNIT, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [PERSISTENCE_UNIT]
02-03-25 17:11:56,081 | DEBUG | ProviderChecker      | Persistence-unit [PERSISTENCE_UNIT] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
02-03-25 17:11:56,081 | TRACE | ProviderChecker      | Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
02-03-25 17:11:56,112 | DEBUG | LogHelper            | PersistenceUnitInfo [
	name: PERSISTENCE_UNIT
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Player14109423498/Documents/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT/target/classes/
	Shared Cache Mode: ENABLE_SELECTIVE
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		model.Aluguel
		model.Bicicleta
		model.Cliente
		model.Usuario]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 0397154#_!54179330_#!WSX_yhn#!
		hibernate.formate_sql: true
		hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/bicicletario
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		jakarta.persistence.jdbc.user: luck]
02-03-25 17:11:56,128 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
02-03-25 17:11:56,269 | DEBUG | IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
02-03-25 17:11:56,394 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
02-03-25 17:11:56,394 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 17:11:56,394 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
02-03-25 17:11:56,394 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 17:11:56,394 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
02-03-25 17:11:56,394 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
02-03-25 17:11:56,409 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
02-03-25 17:11:56,425 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
02-03-25 17:11:56,425 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
02-03-25 17:11:56,425 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
02-03-25 17:11:56,425 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
02-03-25 17:11:56,425 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
02-03-25 17:11:56,425 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
02-03-25 17:11:56,425 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
02-03-25 17:11:56,425 | TRACE | StrategySelectorImpl | Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
02-03-25 17:11:56,550 | INFO  | Version              | HHH000412: Hibernate ORM core version 6.4.4.Final
02-03-25 17:11:56,565 | DEBUG | Environment          | HHH000206: 'hibernate.properties' not found
02-03-25 17:11:56,620 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
02-03-25 17:11:56,626 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
02-03-25 17:11:56,632 | DEBUG | factory              | Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
02-03-25 17:11:56,652 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
02-03-25 17:11:56,652 | DEBUG | factory              | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
02-03-25 17:11:56,662 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
02-03-25 17:11:56,663 | DEBUG | factory              | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
02-03-25 17:11:56,663 | DEBUG | factory              | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
02-03-25 17:11:56,665 | DEBUG | factory              | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
02-03-25 17:11:56,666 | DEBUG | factory              | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
02-03-25 17:11:56,668 | DEBUG | factory              | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
02-03-25 17:11:56,668 | DEBUG | factory              | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
02-03-25 17:11:56,669 | DEBUG | factory              | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
02-03-25 17:11:56,669 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
02-03-25 17:11:56,670 | DEBUG | factory              | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
02-03-25 17:11:56,696 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 17:11:56,698 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.cache.spi.RegionFactory]
02-03-25 17:11:56,700 | DEBUG | RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
02-03-25 17:11:56,702 | INFO  | RegionFactoryInitiator | HHH000026: Second-level cache disabled
02-03-25 17:11:57,035 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4982cc36
02-03-25 17:11:57,035 | DEBUG | BasicTypeRegistry    | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4982cc36
02-03-25 17:11:57,035 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4982cc36
02-03-25 17:11:57,036 | DEBUG | BasicTypeRegistry    | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@691939c9
02-03-25 17:11:57,036 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@691939c9
02-03-25 17:11:57,036 | DEBUG | BasicTypeRegistry    | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4f1bfe23
02-03-25 17:11:57,036 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4f1bfe23
02-03-25 17:11:57,036 | DEBUG | BasicTypeRegistry    | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@e19bb76
02-03-25 17:11:57,036 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@e19bb76
02-03-25 17:11:57,036 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@512535ff
02-03-25 17:11:57,037 | DEBUG | BasicTypeRegistry    | Adding type registration byte -> org.hibernate.type.BasicTypeReference@512535ff
02-03-25 17:11:57,037 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@512535ff
02-03-25 17:11:57,037 | DEBUG | BasicTypeRegistry    | Adding type registration binary -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 17:11:57,037 | DEBUG | BasicTypeRegistry    | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 17:11:57,037 | DEBUG | BasicTypeRegistry    | Adding type registration [B -> org.hibernate.type.BasicTypeReference@71529963
02-03-25 17:11:57,038 | DEBUG | BasicTypeRegistry    | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@61a88b8c
02-03-25 17:11:57,038 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@61a88b8c
02-03-25 17:11:57,038 | DEBUG | BasicTypeRegistry    | Adding type registration image -> org.hibernate.type.BasicTypeReference@22295ec4
02-03-25 17:11:57,038 | DEBUG | BasicTypeRegistry    | Adding type registration blob -> org.hibernate.type.BasicTypeReference@5adb0db3
02-03-25 17:11:57,038 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5adb0db3
02-03-25 17:11:57,039 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3f270e0a
02-03-25 17:11:57,039 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1a760689
02-03-25 17:11:57,039 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7241a47d
02-03-25 17:11:57,039 | DEBUG | BasicTypeRegistry    | Adding type registration short -> org.hibernate.type.BasicTypeReference@7241a47d
02-03-25 17:11:57,039 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7241a47d
02-03-25 17:11:57,039 | DEBUG | BasicTypeRegistry    | Adding type registration integer -> org.hibernate.type.BasicTypeReference@70f59913
02-03-25 17:11:57,039 | DEBUG | BasicTypeRegistry    | Adding type registration int -> org.hibernate.type.BasicTypeReference@70f59913
02-03-25 17:11:57,039 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@70f59913
02-03-25 17:11:57,040 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@77258e59
02-03-25 17:11:57,040 | DEBUG | BasicTypeRegistry    | Adding type registration long -> org.hibernate.type.BasicTypeReference@77258e59
02-03-25 17:11:57,040 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@77258e59
02-03-25 17:11:57,040 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@5dcd8c7a
02-03-25 17:11:57,040 | DEBUG | BasicTypeRegistry    | Adding type registration float -> org.hibernate.type.BasicTypeReference@5dcd8c7a
02-03-25 17:11:57,040 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5dcd8c7a
02-03-25 17:11:57,040 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@2250b9f2
02-03-25 17:11:57,041 | DEBUG | BasicTypeRegistry    | Adding type registration double -> org.hibernate.type.BasicTypeReference@2250b9f2
02-03-25 17:11:57,041 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2250b9f2
02-03-25 17:11:57,041 | DEBUG | BasicTypeRegistry    | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 17:11:57,041 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7e3181aa
02-03-25 17:11:57,041 | DEBUG | BasicTypeRegistry    | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 17:11:57,041 | DEBUG | BasicTypeRegistry    | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@253d9f73
02-03-25 17:11:57,041 | DEBUG | BasicTypeRegistry    | Adding type registration character -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 17:11:57,042 | DEBUG | BasicTypeRegistry    | Adding type registration char -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 17:11:57,042 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@142269f2
02-03-25 17:11:57,042 | DEBUG | BasicTypeRegistry    | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@331acdad
02-03-25 17:11:57,042 | DEBUG | BasicTypeRegistry    | Adding type registration string -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 17:11:57,042 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@41d426b5
02-03-25 17:11:57,042 | DEBUG | BasicTypeRegistry    | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@8dbfffb
02-03-25 17:11:57,043 | DEBUG | BasicTypeRegistry    | Adding type registration characters -> org.hibernate.type.BasicTypeReference@f316aeb
02-03-25 17:11:57,043 | DEBUG | BasicTypeRegistry    | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@f316aeb
02-03-25 17:11:57,043 | DEBUG | BasicTypeRegistry    | Adding type registration [C -> org.hibernate.type.BasicTypeReference@f316aeb
02-03-25 17:11:57,043 | DEBUG | BasicTypeRegistry    | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6aa3a905
02-03-25 17:11:57,043 | DEBUG | BasicTypeRegistry    | Adding type registration text -> org.hibernate.type.BasicTypeReference@a22cb6a
02-03-25 17:11:57,043 | DEBUG | BasicTypeRegistry    | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5dd1c9f2
02-03-25 17:11:57,043 | DEBUG | BasicTypeRegistry    | Adding type registration clob -> org.hibernate.type.BasicTypeReference@59b38691
02-03-25 17:11:57,044 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@59b38691
02-03-25 17:11:57,044 | DEBUG | BasicTypeRegistry    | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 17:11:57,044 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2e2ff723
02-03-25 17:11:57,044 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@324a0017
02-03-25 17:11:57,044 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6187d1f5
02-03-25 17:11:57,044 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2445445a
02-03-25 17:11:57,045 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7502291e
02-03-25 17:11:57,045 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@17aad511
02-03-25 17:11:57,049 | DEBUG | BasicTypeRegistry    | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@487db668
02-03-25 17:11:57,050 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@46944ca9
02-03-25 17:11:57,053 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@46944ca9
02-03-25 17:11:57,054 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@22bac7bc
02-03-25 17:11:57,054 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@22bac7bc
02-03-25 17:11:57,054 | DEBUG | BasicTypeRegistry    | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@63798ca7
02-03-25 17:11:57,054 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@63798ca7
02-03-25 17:11:57,054 | DEBUG | BasicTypeRegistry    | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4612b856
02-03-25 17:11:57,054 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4612b856
02-03-25 17:11:57,054 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@22875539
02-03-25 17:11:57,055 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@22875539
02-03-25 17:11:57,055 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5674e1f2
02-03-25 17:11:57,055 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79c7532f
02-03-25 17:11:57,055 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a448449
02-03-25 17:11:57,057 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a448449
02-03-25 17:11:57,058 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@32f232a5
02-03-25 17:11:57,058 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@43f82e78
02-03-25 17:11:57,058 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e54303
02-03-25 17:11:57,058 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@e8df99a
02-03-25 17:11:57,059 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@e8df99a
02-03-25 17:11:57,059 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2dc995f4
02-03-25 17:11:57,059 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f40e5db
02-03-25 17:11:57,059 | DEBUG | BasicTypeRegistry    | Adding type registration date -> org.hibernate.type.BasicTypeReference@517566b
02-03-25 17:11:57,059 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@517566b
02-03-25 17:11:57,059 | DEBUG | BasicTypeRegistry    | Adding type registration time -> org.hibernate.type.BasicTypeReference@64b73e7a
02-03-25 17:11:57,059 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@64b73e7a
02-03-25 17:11:57,059 | DEBUG | BasicTypeRegistry    | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@530712d
02-03-25 17:11:57,060 | DEBUG | BasicTypeRegistry    | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@530712d
02-03-25 17:11:57,060 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@530712d
02-03-25 17:11:57,060 | DEBUG | BasicTypeRegistry    | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2df6226d
02-03-25 17:11:57,060 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2df6226d
02-03-25 17:11:57,060 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2df6226d
02-03-25 17:11:57,062 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@12ed9db6
02-03-25 17:11:57,062 | DEBUG | BasicTypeRegistry    | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4ff4357f
02-03-25 17:11:57,062 | DEBUG | BasicTypeRegistry    | Adding type registration instant -> org.hibernate.type.BasicTypeReference@49cb9cb5
02-03-25 17:11:57,062 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49cb9cb5
02-03-25 17:11:57,062 | DEBUG | BasicTypeRegistry    | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 17:11:57,062 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 17:11:57,062 | DEBUG | BasicTypeRegistry    | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55322aab
02-03-25 17:11:57,063 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2b4c1d96
02-03-25 17:11:57,063 | DEBUG | BasicTypeRegistry    | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@45fd9a4d
02-03-25 17:11:57,063 | DEBUG | BasicTypeRegistry    | Adding type registration class -> org.hibernate.type.BasicTypeReference@50468873
02-03-25 17:11:57,063 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@50468873
02-03-25 17:11:57,063 | DEBUG | BasicTypeRegistry    | Adding type registration currency -> org.hibernate.type.BasicTypeReference@146587a2
02-03-25 17:11:57,064 | DEBUG | BasicTypeRegistry    | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@146587a2
02-03-25 17:11:57,064 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@146587a2
02-03-25 17:11:57,064 | DEBUG | BasicTypeRegistry    | Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 17:11:57,064 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f0e9815
02-03-25 17:11:57,064 | DEBUG | BasicTypeRegistry    | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@76884e4b
02-03-25 17:11:57,064 | DEBUG | BasicTypeRegistry    | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@76884e4b
02-03-25 17:11:57,064 | DEBUG | BasicTypeRegistry    | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@126945f9
02-03-25 17:11:57,065 | DEBUG | BasicTypeRegistry    | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@126945f9
02-03-25 17:11:57,065 | DEBUG | BasicTypeRegistry    | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2a898881
02-03-25 17:11:57,065 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2a898881
02-03-25 17:11:57,065 | DEBUG | BasicTypeRegistry    | Adding type registration url -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 17:11:57,065 | DEBUG | BasicTypeRegistry    | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@16c63f5
02-03-25 17:11:57,065 | DEBUG | BasicTypeRegistry    | Adding type registration vector -> org.hibernate.type.BasicTypeReference@35229f85
02-03-25 17:11:57,065 | DEBUG | BasicTypeRegistry    | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d3c5255
02-03-25 17:11:57,075 | DEBUG | BasicTypeRegistry    | Adding type registration object -> org.hibernate.type.JavaObjectType@6399551e
02-03-25 17:11:57,075 | DEBUG | BasicTypeRegistry    | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6399551e
02-03-25 17:11:57,077 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@37c7595
02-03-25 17:11:57,078 | DEBUG | BasicTypeRegistry    | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3ed242a4
02-03-25 17:11:57,078 | DEBUG | BasicTypeRegistry    | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1199fe66
02-03-25 17:11:57,078 | DEBUG | BasicTypeRegistry    | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@614df0a4
02-03-25 17:11:57,078 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1fdf1c5
02-03-25 17:11:57,078 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d96543c
02-03-25 17:11:57,078 | DEBUG | BasicTypeRegistry    | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@73a2e526
02-03-25 17:11:57,078 | DEBUG | BasicTypeRegistry    | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7d64e326
02-03-25 17:11:57,079 | DEBUG | BasicTypeRegistry    | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@13f95696
02-03-25 17:11:57,084 | TRACE | SqmFunctionRegistry  | SqmFunctionRegistry created
02-03-25 17:11:57,086 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
02-03-25 17:11:57,092 | DEBUG | BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@604f2bd2] into BootstrapContext; was [null]
02-03-25 17:11:57,093 | DEBUG | BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d3ac898] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b73be9f]
02-03-25 17:11:57,371 | DEBUG | BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
02-03-25 17:11:57,371 | DEBUG | ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
02-03-25 17:11:57,391 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
02-03-25 17:11:57,391 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
02-03-25 17:11:57,393 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
02-03-25 17:11:57,403 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 17:11:57,403 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
02-03-25 17:11:57,403 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 17:11:57,413 | WARN  | pooling              | HHH10001002: Using built-in connection pool (not intended for production use)
02-03-25 17:11:57,444 | INFO  | pooling              | HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
02-03-25 17:11:57,444 | INFO  | pooling              | HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/bicicletario]
02-03-25 17:11:57,444 | INFO  | pooling              | HHH10001001: Connection properties: {password=0397154#_!54179330_#!WSX_yhn#!, user=luck}
02-03-25 17:11:57,444 | INFO  | pooling              | HHH10001003: Autocommit mode: false
02-03-25 17:11:57,449 | DEBUG | pooling              | Initializing Connection pool with 1 Connections
02-03-25 17:11:57,449 | INFO  | pooling              | HHH10001115: Connection pool size: 20 (min=1)
02-03-25 17:11:58,509 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
02-03-25 17:11:58,547 | DEBUG | JdbcEnvironmentInitiator | Database ->
       name : MySQL
    version : 8.0.40
      major : 8
      minor : 0
02-03-25 17:11:58,547 | DEBUG | JdbcEnvironmentInitiator | Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
02-03-25 17:11:58,547 | DEBUG | JdbcEnvironmentInitiator | JDBC version : 4.2
02-03-25 17:11:58,677 | WARN  | deprecation          | HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-03-25 17:11:58,677 | DEBUG | dialect              | HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
02-03-25 17:11:58,677 | WARN  | deprecation          | HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
02-03-25 17:11:58,693 | DEBUG | IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in more than one case
02-03-25 17:11:58,693 | DEBUG | IdentifierHelperBuilder | IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
02-03-25 17:11:58,693 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [bicicletario]
02-03-25 17:11:58,693 | TRACE | NormalizingIdentifierHelperImpl | Normalizing identifier quoting [null]
02-03-25 17:11:58,709 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
02-03-25 17:11:58,709 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
02-03-25 17:11:58,709 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
02-03-25 17:11:58,724 | DEBUG | DdlTypeRegistry      | addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47e4d9d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49798e84)
02-03-25 17:11:58,724 | DEBUG | DdlTypeRegistry      | addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ed06f69) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3015db78)
02-03-25 17:11:58,724 | DEBUG | DdlTypeRegistry      | addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@515ebef3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@545607f2)
02-03-25 17:11:58,724 | DEBUG | DdlTypeRegistry      | addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39109136) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27c04377)
02-03-25 17:11:58,724 | DEBUG | DdlTypeRegistry      | addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34dc85a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67403656)
02-03-25 17:11:58,724 | DEBUG | DdlTypeRegistry      | addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a6482a9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f9ab969)
02-03-25 17:11:58,724 | DEBUG | DdlTypeRegistry      | addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@12f8b1d8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@746cd757)
02-03-25 17:11:58,724 | DEBUG | DdlTypeRegistry      | addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ae372b9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2098d37d)
02-03-25 17:11:58,724 | DEBUG | DdlTypeRegistry      | addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77b9d0c7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65fd6708)
02-03-25 17:11:58,724 | DEBUG | JdbcTypeRegistry     | addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
02-03-25 17:11:58,724 | DEBUG | JdbcTypeRegistry     | addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
02-03-25 17:11:58,724 | DEBUG | JdbcTypeRegistry     | addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
02-03-25 17:11:58,740 | DEBUG | JdbcTypeRegistry     | addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
02-03-25 17:11:58,740 | DEBUG | JdbcTypeRegistry     | addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
02-03-25 17:11:58,740 | DEBUG | BasicTypeRegistry    | Adding type registration null -> org.hibernate.type.NullType@7207cb51
02-03-25 17:11:58,740 | DEBUG | BasicTypeRegistry    | Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@37c7595`
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration Duration -> basicType@1(java.time.Duration,3015)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
02-03-25 17:11:58,756 | DEBUG | BasicTypeRegistry    | Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
02-03-25 17:11:58,771 | DEBUG | TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@377008df] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@540dbda9]
02-03-25 17:11:58,849 | DEBUG | Namespace            | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
02-03-25 17:11:58,903 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
02-03-25 17:11:58,965 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
02-03-25 17:11:58,981 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
02-03-25 17:11:58,983 | TRACE | BatchFetchStyle      | Interpreting BatchFetchStyle from setting : null
02-03-25 17:11:58,988 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
02-03-25 17:11:59,671 | DEBUG | SessionFactoryImpl   | Building session factory
02-03-25 17:11:59,671 | TRACE | AbstractServiceRegistryImpl | Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
02-03-25 17:11:59,790 | DEBUG | SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
02-03-25 17:11:59,793 | DEBUG | SessionFactoryImpl   | Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\Player14109423498\Documents\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\target\classes;C:\Users\Player14109423498\.m2\repository\org\hibernate\orm\hibernate-core\6.4.4.Final\hibernate-core-6.4.4.Final.jar;C:\Users\Player14109423498\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Player14109423498\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Player14109423498\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Player14109423498\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Player14109423498\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Player14109423498\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Player14109423498\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.15.Final\hibernate-entitymanager-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Player14109423498\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Player14109423498\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Player14109423498\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Player14109423498\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Player14109423498\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Player14109423498\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Player14109423498\.m2\repository\org\netbeans\external\AbsoluteLayout\RELEASE240\AbsoluteLayout-RELEASE240.jar;C:\Users\Player14109423498\.m2\repository\org\proyecto-adalid\adalid-alfa\6.0.0\adalid-alfa-6.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-translate\2.53.0\google-cloud-translate-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-api\1.67.1\grpc-api-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\errorprone\error_prone_annotations\2.35.1\error_prone_annotations-2.35.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-stub\1.67.1\grpc-stub-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf\1.67.1\grpc-protobuf-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-protobuf-lite\1.67.1\grpc-protobuf-lite-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\api-common\2.40.0\api-common-2.40.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auto\value\auto-value-annotations\1.11.0\auto-value-annotations-1.11.0.jar;C:\Users\Player14109423498\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-common-protos\2.48.0\proto-google-common-protos-2.48.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3beta1\0.135.0\proto-google-cloud-translate-v3beta1-0.135.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-cloud-translate-v3\2.53.0\proto-google-cloud-translate-v3-2.53.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\guava\33.3.1-jre\guava-33.3.1-jre.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Player14109423498\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Player14109423498\.m2\repository\org\checkerframework\checker-qual\3.47.0\checker-qual-3.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax\2.57.0\gax-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-api\0.31.1\opencensus-api-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-grpc\2.57.0\gax-grpc-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-inprocess\1.67.1\grpc-inprocess-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-core\1.67.1\grpc-core-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\android\annotations\4.1.1.4\annotations-4.1.1.4.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.24\animal-sniffer-annotations-1.24.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-alts\1.67.1\grpc-alts-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-grpclb\1.67.1\grpc-grpclb-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\org\conscrypt\conscrypt-openjdk-uber\2.5.2\conscrypt-openjdk-uber-2.5.2.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-auth\1.67.1\grpc-auth-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-netty-shaded\1.67.1\grpc-netty-shaded-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-util\1.67.1\grpc-util-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\perfmark\perfmark-api\0.27.0\perfmark-api-0.27.0.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-googleapis\1.67.1\grpc-googleapis-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-xds\1.67.1\grpc-xds-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-services\1.67.1\grpc-services-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\re2j\re2j\1.7\re2j-1.7.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\gax-httpjson\2.57.0\gax-httpjson-2.57.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-gson\1.45.0\google-http-client-gson-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\protobuf\protobuf-java-util\3.25.5\protobuf-java-util-3.25.5.jar;C:\Users\Player14109423498\.m2\repository\org\threeten\threetenbp\1.7.0\threetenbp-1.7.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core\2.47.0\google-cloud-core-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api\grpc\proto-google-iam-v1\1.43.0\proto-google-iam-v1-1.43.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\cloud\google-cloud-core-http\2.47.0\google-cloud-core-http-2.47.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\api-client\google-api-client\2.7.0\google-api-client-2.7.0.jar;C:\Users\Player14109423498\.m2\repository\commons-codec\commons-codec\1.17.1\commons-codec-1.17.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\oauth-client\google-oauth-client\1.36.0\google-oauth-client-1.36.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-apache-v2\1.45.0\google-http-client-apache-v2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-appengine\1.45.0\google-http-client-appengine-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\io\opencensus\opencensus-contrib-http-util\0.31.1\opencensus-contrib-http-util-0.31.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\apis\google-api-services-translate\v2-rev20170525-2.0.0\google-api-services-translate-v2-rev20170525-2.0.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-credentials\1.29.0\google-auth-library-credentials-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\auth\google-auth-library-oauth2-http\1.29.0\google-auth-library-oauth2-http-1.29.0.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client\1.45.0\google-http-client-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Player14109423498\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Player14109423498\.m2\repository\io\grpc\grpc-context\1.67.1\grpc-context-1.67.1.jar;C:\Users\Player14109423498\.m2\repository\com\google\http-client\google-http-client-jackson2\1.45.0\google-http-client-jackson2-1.45.0.jar;C:\Users\Player14109423498\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.0\jackson-core-2.18.0.jar;C:\Users\Player14109423498\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\Player14109423498\.m2\repository\commons-io\commons-io\2.17.0\commons-io-2.17.0.jar;C:\Users\Player14109423498\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\org\slf4j\slf4j-reload4j\2.0.16\slf4j-reload4j-2.0.16.jar;C:\Users\Player14109423498\.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar;C:\Users\Player14109423498\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Player14109423498\.m2\repository\org\apache\maven\maven-artifact\3.9.9\maven-artifact-3.9.9.jar;C:\Users\Player14109423498\.m2\repository\org\codehaus\plexus\plexus-utils\3.5.1\plexus-utils-3.5.1.jar;C:\Users\Player14109423498\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Player14109423498\.m2\repository\org\reflections\reflections\0.10.2\reflections-0.10.2.jar;C:\Users\Player14109423498\.m2\repository\org\javassist\javassist\3.28.0-GA\javassist-3.28.0-GA.jar;C:\Users\Player14109423498\.m2\repository\net\sourceforge\plantuml\plantuml\1.2025.0\plantuml-1.2025.0.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath\1.0.7\jlatexmath-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-greek\1.0.7\jlatexmath-font-greek-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\scilab\forge\jlatexmath-font-cyrillic\1.0.7\jlatexmath-font-cyrillic-1.0.7.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.core\0.9.1\org.eclipse.elk.core-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.graph\0.9.1\org.eclipse.elk.graph-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.common\2.12.0\org.eclipse.emf.common-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore\2.12.0\org.eclipse.emf.ecore-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\emf\org.eclipse.emf.ecore.xmi\2.12.0\org.eclipse.emf.ecore.xmi-2.12.0.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.layered\0.9.1\org.eclipse.elk.alg.layered-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.common\0.9.1\org.eclipse.elk.alg.common-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\elk\org.eclipse.elk.alg.mrtree\0.9.1\org.eclipse.elk.alg.mrtree-0.9.1.jar;C:\Users\Player14109423498\.m2\repository\org\eclipse\persistence\eclipselink\4.0.5\eclipselink-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\Player14109423498\.m2\repository\com\sun\xml\bind\jaxb-core\4.0.5\jaxb-core-4.0.5.jar, sun.awt.enableExtraMouseButtons=true, java.vm.vendor=Azul Systems, Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=http://www.azul.com/, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, os.name=Windows 10, java.vm.specification.version=23, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=BR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Apache NetBeans\jdk\bin, sun.java.command=br.com.bicicletario.bicicletarioap.BicicletarioAp, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Player14109423498, user.language=pt, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Apache NetBeans\jdk, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=PERSISTENCE_UNIT, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=Player14109423498, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/bicicletario, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Zulu23.32+11-CA, hibernate.formate_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://www.azul.com/support/, java.io.tmpdir=C:\Users\PLAYER~1\AppData\Local\Temp\, java.version=23.0.2, user.dir=C:\Users\Player14109423498\Documents\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT\br.com.bicicletario_BicicletarioAp_jar_1.0-SNAPSHOT, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/bicicletario, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4b97c4ad, native.encoding=UTF-8, java.library.path=C:\Program Files\Apache NetBeans\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\Player14109423498\AppData\Local\Microsoft\WindowsApps;C:\Users\Player14109423498\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Player14109423498\apache-maven-3.9.9-bin;;., stderr.encoding=UTF-8, java.vendor=Azul Systems, Inc., java.vm.info=mixed mode, sharing, java.vm.version=23.0.2+7, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=67.0}
